[
  {
    "text": "You don't mention what OS you're using, but some general observations:\n\n\nOn Windows, Visual Studio is the standard IDE. The ~~Express~~ Community version is free to download and use. Its \"intellisense\" is second to none. The only downside is that the compiler doesn't support the latest standards as well as Clang and GCC.\n\n\nI use a Mac, and I can highly recommend CLion by Jetbrains (it's also available for Windows and Linux). The only downside is that it's a paid product (although they do offer a one month free trial).\n\n\nQtCreator is another multiplatform IDE that is widely used. I've found it to be faster than CLion, though it's missing some handy functions that CLion has. It is free, though.\n\n\nLastly, if you're using Linux or MacOS then many people swear by Emacs. (Many other people swear at it, though.) It's not an IDE in the traditional sense, but it can be configured to do just about anything, if you're the kind of person who likes tinkering with that sort of thing.",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0y97y5/"
  },
  {
    "text": "A link to a good reference;\nhttps://m.reddit.com/r/learnprogramming/wiki/tools",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0y9ae5/"
  },
  {
    "text": "I use Kdevelop  as an ide, fast and lots of useful features. Not sure how easy it is to install on windows though",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yr4oi/"
  },
  {
    "text": "Vim.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yaije/"
  },
  {
    "text": "On Linux, eclipse. Better vim emulation than clion and doesn't just work with cmake. Better indexing and features than qtcreator (unless you're actually using Qt, perhaps).",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yyxc1/"
  },
  {
    "text": "The \"best\"  IDE on windows is probably Visual Studio.\nI do not say that it is perfect.\nThere is also free community edition of it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yc9ra/"
  },
  {
    "text": "I like a simple setup. I'm using Sublime Text (https://www.sublimetext.com/) for writing and Coati (https://www.coati.io/) for navigation and understanding. They both work on Windows.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d1356jq/"
  },
  {
    "text": "It's amazing how under-represented Eclipse is in these comments. I love Eclipse CDT, it has the most complete C++14 support of all the IDEs, it's cross-platform, it's free and it has all the neat features you expect from an IDE.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z5jub/"
  },
  {
    "text": "We have at least one thread like this every week, go figure.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0ycvuu/"
  },
  {
    "text": "Eclipse has a good code navigation.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yh7l1/"
  },
  {
    "text": "Do not forget http://codelite.org/ I use it for cross-platform software (Linux / Win) successfully. I develop GIS software.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z4s8a/"
  },
  {
    "text": "I would recommend juCi++: https://github.com/cppit/jucipp due to its tight integration with libclang for best possible C++11/14/17 support. However, debugging through lldb is not yet supported on Windows and Arch Linux.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0ydqeb/"
  },
  {
    "text": "Depending on your platform.\n\nWindows: Visual Studio\nOSX: Xcode\nLinux: probably Code::Blocks.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zxllp/"
  },
  {
    "text": "Visual Studio is hands down the best, people are making other IDE's to mimic VS but none of them are remotely close.\nFor Linux I use Code::Blocks and for OS X I use notepad/sublime because all other ide's are garbage for OS X. Emacs I felt was not fluid in any way and the few months using it I kept finding work around a for all of its quirks and issues rather than coding.",
    "score": -2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z6x97/"
  },
  {
    "text": "One important thing to note about Visual Studio is that there is a new edition called Community which is free yet it supports extensions and has almost everything Professional edition has, and VS 2015 update 2 is quite close to full C++17 support\nEDIT: and experimental support for Clang frontend",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0y9qpx/"
  },
  {
    "text": "On Macs xcode is pretty much the standard ide.  Not saying that clion is a bad choice there or anywhere else though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0y9iqb/"
  },
  {
    "text": "I forgot to put in my OS, thank you for pointing that out. I'm also glad that you took the time to put in the best IDE to use for each OS.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0y9aqt/"
  },
  {
    "text": "I've found it to be faster than CLion, though it's missing some handy functions that CLion has.\n\nCan you elaborate what are those handy functions?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yngsu/"
  },
  {
    "text": "This comment has been overwritten by an open source script to protect this user's privacy.  It was created to help protect users from doxing, stalking, harassment, and profiling for the purposes of censorship. \nIf you would also like to protect yourself, add the Chrome extension TamperMonkey, or the Firefox extension GreaseMonkey and add this open source script.   \nThen simply click on your username on Reddit, go to the comments tab, scroll down as far as possible (hint:use RES), and hit the new OVERWRITE button at the top.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d18yc1n/"
  },
  {
    "text": "Is not a IDE.",
    "score": 14,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0ys86i/"
  },
  {
    "text": "Did You write java?  How does CDT compare to JDT (specifically java EE version)?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zm0lx/"
  },
  {
    "text": "can you compare it with any experience of VS? I'm currently deciding between VS and Eclipse",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d257vpu/"
  },
  {
    "text": "I don't know about the IDE as a whole ( I'm not a big IDE fan to begin with), but the VS debugger is the best debugger I have ever seen.  The custom visualizer capability is a game changer.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zheqw/"
  },
  {
    "text": "Was it not just C++17's library part, not whole? AFAIK it's not even clear yet what C++17 will have...\nI'm VS user and i really like it, but it bugs me, that they just don't give too much shit about being standard compliant. Example. I'm guessing GCC gets it right.\nSo i wouldn't be so hyped about VS' support for supporting standards too much.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yrh29/"
  },
  {
    "text": "Xcode drives me mad with its insistence that everything within a namespace must be indented, with no option to change it (or any other formatting settings for that matter). I admit that that's more of a personal gripe, though. I've also found that its autocompletion for C++ isn't as good as CLion or QtCreator.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0ya7wl/"
  },
  {
    "text": "Xcode it standard IDE on OS X but it support for C++ is pretty bad compared with other languages.\nSo CLion could be better alternative.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yccyu/"
  },
  {
    "text": "A few off the top of my head:\n\n\nCLion has a \"quick fix\" feature which is absurdly good at doing What You Want at the right time. For example, if you declare a std::vector in your code, CLion will offer to add #include &lt;vector&gt; at the top of your source file if it's not already there (it even usually puts it in the right place). Another example: if you add a member variable to a class, CLion will offer to add it as an extra parameter to your constructor(s).\n\n\nCLion can automatically generate a skeleton implementation for a member function in a cpp file, given a declaration in a header. This is a massive time-saver. It's even smart enough to provide a reasonable default implementation: a declaration of a bool function will return false, a declaration returning a pointer will have a definition returning nullptr, etc.\n\n\nThe current beta version has support for going the other way too: if you write a member function definition in a source file, CLion can add the declaration to the header\n\n\nCLion is just great at code generation generally. Getters and setters (albeit with unchangeable lowerCamelCase Java-y names) for private member variables for example, or a constructor taking all members. It can do these inline or separate source and header, as you choose.\n\n\nIf you change the declaration of a function, CLion will offer to change the definition to match (and vice versa). QtCreator can do this too, but when it does it insists on moving * and &amp; so that they're hugging the variable name rather than the type name, which is NOT WHERE THEY GO :-)\n\n\nCLion's autocomplete can \"see through\" macros, whereas QtCreator's can't. For example, I use an OpenGL wrapper (Glad) which uses macros to wrap the GL function pointers. QtCreator won't even tell me how many parameters the macro/function takes, whereas CLion tells me their names and types, like a regular function call.\n\n\nQtCreator seems to have more difficulty in working out which header corresponds to which source file, if the two are in different directories of a CMake project. My typical CMake project layout has public headers in an include/ directory, and source files in src/. QtCreator won't associate a source and header unless you specifically add the header files to your CMake project, which is not recommended CMake practice.\n\n\nOn which note, QtCreator defaults to a project view which won't even show header files unless you add them to the project (which again, CMake recommends against as it detects used headers automatically). CLion defaults to a filesystem view instead, which shows all your files. QtCreator has a filesystem view of course, but with an annoying \"feature\" that if you double-click to edit a nested CMakeLists.txt from the filesystem view, QtCreator will try to open it as a new project(!).\n\n\nN.B. I don't mean to sound overly critical of QtCreator -- I used to use it every day, I think it's a fantastic product, and I'd have no hesitation in recommending it to people who don't want or can't afford CLion. I could write a similar list of little features QtCreator has that I wish CLion would implement (responsiveness being the main one -- I don't know whether it's C++ vs Java or what, but QtCreator is much faster than CLion for me). It's entirely possible I'm now biased towards CLion simply because I stumped up money for it...",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z1lfz/"
  },
  {
    "text": "Vim + ctrl-P + youcompleteme  + ... is actually a pretty good setup.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z82ma/"
  },
  {
    "text": "What about emacs + projectile + cmake-ide + rtags + company-irony?",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zn38l/"
  },
  {
    "text": "I barely write Java. From cursory examination and talking to Java devs, what I can basically say is this:\n\nIn Java, the language is easy to parse. Indexing is fast and accurate. In C++, the language is very hard to parse, particularly because of macros and turing complete templates. So indexing can be quite slow depending on your scale; a 1 million line project might take a couple of minutes to index from scratch (though typically you don't need to index from scratch all the time). And it will never be perfectly accurate; if go-to definition brings you to the right place more than 99% of the time you're generally quite happy.\nRelated to the above, Java IDE's (including Eclipse) can do very sophisticated refactorings very reliably. The \"latest and greatest\" in CDT is being able to refactor a class name; this means changing the name of the class at all points of usage, changing the file names, and changing the #includes. This very simple refactoring is already quite hard.\nIn Java, it's practical even with large projects to continuously build; each time you save you rebuild. When you hit a shortcut key in Eclipse your unit tests run instantly because your project is already built. This isn't really practical in C++; so you hit a key, and wait while your project builds and then the tests run.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zo45d/"
  },
  {
    "text": "It's hard for me to compare the two, I do most of my programming on Linux, and when I occasionally have to code on Windows using C++, I always use the free versions of VS. This means I can't say what's not available in VS. These are some certain pros for Eclipse though:\n *  The most complete support for the most current C++ standard. Right now that would be C++14, but if the past is any indication, Eclipse will probably always be the first to support them, half a decade before VS.\n *  Cross-platform, Free (duh)\n *  Feels lighter, you don't have to install a massive multi-GB editor, you don't have to remember your accounts in various MS systems and renew your license periodically.\nSome nice things to mention about Eclipse, without any comparison to VS (since I have no idea about the counterparts):\n  * A very nice git integration, especially for staging chunks. Other features are nice too, like seeing line-by-line what code introduced when in the repo history.\n  * Very powerful content assist. I really abuse my compiler with metaprogramming, using the latest features, but Eclipse can still give me content assist. It also sees through macros. Like, when a macro defines a new type with an argument as the name, eclipse realizes that and highlights that argument as a type. Eclipse's comprehension of the code also helps a lot with navigation, like jumping to definitions or call sites.\n  * Decent refactoring and source generation support. Not stellar, but good considering how messy these things are in C++, like when a macro's argument is a new type name, if you rename the type somewhere in the codebase, that macro's argument is also updated.\nCons:\n  * Cmake editor is available as an external plugin, which is somewhat annoying to install.\n  * The editor can be unstable sometimes. You can see visual glitches, or the indexer can silently crash and content assist stops working. In some rare extreme cases, while trying to get content assist for deeply nested sections of code using a combination of advanced features (like a generic lambda capturing multiple variadic template argument packs) the editor can outright crash.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d261juv/"
  },
  {
    "text": "Was it not just C++17's library part, not whole?\n\nYes, ever since C++11, Microsoft has been playing this little game of announcing their compiler became feature-complete* (and the fine-print is that it's library feature-complete, which sometimes isn't even possible without the missing language features).",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zajlv/"
  },
  {
    "text": "I guess you are right, even C11 is not fully supported. But it appears that they have started to up their game lately",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z2pb4/"
  },
  {
    "text": "That example actually works just fine on VS 2015 update 2.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zmcf2/"
  },
  {
    "text": "I have never used xcode personally, I just see a lot of people using it.  I'm surprised it would have bad completion though, isn't it clang based like QtCreator?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yaex9/"
  },
  {
    "text": "CLion will offer to add #include <vector> at the top of your source file if it's not already there \n\nQtCreator does this too (but in a more manual way) : if you use a type which isn't included and right-click on the type it will propose to include the file defining this type.\n\nCLion can automatically generate a skeleton implementation for a member function in a cpp file, given a declaration in a header.\n\nQtCreator does this too : write the prototype of the function, right-click on it and it will generate its body in either your header or a matching .cpp. However it won't intelligently add the return nullptr;.\nAlso you can write your code inline in the header and by right clicking in the class name you can refactor to move all the definitions to the .cpp.\n\nThe current beta version has support for going the other way too: if you write a member function definition in a source file, CLion can add the declaration to the header\n\nQtCreator does this too.\n\nCLion is just great at code generation generally. Getters and setters (albeit with unchangeable lowerCamelCase Java-y names) for private member variables for example, or a constructor taking all members. It can do these inline or separate source and header, as you choose.\n\nQtCreator does this too (add a Q_PROPERTY, right-click, \"generate missing member functions\").\nThe others are indeed concerns :)",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d10kwrq/"
  },
  {
    "text": "These are indeed some handy features, i might have to give a proper try to CLion in the future.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z8cs0/"
  },
  {
    "text": "Still not an IDE.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0z83dm/"
  },
  {
    "text": "[deleted]",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0znhaq/"
  },
  {
    "text": "The reason why I even ask. For Java eclipse is so inconsistent, that it quickly becomes an unusable mess. Take one of the most popular builders - maven. What would you expect from an IDE that claims to support it? I expected two things: That it knew where is the generated code and that IDE tools would integrate it. None of that. Even better: Most people would advise ditching maven integration and building outside of IDE. Why would I use an IDe then?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d10nx52/"
  },
  {
    "text": "/u/sztomi, the announcement that /u/undefinedusername was referring to is here: https://blogs.msdn.microsoft.com/vcblog/2016/01/22/vs-2015-update-2s-stl-is-c17-so-far-feature-complete/\nNote that Stephan (/u/STL) was very careful about pointing out that this post refers to the STL being C++17 so-far complete. In fact, the first three questions in the FAQ at the end of the blog post discuss how this is not talking about the compiler. The first question mentions that the compiler isn't yet C++11 feature-complete.\nThat said, I'm sorry that our message wasn't clear to you. We certainly aren't trying to play a \"little game\" with our developer community. We are committed to making improvements to MSVC standards conformance--I can provide citations if you like. But I don't think we're hiding the fact that we've still got a ways to go.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d11ddiq/"
  },
  {
    "text": "Independently verified.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zvxbh/"
  },
  {
    "text": "Xcode is bafflingly bad at C++. It has to be either still using their pre-clang stuff for IDE functionality or doing something very wrong because autocomplete and jump-to-definition basically just don't work for C++ (the refactoring stuff doesn't even try to work, which is probably a good thing). YouCompleteMe+CTags in vim are dramatically better, and while YCM is pretty good, ctags is a very low standard.\nOne of the weirder parts of writing obj-c++ in Xcode is that you can be witing c++ and getting utter nonsense out of autocomplete, but then the instant you type something that looks like it could be a message send you suddenly get surprisingly accurate autocomplete with documentation.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yyvzg/"
  },
  {
    "text": "Xcode's main shortcomings compared to other IDEs are the lack of refactoring support and the somewhat limited code formatting options. This is a bit annoying given that Xcode is built on Clang (which gives us clang-format, etc), and the fact that Apple is invested in quite a bit of C++ behind the scenes (LLVM and WebKit, to name a few).",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yicve/"
  },
  {
    "text": "You're right, unix is.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zbif7/"
  },
  {
    "text": "Emacs is an IDE. \n\nEmacs is an OS.\nFTFY.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0zxjav/"
  },
  {
    "text": "Well, CDT is probably worse than JDT, so if you don't like JDT, I don't know if you'll like CDT. The primary value in the IDE for me is not integration with build tools (although it is nice). The primary value is just indexing and code browsing tools. In CDT I can not only go to definition, but find references, look at inheritance hiarachies, include graphs, call graphs, search my entire codebase for any type (macro, function, enum...), etc. Ultra powerful syntax highlighting (CDT makes great distinctions, like function parameters inside function bodies, different colors for const vs non-const accesses of variables) and partial build integration (build and unit test errors jump to the code, and errors are marked directly in the editor) are just substantial gravy.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d10r0gl/"
  },
  {
    "text": "I know, it's always pointed out, yet, the headline is misleading every single time. That is not to say I'm not appreciating the tremendous effort Microsoft has been putting into VS in the last couple of years, I really do.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d12dfa4/"
  },
  {
    "text": "/u/Rseding91 /u/dodheim \nWell it doesn't on VS 2015 update 1 and probably on VS2015 (without updates), so my guess is even in update 2, there are some bugs that makes it not standard compliant.\nGuess i should update my VS anyway...",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d10ieg1/"
  },
  {
    "text": "In my personal experience, xcode's main shortcomings is incredible buggy IDE with c++ projects. Xcode really struggles with syntax highlighting and code completion with c++. Not only that, it also places breakponts on the wrong line, same goes with warning and error highlighting. And this issue existed literally since version 4.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d0yq561/"
  },
  {
    "text": "Yep, we recognized that a lot of developers don't distinguish between the compiler, libraries, and code generator but weren't sure quite how to phrase it. Based on the reaction--here and elsewhere--we'll try to be even more explicit next time.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d13i0r2/"
  },
  {
    "text": "/u/ripper37, I believe you've just illustrated a case where we fixed a bug to help MSVC become more standards compliant. There are still places where MSVC is not standards compliant--you don't have to guess. But this example you have provided should serve as evidence that Microsoft is working on becoming more standards compliant. \nThere's a recent blog post here about other work we're doing to conform to and help create the C++ standard: https://blogs.msdn.microsoft.com/vcblog/2016/02/11/compiler-improvements-in-vs-2015-update-2/",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d11d07u/"
  },
  {
    "text": "I don't deny that and i'm very glad you keep working on it. VC is my favorite IDE. The only problem is portability between compilers when writing code that should work on more platforms/compilers.\nI hope you keep up good work and make VC even more standard compliant. Good thing is that you allowed to use clang as compiler too, this way i won't have to maintain couple build systems just to check if my code works on other compilers. :)\nAlso, i'd love some more refactoring tools if i may propose something. I know there is ReSharper, but some tools should be included in VS itself if you ask me.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d12504w/"
  },
  {
    "text": "I'm glad you're liking the Clang/C2 functionality. We've been seeing more and more people using it for cross-compiler testing.\nAs for refactoring tools, we've looked into it but there's nothing I can promise at the moment. For the time being using add-ins is the best option.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/4a8mnw/whats_the_most_recommended_c_ide_to_use/d1283ep/"
  },
  {
    "text": "There are many options to use, but it depends on what your situation is like:\n- Visual Studio 2019 is a popular and reliable IDE if you are primarily working on a Windows 10 machine. It's a bit resource heavy for larger C++ projects, but since you are learning C++ you shouldn't have much trouble using it. It's extremely feature-rich, which comes at a cost of download size.\n- Jetbrains CLion is a cross-platform C/C++ IDE which runs on Windows, Linux and Mac. It's a paid option, which comes with a free evaluation of 30 days, restriction free. It's another popular and reliable option which uses CMake to build your projects by default. If you are not sure what CMake is, don't worry about it now, you can use it like a normal IDE and it will build and run all of your C++ files as you are learning.\n- Visual Studio Code is a light weight editor compared to the other options. It's created by Microsoft and with proper extensions and configurations you can turn it into a solid C++ IDE, but it does require a little more configuring to get up and running. If you are on a slower machine, I recommend this option and building/running your C++ files using a terminal / console (VSCode has a built-in terminal to do this as well).\nMicrosoft also has some links to follow if you decide to go with VSCode:\n- C/C++ for Visual Studio Code\n- Using GCC with Mingw-w64 (VSCode)\nI personally use CLion and VSCode for when I'm working on Linux and Windows and occasionally use Visual Studio when collaborating with other developers, but CLion is my primary IDE of choice.\nYou could also use Vim or Emacs to write code (or any other text editor) and just compile and run everything from a terminal when starting out since you won't require any complex build systems when starting. I recommend this option as well if you want to really learn how everything works before moving onto an IDE which does all of this for you.",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8mdmh/"
  },
  {
    "text": "Already some solid answers around. Want to add something to consider: An IDE will do a lot for you. Like setting up Cmake, set compile flags and call the debugger. \nPersonally, I learned C++ in a plain text editor with some syntax highlighting. It is good to know what happens under the hood. Today, I am using full blown IDEs for development and I don\u2019t want to miss them anymore.\nBut I guess you could also do it the other way around: Learn with an ide and later play around with all the tools that used by the ide to make the magic happen",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8wnb2/"
  },
  {
    "text": "IDEs are for work. It is better to learn any programming language without IDE.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9jdyo/"
  },
  {
    "text": "emacs",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9fmz8/"
  },
  {
    "text": "Emac/vim + command line. You get to experience C++ at the ground level without all the extra junk you won't need until later on down the road.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gsahppa/"
  },
  {
    "text": "Visual Studio is pretty much the best IDE there is, if there's one better I've never seen it.\nThat said, the IDE isn't really what's important in learning the language.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8lrwo/"
  },
  {
    "text": "Imo VS 2019 is too easy. It abstracts the compiler, the compile flags and build systems to just one click. Learning C++ also involves the learning the tooling. So my recommendation is that the best way is to use a text editor with no autocomplete and a terminal to compile the code. Once you start getting the hang of everything, then use VS 2019.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9dmcx/"
  },
  {
    "text": "I'll share my experience with Visual Studio.\nThe regular C++ environment they give you is soooooooooooooo bad. You can't do file management and make it look good (which means you won't expect to be putting any projects on GitHub, unless you just want it for yourself that is). I know that there is a CMake option with VS, but I don't like using the MSVC compiler. You can change it but it was more trouble than it was worth so I just started using NeoVim with some plugins and GCC. Actually had an easier time with that.\nFor C++ VS 2019 is good though. I only wanted to use a different compiler because I wanted better C support (heard they added some?) Although I recommend using the CMake project instead of the default Visual C++ stuff. The CMake project is actually very very good even though I didn't like it that much.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8ucpn/"
  },
  {
    "text": "It doesn\u2019t really matter, apart from the hand holding you\u2019ll get from a complex IDE such as Visual Studio. Pick one and stick with it until you find one that has features that help you further. Try something like Atom, as it won\u2019t give you too much hand holding. Get a compiler plugin (gpp), a linter (linter-gcc), and leave it at that.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gscgdmy/"
  },
  {
    "text": "Just want to add, CLion is free if you're a university student. I know this isn't applicable to most people, but just wanted to share",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs95eez/"
  },
  {
    "text": "I'd add KDevelop if you are on Linux and don't mind learning a bit of CMake as well.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gsa8goq/"
  },
  {
    "text": "Same here, i com from python background. So I choose to user Visual Studio Code as my coding place. But after few days i realised this is doing alot for me, and unconsciously i am correcting error because VS code was telling me that. What i was missing from this is different kind of errors. While coding you are not only learning syntax but you are also learning bad syntax by error. But if you correct code as your IDE says then you won't remember/know what caused that error.I use a Ubuntu Machine so it comes with a beautiful text editor. It gives color to code but don't suggest what is wrong or right. It is hard to code in that but within 5 days you will see the change in you.\nAll i say its on you what to choose, this was my story if you think same as i do you will love text editor.  I am more of a CLI person so i thought while ssh or anything like that i won't be having GUI i would be writing code in vim or nano, there i won't be getting any help like IDE provides.  \nNow i use IDE for big projects to see what all i was missing because IDE gives suggestions. This is really fun.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9p33x/"
  },
  {
    "text": "This. Check out Vim or Emacs if you're willing to spend some time learning a good text editor.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9klla/"
  },
  {
    "text": "Out of curiosity, I googled Emacs and it told me to check out Vim.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9k7jp/"
  },
  {
    "text": "I nod in agreement",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8n07n/"
  },
  {
    "text": "thanks, I already know how to program with c# and pascal (Delphi)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs8lytw/"
  },
  {
    "text": "Sublime-text, nuff said.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9kaow/"
  },
  {
    "text": "Good for beginners too since you don't have to deal with installing a c++ compiler.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gxnwzme/"
  },
  {
    "text": "You're right! They also offer this deal for Open-Source contributors. \nIt's a fantastic deal too considering how great Jetbrains IDEs are. Although I'm expected to start at my university later this year, I still choose to support Jetbrains with an individual subscription, but that's only because I really believe in their products and can currently afford it.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9c1y3/"
  },
  {
    "text": "Unfortunately, we're unable to deliver licenses to your country/region owing to existing legal restrictions. \nWell that\u2019s sad :(",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9opsq/"
  },
  {
    "text": "KDevelop can work on Windows too - it requires an extra step to work with msvc.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/guqwga2/"
  },
  {
    "text": "And if you Google vim it'll ask if you meant emacs. Google is playing both sides of the editor war so that they always come out on top.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9kjjy/"
  },
  {
    "text": "you've never heard of emacs? lol, that's so bizarre to me. it's my window manager, browser, email client,.. I even use it on my phone for all kinds of stuff like time tracking, agenda stuff and searching files on my desktop.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9lnk3/"
  },
  {
    "text": "Search recursion on google :P",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9oroe/"
  },
  {
    "text": "That\u2019s a text editor, not an IDE.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gsa3a5j/"
  },
  {
    "text": "There's great alternatives. I use CLion because it's the really the best option for Linux. There's a good chance your university has a student's license of visual studios.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gsb7r2r/"
  },
  {
    "text": "Did you mean recursion?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9ouq6/"
  },
  {
    "text": "Search \"askew\"",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9ovct/"
  },
  {
    "text": "I almost never code on Windows. Its only use for me is gaming rn. I think I\u2019m gonna continue using VSCode. It\u2019s really good. I couldn\u2019t code much when I got the 30 day trial for CLion because of some personal issues so I didn\u2019t really try it out.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gseeta9/"
  },
  {
    "text": "Lol didn\u2019t know this one. Nice",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9oyp2/"
  },
  {
    "text": "Search \"do a barrel roll\"",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9ozu6/"
  },
  {
    "text": "Ngl I expected \u201cdo a barrel roll 10 times\u201d to do it 10 times",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9pyu5/"
  },
  {
    "text": "Yeah I was disappointed too.  It'll only do it once.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/mdchyt/best_ide_to_learn_c/gs9q0c3/"
  },
  {
    "text": "CLion and Visual Studio (Not Visual Studio Code) are what most professionals use for C++. I'd say try CLion out, it makes getting setup super easy and is completely cross platform. Most importantly, it's completely free on an unlimited number of devices for students, you just register for a JetBrains account and apply for the student discount. Usually takes less than 5 minutes.",
    "score": 6,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87wsu2/"
  },
  {
    "text": "I strongly recommend Visual Studio 2019.  As others have said, Community Edition is free, and it will be years before you need anything it doesn't have.  Yes, it takes a long time to install, but it will be worth the time.",
    "score": 7,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f88a6mb/"
  },
  {
    "text": "In order of my preference (my job includes writing c++ daily):\nVisual Studio Community is free. It is the IDE used by professionals, but to just create, build and debug a project is just a few clicks. There is no reason not to use this, other than wanting to work on Linux/Macos. VS2019 has the latest C++ features. It\u2019s quite a heavy install though. The autocompletion and debugging experience is the best you can possibly have and there are many options and extensions available to tailor it to your needs.\nQt Creator is free and open source. Unlike the name implies is is not only for Qt projects. This is my preferred IDE on Macos, but works great on Windows too. Has a very light footprint (especially if you disable the clang code model). There is no compiler included, so on Windows you\u2019ll need to provide one.\nCLion is not free, but has student licenses that you can request. It is really slow and has terrible memory usage, but great IDE features. Also has the advantage that if you already use PyCharm or IntelliJ it will be familiar. I think some kind of compiler is included, but didn\u2019t try installing it on a clean machine.\nCode::Blocks is free and open source. This is what I used when I started out. It\u2019s not a very good IDE, but it will get you going quickly. The mingw compiler included might be old, so you won\u2019t have the latest C++ features.\nAdditional comment: Do not use stuff like VSCode or Atom or Sublime text or vim or whatever text editors. They are not good IDEs per default and you\u2019ll have to fiddle with configurations to make them work nicely.",
    "score": 8,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87xgrm/"
  },
  {
    "text": "I'd recommend Visual Studio 2019 or https://repl.it/",
    "score": 4,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f887lv8/"
  },
  {
    "text": "VS community and CodeLite are my favorites. CodeBlocks was crashing every now and then.",
    "score": 2,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f88sdzs/"
  },
  {
    "text": "Dev cpp is a great compile-execute IDE, perfect for beginners. It's fast, simple and free.",
    "score": 4,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87pm2w/"
  },
  {
    "text": "I would recommend Visual Studio Code",
    "score": 2,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87nffj/"
  },
  {
    "text": "In my class I learned on Eclipse and then I switched to AWS Cloud9 bc it saves my programs and I can open it anywhere",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87xkxz/"
  },
  {
    "text": "if you use linux, i recommend directly use g++ compiler and any text editor. that way you get the feel for linking and compiling directly. if your not used to IDE's it will be another learning curve. it's very subjective.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/fbaciu7/"
  },
  {
    "text": "Visual Studio Code is good to have to learn every programming language, but it's a little bit harder to install. If you want to get a decent IDE for casual programming, not professional you can use Code::Blocks which came in a version with MinGW debugger. Anyway these two are open-source so you don't have to pay for them",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87p16g/"
  },
  {
    "text": "Visual Studio would be an overkill since you're just starting out. It's a heavy install too.\nSo I would recommend you check out Code::Blocks :)",
    "score": 0,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f886go5/"
  },
  {
    "text": "I personally like atom, my school gives out a free version of intellij idea which Ive heard is really good maybe the best. Idk if you might have access to something like that bc I think intellij is typically like $600.",
    "score": 0,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87twk5/"
  },
  {
    "text": "Visual Studio community edition is best one.",
    "score": 0,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f88lllm/"
  },
  {
    "text": "Why not install clion on a clean machine",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f8atgyo/"
  },
  {
    "text": "Do not use this. Maybe it\u2019s good for beginners (although I\u2019d argue it isn\u2019t), but you will have to learn a new IDE soon enough anyway.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f87wn8v/"
  },
  {
    "text": "I think Code is just an editor though; it doesn't include a C++ compiler.  OP is asking for an IDE.",
    "score": 2,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f88y7bs/"
  },
  {
    "text": "I think Code is just an editor though; it doesn't include a C++ compiler (and not sure if it includes a debugger either).  OP is looking for an IDE.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f88yag6/"
  },
  {
    "text": "If you have an edu email address, you can get a student pass, which gives you access to all the IntelliJ products.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f8836t7/"
  },
  {
    "text": "Because I don\u2019t have a clean Windows installation without any compilers available just to test if CLion comes with a compiler?",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f8ax7ci/"
  },
  {
    "text": "Or you can use any document that proves that you are a student. It worked for me it will take like a week to get it mannualy verifyed.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f8ateph/"
  },
  {
    "text": "I dose not come but the installation of one in verry easy. You just download and install minGW from source forge and then clion detects it automatically.",
    "score": 1,
    "url": "https://www.reddit.com/r/Cplusplus/comments/dzi8sa/recommended_c_ide_for_someone_learning_how_to_use/f8axwe9/"
  },
  {
    "text": "Visual Studio, Code::Blocks, CLion.",
    "score": 8,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlk8u1/"
  },
  {
    "text": "If you want to start with something similar to what you learned in school, you can use CygWin to install g++ and emacs and all of your favorite Unix/Linux tools on Windows.\nIn Windows 10 you can also install the Linux Subsystem and get something similar.\nCygWin is a bit clunky but it's been around for years and there's lots of documentation on how to use it. Microsoft's Linux subsystem is newer and slicker when it works, but there are some gotchas and it's still kind of new and not as well known.\nEither of those options will be all you need to edit with emacs and compile command-line programs.\nIf you want to make more interesting programs, Visual Studio is probably the best IDE around, it's fantastic for writing C++ code on Windows. It will take time to learn it and it can be confusing, but at least it's very, very popular and there are lots of resources online.\nCode::Blocks is good and cross-platform. Eclipse is widely used but C++ is not its strongest language. I'd favor Visual Studio.",
    "score": 5,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlkw8r/"
  },
  {
    "text": "It really comes down to you. Whatever fits you the  best. I use Visual Studio Code with GCC compiler.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlo12z/"
  },
  {
    "text": "Sublime to code and terminal to compile.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvm2j29/"
  },
  {
    "text": "G++",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmasjo/"
  },
  {
    "text": "Visual Studio if you are on windows, qtcreator everywhere else. qtcreator is shockingly lightweight and fast compared to all the crap built on java.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmchc6/"
  },
  {
    "text": "You can use emacs and g++ in pretty much any operating system. However I like eclipse for most of my development needs.",
    "score": 4,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlk21u/"
  },
  {
    "text": "Visual C++ Is nice, but it does have a steeper learning curve than some other IDEs. I personally like SlickEdit... alas, it's not free. I've also been using Atom IDE for some non C++ projects and I like it a lot so far - very clean and simple interface.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvloprf/"
  },
  {
    "text": "I\u2019m partial to Atom plus the terminal.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvm0l8c/"
  },
  {
    "text": "Windows: VS\nLinux: KDevelop/GCC",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvm329w/"
  },
  {
    "text": "With Emacs you really need to know a lot more about the editor than you'd need to know otherwise. Visual Studio / Eclipse etc. are far too simplistic in comparison. The difference is also that when using Emacs, you'll have many different options to set up your environment, while in MSVS / Eclipse kind of tools, it's usually only one way of doing things.\nI've been using Emacs for many years, but I'll readily admit that for a novice, tools like MSVS / Eclipse have an advantage of possibility to explore the configuration / settings without necessary large amount of understanding of how the tool works.  This is, unfortunately, a doubly edged swords, since when you become more proficient with other tools you use, you'll find MSVS / Eclipse kind of editors to be too limiting.\nWrt compiler: I'd go with clang++. This compiler provides better diagnostic messages in my opinion.  It also has some tooling, that you can use from other editors. Tools like code intellisence, error checking can be outsourced to this compiler (this is the best way to set up Emacs for C++ btw).  My second best option would be MinGW. This is because it has the same interface as g++, and the knowledge you get using it will easily transferable to other systems. MSVC would be the third best option, since it's \"endemic\" to this system, but it's kind of problematic when it comes to versions, installation, and not in the least, following the standards.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmaumq/"
  },
  {
    "text": "Surprised no one has mentioned qt creator.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/e33nopx/"
  },
  {
    "text": "watch this video \nhttps://www.youtube.com/watch?v=Ee3EtYb8d1o \nhttps://www.youtube.com/watch?v=zN7llTrMMBU\nhttps://www.youtube.com/watch?v=hbmV1bnQ-i0\nhe uses Visual Studio Community Edition for compiling and debugging, but he uses emacs as his editor (you don't have to use emancs -- you can use any editor -- even notepad -- or you could just use the editor in the IDE)\nhe shows how to compile using VS from the command line and explains the compiler switches \nhe does a few \"strange\" things (like setting up the W drive), but that's just so everyone following along will have the same configuration he has \nthe first 43 days of this series are really excellent and teaches a lot (although he does have strong negative opinions on C++ and object oriented programming)\nhttps://www.youtube.com/user/handmadeheroarchive/videos?sort=da&flow=grid&view=0",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlvb8d/"
  },
  {
    "text": "Eclipse CDT, Black Theme all you need. \nOr just use vim",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvm8vtb/"
  },
  {
    "text": "I don't know why people recommend CB. I haven't seen anything about it worth using.",
    "score": 3,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvm31b5/"
  },
  {
    "text": "+1 on everything except CLion. It wants money from you after 30 days :<",
    "score": 0,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlm7m3/"
  },
  {
    "text": "Eclipse is a godawful C++ IDE.",
    "score": 9,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlkq6l/"
  },
  {
    "text": "I'd favor Eclipse for multi-language, but it's only so-so at C++ support. Visual Studio is better for C++.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlkxcq/"
  },
  {
    "text": "In my class we work through the terminal, is that the same deal with this? Sorry for these stupid questions, just very confused.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlk8e5/"
  },
  {
    "text": "Lol eclipse is shite",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/e33nntm/"
  },
  {
    "text": "It's fun and it's lightweight. That's about it. Good for jumping back and forth between some game or movie without too much lag.\nI'm an Eclipse CDT man, myself, but I keep a copy of C::B around.",
    "score": 3,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmc014/"
  },
  {
    "text": "What features are lacking from C::Bolocks?\nWhen I used it(granted - for a few borderline-trivial projects), I had all the things I needed: compiling was done correctly, debugger worked(mediocre-ly, yet worked), Cppcheck checked the code, I could rename symbols easily(after finding the feature, because there is a lot of drop-down menus).",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmym9t/"
  },
  {
    "text": "It's really the only decent free C++ IDE besides Eclipse CDT, and a lot of people have had nightmarishly slow performance from the latter because it's a lot heavier of a program. CodeBlocks is also dirt-simple to set up and use.",
    "score": 0,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmqwzs/"
  },
  {
    "text": "It's free if you are a student. And anyway,  the OP didn't say that \"free\"  was a requirement,",
    "score": 9,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlmanu/"
  },
  {
    "text": "You can use the terminal or an IDE, your choice. The Windows Command Prompt is an awful terminal. Either download Console2, or learn to use PowerShell. Or use a real Linux terminal from CygWin or the Linux subsystem.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlkzjo/"
  },
  {
    "text": "No, eclipse is a full blown crossplatform IDE. I hate to say it, but everyone has their own taste. Asking what IDE to use is much like asking someone what color is best.",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvlllhq/"
  },
  {
    "text": "Well, on windows there is Visual Studios community edition. On Linux, there is KDevelop. There is also QtCreator. You don't even need to use Qt to use it.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmr1fa/"
  },
  {
    "text": "https://youtu.be/cV0tCphFMr8?t=2m27s",
    "score": 1,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmc3r7/"
  },
  {
    "text": "Wow, I haven't seen that movie in a decade at least.",
    "score": 2,
    "url": "https://www.reddit.com/r/learnprogramming/comments/83z1ww/best_c_ide_and_compiler/dvmeqnw/"
  },
  {
    "text": "The worst I\u2019ve ever used is no longer availabile or relevant: the Windows IDE for N64 development.\nInstead of a project file, it just parsed the linker file (which you had to write by hand) in order to determine which cpp files were used and where they were located. It would list those paths in a small, fixed-size GUI window. So, if your dev path was too long you couldn\u2019t distinguish between files when you want to open one.\nOn top of that, it somehow frequently failed to correctly parse these simple strings and some listing would randomly be garbage characters. That meant there were source files you simply could not open. Too bad. If you determined you needed to debug on of those, the work-around was to find some function in a different file that called into the needed file, place a breakpoint in that function then step into the needed file.\nFor one release it had an off-by-one error in the variable watch window. It would display each variable reinterpret-cast as the type that was declared next after the actual type of the object. The work-around was to locate the type declaration and typecast a pointer to the object as whatever type was defined just before the actual type.\nBut, hey. We had it better than the PS1 team. The same IDE for them was literally useless for anything besides launching the game on the device.  They had to log-debug exclusively.",
    "score": 55,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug3dw2/"
  },
  {
    "text": "The worst I've been forced to use was Dev C++ for a computer science. It's old, unintuitive, doesn't get updates, and is buggy as hell.\nFor me, the best editor will always be (Neo)Vim + some plugins.",
    "score": 24,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug4zyx/"
  },
  {
    "text": "QtCreator and VisualStudio, both really high up for me. On the other hand Eclipse and XCode are the worst experiences of my professional life.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufuxjs/"
  },
  {
    "text": "Please consider \u201cUnix as an IDE\u201d type setups as well.\nA good terminal emulator, tmux, tiling window manager, neovim with plugins, cmake, plus clang tools make for a really powerful IDE like workflow. There\u2019s a greater learning curve and initial effort involved, but it allows infinitely more customization and tweaking.\nI have a feeling that this setup is preferred by a large number of developers especially in the linux community. This is what I personally use. After lots of experience with Visual Studio and CLion, all the monolithic IDEs just feel very bloated.\nBy excluding \u201cLinux as an IDE\u201d type setups from your poll you might skewing your results.",
    "score": 54,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufv7zq/"
  },
  {
    "text": "I've got a big problem with this poll.  It seems that the result of the poll would suggest that \"this is the IDE that people like the best\".  But people will check the box of the the best IDE among those that they have actually used.  So even if all IDES were equally liked by their users, the number of checks on the most widely used IDEs would be much larger. This is probably what accounts for the fact that Visual Studio comes out near or at the top of both lists.  \nLesson - beware of benchmarks ... and polls",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug33tx/"
  },
  {
    "text": "[deleted]",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugkmiv/"
  },
  {
    "text": "For me the worst has been eclipse cause I kept having issues with it (i.e. eclipse crashing because the indexer runs out of memory).\nI've been using qt Creator quite successfully lately, so I indicated that was my favorite, although I don't have much experience with the others. Only problem I've run into so far is that after I switched to the clang back end, it uses ungodly amounts of ram to function, and code assist is a bit slower now. The quality of the code assist is a lot better though, which is why I put up with it.",
    "score": 19,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufnyz3/"
  },
  {
    "text": "Visual studio, for me, is by far the best. Make sure you use at least 2015 preferably 2017, these two new version are much better and handle larger projects pretty good (you need to let it build the initial intelisense database and then you're good). I use it everyday at work with a large code base and run only into minor issues.",
    "score": 31,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmfh8/"
  },
  {
    "text": "I really like IDE features but at the same time I truly hate it when it feels slow and clunky.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmmgw/"
  },
  {
    "text": "CLion with IdeaVim plugin!\nI have nothing against Visual Studio, and they have done a fantastic job since version 12 (VS2013). They only get better with each future version.\nI just like how CLion is configurable and lightweight in comparison to Visual Studio. And I feel the tools are better designed (refactoring, code generation). If you could couple Clang libtools with CLion, you'd have a serious toolkit.",
    "score": 20,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufuxo7/"
  },
  {
    "text": "It's not the worst, but Visual Studio has for me always been a frustrating experience. It keeps freezing up on large projects and IntelliSense breaks randomly. It's not acceptable that you have to keep doing incremental builds to catch compilation errors.\nLibclang based IDEs seem far more robust",
    "score": 24,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufl1yd/"
  },
  {
    "text": "CLion is by far my favorite. Really nice CMake integration, great customization features and active development. Love it!",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufwiwd/"
  },
  {
    "text": "Where is turbo c++ :D\nShould it really be at \"other\"?",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufrark/"
  },
  {
    "text": "I haven't used it exentisvely, most certainly not for c++. I just get in touch with it every now and then because I work in app security, but I am certain that Xcode is the single worst IDE known to man.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufu6bd/"
  },
  {
    "text": "I can't adequately express how disappointing Xcode is. It's halfway there on so many fronts.\nWith Eclipse, I expect it to be complete garbage, so it actually surpasses expectations.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhj4j5/"
  },
  {
    "text": "I have 2 best IDEs for C++: QtCreator for programming, but debugging in it is unusable for larger projects ... so the second one is Visual Studio for debugging, which is unusable for programming (talking about version 2015 as there is no express version of 2017 and I cannot use 2017 community because of its license terms).",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug7kiy/"
  },
  {
    "text": "It looks like on both polls results are similar. Both show which IDE is used more often.\nIt would be better to make a poll which features people like and which one dislike.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugawgp/"
  },
  {
    "text": "My favourite is Qt Creator, though my 2nd favourite must be VS(2015+). I really miss it's in-line go-to definition/declaration feature. It helps a lot when you are trying to figure out how some huge project functions and constantly need to look up what certain functions do without switching from the context of the current file.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duge85s/"
  },
  {
    "text": "no sublime text?",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmmzl/"
  },
  {
    "text": "It's a toss up for me. I, personally, use Qt Creator and it works fine, until you need to see the internals of an object of a class, derived from Qt class: it just freezes up, no amount of waiting was enough.\nXCode was meh experience for me, I guess I would need more time with it.\nVisual Studio wasn't very usable the last time I used it extensively, unless you used Visual Assist, this might've changed since then.\nI've never used CLion, but my friend said that it was a resource hog.\nOddly enough, NetBeans worked relatively well, but doesn't offer much functionality and might work worse on larger projects.\nEclipse I've never managed to get working, easy choice for worst one.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufxw85/"
  },
  {
    "text": "CodeBlocks works well for console applications, like for school.\nI'm sure most prefer Visual Studio for larger projects.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugf983/"
  },
  {
    "text": "YouCompleteMe is the only vim autocompletion that works for C++ for me, but it leaves some features to be desired. YouCompleteMe needs to have tabbed insertions like Visual Studio and Xcode.\nClang\u2019s language server tool would be awesome to incorporate.\nAny terminal editor like vim is limited by what a terminal can do, but I can\u2019t live without a modal text editor. The vim plugins for Visual Studio really suck. I also hate working in Windows.\nIf Microsoft released Visual Studio for Linux, I would switch tomorrow. They are moving in the right direction with native support for cmake projects.\nWhat we need is a modern terminal standard. The idea of fusing terminal and editor is a good one. I love the LLVM infrastructure project. And I love the Unix philosophy. Modal text editors are also generally a good idea in my opinion.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugnep2/"
  },
  {
    "text": "I love using VSCode. I have WSL and the integrated console is super convenient.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh7jud/"
  },
  {
    "text": "When I was in university, our \"Introduction to Programming\" was given in Oberon-2. The IDE that came with it was straight out of hell. \nAll hotkeys were Mouse button combinations, even the compilation command. The IDE would crash when dragging windows too quickly, and you could get compiler errors such as\n\"Error, too many errors.\"\nor\n\"Not enough registers, please simplify expression.\"\nIf you wanted to compile a file, you had to place a \"marker\" in the file, and then click the build command.\nIt was straight out of hell. It taught me how to code though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhn7np/"
  },
  {
    "text": "I have been fretting over this the past day, as I am currently coming over to c++ from Python.\nI have been using code::blocks, and I actually really like it. But it is also the first thing I tried. Is there any reason I should be avoiding it? E.g., will it not scale well with larger projects? Is it bad for refactoring or debugging? Is there something that is clearly just better?\nI like it partly because I work on both Windows and Linux, and it runs  nicely on both.  The interface is kind of old-fashioned but whatever I'm focused on code. It is very easy to use, not a ton of stuff going on that is confusing.\nI was going to start a thread on this topic, but thought I'd bring it up here.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dui4nop/"
  },
  {
    "text": "What ? Title written in the past tense and no Borland C++? Heresy !",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dulg5j6/"
  },
  {
    "text": "[deleted]",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duflcgv/"
  },
  {
    "text": "I'm surprised so many people don't like Xcode, I use it pretty exclusively (although I always set up my projects with CMake). Maybe I should give CLion another look.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufsc9a/"
  },
  {
    "text": "Would really like to try Visual Studio, but I can't bring myself to work using Windows. With WSL it's somewhat bearable but after a couple days I just can't stand the many terrible systematic design mistakes. It can't work with any filesystem besides NTFS and (ex)FAT, it's stuck with weird character encodings when literally everything else is UTF-8. And then there are the little things, like having absolutely no decent terminal, weird Window placement on multiple monitors, a total mess of new and old system settings and no way to do that on the command line. At least for that you can actually read a description instead of needing screenshots and translating everything to your locale. Also choco really isn't a match for integrated package managers and knowing my Linux works in whatever CPU you have available\nThat said I'm really happy with Linux, alacritty, tmux, NeoVim and YouCompleteMe. No matter if I'm coding in Python, Go, C++ or writing a letter in LaTeX it all feels the same and does exactly what I want it to do.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug5rr5/"
  },
  {
    "text": "Pffftt idk about u casuals but notepad is the shit",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugcuuf/"
  },
  {
    "text": "Honestly, the very worst is Xcode. Because for certain projects, you're sort-of forced to use Xcode and don't have a sane alternative. Like for an iOS codebase purely written for iOS (so no cross-platform stuff, no CMake etc.), set up as an Xcode project. shudder. Xcode is so bad, and you can't even easily switch to some other IDE easily to build, run and debug.\nI really don't get how an IDE of such a big company with huge resources can be so incredibly bad, both from a usability as well as a functional perspective.\nAt least on any other platform you usually have a choice of using another IDE, for whatever you're doing.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duggse7/"
  },
  {
    "text": "Worst: \nEclipse CDT",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dughteh/"
  },
  {
    "text": "I am sure Visual Studio could be Nice, but I wonder how you guys customize it? Compared to CLion, it is absolutely horrible to customize. I found it non-intuitive how keyboard shortcuts are assigned (I find the simple json file in VScode so well suited, I would love it in VS). How do you add multiple cursor without an extension?\nIf you guys could share a nice setup of VS, maybe we (other IDE developers) would take a shot at using it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugf6qa/"
  },
  {
    "text": "I thoroughly enjoyed Visual Studio. We used Netbeans in a college class and it was buggy. I wouldn't reccomend the later.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugfq23/"
  },
  {
    "text": "I think, with semantic autocompletion, CTags browsing, and error highlighting, my Vim is basically an IDE at this point. \nVisual studio is the worst due to broken licensing (i.e. the free community version wants me to sign into my microsoft account, and the sign-in feature links me around in a loop and never works), unusably slow auto-completion, and annoying defaults.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugiwlw/"
  },
  {
    "text": "Can we get some love for Visual Studio Code? The C/C++ extension from Microsoft does an excellent job!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duglbp0/"
  },
  {
    "text": "I hate VS when messes up .*proj and .designer.cs files just by changing one little thing... oh, it seems that you clicked on a button in your form... let me flip over all the lines in the designer file so that your commit is messed up... -.-",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugq82p/"
  },
  {
    "text": "I haven't seen much about C++ builder on here so..\nI've been using Embarcadero C++ Builder for about 5 years now. I have a love/hate relationship with it. \nPros: \n\nBuild Applications easy and fast\neasy to use \nhas most things you would expect from and IDE plus some\nmulti platform (I don't use this feature personally)\n\nCons: \n\nLinker bugs\nOnly supports full C++11 with clang based compiler\nReally slow compile times with clang compiler.  \nlack of third party library support for bcc compiler",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugwxn3/"
  },
  {
    "text": "I use visual studio since in recent years it has become pretty ubiquitous for game development. UE4 and Unity both use it as a default and primary editor.\nWhat takes it from \"okay\" to \"good\" (but not great) for me are the addition of VsVim for general code navigation/editing and Visual Assist X (or VAX for short) which is an improved intellisense replacement.\nLastly at my workplace increadibuild and its visual studio plugin helps to massively speed up build times.\nHere's why I say good, not great:\nFor one example: With a recent task at work I've been discovering that project files and solution files have a bit of an ugly relationship. For example if you open a project in visual studio and build it, it may build differently than if you open the solution and build it because even when building individual projects the solution-wide configurations meddle with the build process.\nThere's also just a number of annoying UI windows. Visual studio has a heap of them, but some have really annoying rules regarding resizing, always-on-top, or other window settings which get in the way.\nAll that said, I don't think there's a better dev environment for what I do. So it's not great but it's good and the best available.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh3jxf/"
  },
  {
    "text": "visual studio should be fine, but with its shitty intellisense makes it the worst.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhb335/"
  },
  {
    "text": "Best: VS >= 2010\nWorst: VS <= 2008",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhi80y/"
  },
  {
    "text": "Eclipse gives me testicle ache",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dui7vdo/"
  },
  {
    "text": "QtCreator has been amazing for me. C++ is just a hobby for me, and Qt just feels great to use. The IDE lets you do everything by hand or use the designer tool if you're lazy or just want to have a window done quickly.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duiym54/"
  },
  {
    "text": "I knew what the result for \"worst IDE\" was going to be, and that it would be the \"winner\" by a long shot, even before I saw the results...",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dun2apz/"
  },
  {
    "text": "vim/emacs/vscode(meh).. i stopped using real IDE's long time ago",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/durfgvx/"
  },
  {
    "text": "I wonder about that \"other\"... quite popular. What is it? C++Builder? stuff for embedded? \nEdit: wow, XCode!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duflmwi/"
  },
  {
    "text": "I'm sorry but if you use vim/emacs (even nano) you've cucked yourself.  Using your hands to hammer nails doesn't make you talented, it makes you a fool.  Use the right tool for the job \u2764\ufe0f",
    "score": -2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugmt1z/"
  },
  {
    "text": "vim and visualstudio express(2015, 2017).\nvs express edition doesn't support vim feature(vsvim), so i am implementing my own editor.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh6qj0/"
  },
  {
    "text": "What world are you people living in? Xcode is BY FAR the best.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duihmnu/"
  },
  {
    "text": "What was the N64 IDE called? And are you saying the PS1 used the same IDE? I'm interested in seeing what it looked like.\nDid the N64 have an SDK or something? Or did you just write everything you needed yourself?",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugf36e/"
  },
  {
    "text": "Sounds like the SNSystems debugger. But that wasn\u2019t an IDE, really.\nUnless you\u2019re talking about the CodeWarrior IDE, though I\u2019d be surprised if they shipped something with an off-by-one error, at the same time automated software updates weren\u2019t a thing back then either, so I suppose it is possible.\nI never did N64 professionally, but the PS2 tools by SNSystems were still fairly Windows 3.1 looking back in 2001.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugghek/"
  },
  {
    "text": "Which games did you develop?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dujerqi/"
  },
  {
    "text": "I have a friend that's been messing around with the N64 C SDK. The only compiler provided is ancient at this point, and super buggy. In a function, you must declare all of the variables at the beginning, before anything else, or else the compiler will throw an error.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duk5sjg/"
  },
  {
    "text": "I learned c++ with DevC++! It's my pick for worst IDE as well",
    "score": 20,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugd738/"
  },
  {
    "text": "I learned C++ with Dev C++, and back then (more than 10 years ago), it wasn't too bad.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhccl5/"
  },
  {
    "text": "Same here, luckily the professor let us change it as he knew how shitty it ~~was~~ is",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugfgtc/"
  },
  {
    "text": "I also like to use terminator to have multiple displays and I use htop to monitor how the program runs",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugfq8y/"
  },
  {
    "text": "Really? Xcode is rock solid for C, and VS is complete garbage to me, it doesn't even suggest variables as you type...\nlike it'll show you but it just gets in the way and idk it's VERY irritatng.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duihh2u/"
  },
  {
    "text": "what I dont get with people that use vim or similars is how do you guys refactor your code on large projects. I'm sure multi-cursor edit is simple enough to implement and there's probably plugins for it. But when it comes to renaming an interface in a large project, I would be kind of scared of doing a simple string search/replace without any compiler help or without being able to pick and choose which of my \"hits\" I actually want to replace and which I want to leave out. It's easy enough on Intellij and maybe other more bloated IDEs, but I dont know how vim/emacs guys deal with this. Also, moving something from one package to the other is a piece of cake with Intellij, since it re does your imports for you anywhere you were importing and using your class.",
    "score": 21,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug373n/"
  },
  {
    "text": "Very true.  I'm a KDE developer so by all rights I should use KDevelop or QtCreator exclusively.  But those weren't available when I started so even now I'm still a \"Linux as the IDE\" developer, with Vim, a Konsole with a gazillion open shells, and a good web browser.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug2zb4/"
  },
  {
    "text": "I use Unix as an IDE (mostly) but can't say I love it or anything. I waste so much fucking time playing the why isn't neovim working properly game that it drives me insane. \nAlso, I fucking LOVE autocompletion. The better the autocompletion the happier I am. I view it as documentation-while-you-type more than save-you-key-strokes as I frequently work on libraries/languages/projects that I'm not quite familiar with and so those little bubbles of docstrings and extra potential functions/methods I could call are educational while I work.\nThat being said, YouCompleteMe is probably the worst completion system amongst Xcode/Atom/VSCode/VisualStudio/Clion.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duge46b/"
  },
  {
    "text": "people will check the box of the the best IDE among those that they have actually used.\n\nThis problem is unique to software developers. Everyone else will happily vote for something they've never seen.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugqhvi/"
  },
  {
    "text": "V C P K G",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dui8jyy/"
  },
  {
    "text": "Eclipse based IDEs get much better if you have lots of RAM and you make an effort to go in and edit the launch files.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufyrpe/"
  },
  {
    "text": "The OOM issues are solved by editing eclipse.ini and giving a couple GB's of memory. Before switching to visual studio code, I used Eclipse CDT to work on the chromium codebase (several gb's of code) without issues.\nIf you want to give Eclipse CDT another try you can check this https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_eclipse_dev.md#Setup",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufyr9g/"
  },
  {
    "text": "Do you use any addons like Visual Assist X or Resharper++? I have always wondered how a big flagship product like Visual Studio can be so bad at code surfing.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufn5r1/"
  },
  {
    "text": "Have you done lot of customization to your key shortcuts? For me they are horribly inefficient, hard to use and unintuitive. I never bother to spend multiple hours just changing shortcuts. And have they finally made mouse back&forward keys working?\nI prefer QtCreator",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufqmch/"
  },
  {
    "text": "I second your decision but are you not looking over the times when Intellisense just stops working?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dzoeg92/"
  },
  {
    "text": "I'd recommend Visual Studio Code with the C/C++ extension. The extension will reach 1.0 some time in March or April",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh667e/"
  },
  {
    "text": "CLion lightweight? It feels much slower to me",
    "score": 15,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufy07w/"
  },
  {
    "text": "IntelliSense is just dumb at times. Recently I discovered that in large header files IS would underline every function as \"not implemented in cpp file\". Turns out, if there are any classes/structs/enums defined inside of a class they need to be defined AFTER the constructor and the destructor. Now I do that, and IMO it is terrible, but it is better than IS not working.\nTo be fair I haven't had the opportunity to try VS2017 yet, this happens in VS2015. Maybe IS is better now.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmqfh/"
  },
  {
    "text": "Yeah, visual studio is by far the best but also the worst at the same time...",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duflxpq/"
  },
  {
    "text": "I don't like VS for multiple reasosns\n\npushing a lot of non-standard features (why the fuck precompiled headers are from #include \"stdafx.h\"? Other compilers just use commands) (Warning 4996 - some standard functions are marked as deprecated even though they are not)\nbloated, installs and launches long (Eclipse was faster)\nno good themes - seriously - I have browsed most of the market and almost all themes still leave 50% of the code white. Eclipse has >30 colors, including setting different colors for overloaded and non-overloaded operators, parameters vs members\ngitignore for VS has over 100 lines\nWindows only",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugarro/"
  },
  {
    "text": "What do you mean by these incremental builds?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duflqkl/"
  },
  {
    "text": "Once you break Xcode\u2019s code parsing there\u2019s no coming back. Xcode absolutely grinds to a halt on large codebases on my 2017 MacBook Pro.\nXcode is clearly designed more for iOS app development. Xcode punishes you for wanting to write C++.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufvbw8/"
  },
  {
    "text": "Man, I'm glad it's not just me. Took forever to figure out XCode, has to be the most unfriendly user interface I've used.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug6ryh/"
  },
  {
    "text": "Sublime is awesome, but it's really more of a text editor than an IDE.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmoxx/"
  },
  {
    "text": "it just freezes up, no amount of waiting was enough.\n\nEncountered this strange issue as well, though it doesn't freeze up for me, just the debugger inspect view becomes non-interactive until I move to the next instruction.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugdxs2/"
  },
  {
    "text": "All hotkeys were Mouse button combinations\n\noh good lord that sounds horrible.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dvyjl0o/"
  },
  {
    "text": "Is it bad for refactoring or debugging?\n\nFrom a good IDE, you should expect the ability to confidently rename variables, and maybe generate getters/setters. Beyond that is up to you, really.\n\nIs there something that is clearly just better?\n\nAs far as CodeBlocks alternatives go, I'm hearing good things about CodeLite. Haven't tried either one myself though, I use QtCreator.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duk68x9/"
  },
  {
    "text": "I honestly don't know how someone feels this way about JetBrains products. They are by far the best IDEs I have ever used. They are very customizable and literally every action is key-bindable. It's like vim, if you use it once, you get mad because you can't figure out how to quit and you tell everyone it sucks, but if you actually figure out how to use it is light years ahead of the competition.\nWith that said, CLion is a bit limited because it only supports CMake, at least the last time I tried it, so that may be a deal breaker for some.",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug383l/"
  },
  {
    "text": "I couldnt disagree more about JetBrains products, they offer a quality that many others only can dream about, it has every i need and more, it is well integrated and if something is lacking you can develop a plugin\nIt uses more resources than others ide but it is nothing critical, is responsive as any other Ide on the market, so what? I dont really care about the extra ram and if you want to use less CPU you can activate the power save mode\nEven Google noticed tha high quality and switched from eclipse to IntelliJ for Android",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug1lww/"
  },
  {
    "text": "Nice to know someone shares my feelings for JetBrains stuff. And for Java, now VSCode has proper Maven support with the Red Hat plugin ill never have to touch IntelliJ again... I hope...",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufll1o/"
  },
  {
    "text": "I like and use CLion on my machine at work on all my projects. It can be slow and needs stout hardware to be useful. For other OS projects I use codeblocks on my slower systems.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufukeo/"
  },
  {
    "text": "I think people don\u2019t like Xcode since it\u2019s not a clone of Visual Studio. It just takes some time to get used to.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duggl5y/"
  },
  {
    "text": "Pffft, real men pipe shell echoes to source files.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/e0bznsx/"
  },
  {
    "text": "Xcode project files can be built from command line. You can use whatever IDE you wish with them, as long as you either import the Xcode project file or make a plugin to expose the file structure of the project to the IDE. In most IDEs, it\u2019s not super hard to do.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh07a9/"
  },
  {
    "text": "I use visual studio code: it is multiplatform, has a debugger, understands c++ enough to make good predictions, has a pretty decent project manager, there is not much else lacking. Furthermore, I can use the same IDE for typescript or python with best results.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufy8pu/"
  },
  {
    "text": "u/tjgrant is right. It was SNSystems. Was it an IDE is a semantic argument. I used it to edit and debug code. That\u2019s good enough for me.\nThe N64 had an SDK. But, it only did the most basic stuff. The most important feature was the RSP (GPU) microcode from Super Mario 64. You were able to write your own custom microcode to customize how graphics were rendered at a very low level.  But, SM64\u2019s was good enough for many games. So, many games shipped with it unchanged.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugyyiw/"
  },
  {
    "text": "For all intents and purposes, the software no longer exists.  For PS4 development everything is integrated with Visual Studio.  Thank God.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugkd1m/"
  },
  {
    "text": "SNSystems have got soo much better so then.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dughx75/"
  },
  {
    "text": "That was the story of working on Paperboy for the N64.  It was my first game right out of school. After that, I moved to engine/content pipeline work. You can read more stories from that experience here.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dujrv5c/"
  },
  {
    "text": "Yep.  That's classic C.  All C was like that back then.   And, C++ was considered too slow and complicated for gamedev at that point.  Fortunately, the lead engineer where I worked had a compiler background.  So, he got a C++ compiler working for the PS1 even though Sony would not provide one.  I don't recall if Nintendo provided the C++ compiler we used, or if our lead brought up that one too.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duk9cqb/"
  },
  {
    "text": "In a function, you must declare all of the variables at the beginning, before anything else, or else the compiler will throw an error.\n\nThat's all the language allowed for prior to 1999.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dukwemw/"
  },
  {
    "text": "Renaming an interface is indeed a bit messy. There are plugins for that, but I had a better experience with Visual Studios built in rename. On the other hand most of my interfaces are only used in 2-5 files, so even without a plugin renaming is quite fast.\nOther refactorings, like changing function arguments, are a lot easier to do for me in vim. Change the function, hit compile and your at the first compilation error, make your changes, jump to next by either recompiling if the change produces a lot of errors (like templates) or by jumping to the next item in the error list. You can navigate the error list in Visual Studio, but it is a lot more work as compiling doesn't automatically jump to the first error. Is there a better way to do that in Visual Studio, where you need manual work for the changed argument?",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug8e18/"
  },
  {
    "text": "With proper semantic code search this isn't hard in Vim. I can jump to the definition of whatever's under my cursor with two key presses. I can pull up a list of all references to a symbol similarly. Moving back and forth through the list is a single key press.\nWith my particular keybindings, to rename an interface, I'd populate a list of references with &lt;space&gt;v, rename the first one with cwNewName&lt;esc&gt;, then F2 to jump to the next reference. If I want to change that one, . will do it. Otherwise F2 again to jump to the next one. Repeat until I've reviewed all the spots.\nThis all did take a bunch of setup, but I'm pretty sure it's faster and easier than Intellij once set up.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugee07/"
  },
  {
    "text": "We use tools like rtags: https://github.com/Andersbakken/rtags\nLiterally everything you like about your IDE can be done in a good Emacs/vim setup.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug8p8w/"
  },
  {
    "text": "Vim unfortunately doesn\u2019t even come close to leveraging all the functionally made possible by LLVM clang-tools and related programs and libraries.\nBecause it\u2019s running in terminal with ncurses there are some limitations, but you can still do some really powerful things with clang-tools.\nClang language server has the potential to make the ultimate auto completion engine.\nI wrote a small neovim plugin that controls lldb and allows me to set breakpoints in vim directly.\nI envision a modern terminal standard that allows more than just grid based text and curses style graphics. Imagine if you build a modal editor that combines that with all the functionally that the llvm libraries expose, but that\u2019s the classic problem of\nBetter IDE -> better editor -> better terminal emulator",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh8swd/"
  },
  {
    "text": "sed & awk. I can't say I'm in love with the solution, but it works.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugduu6/"
  },
  {
    "text": "There are plugins (such as vim-refactor), but one of the best tools is eclim. It lets you use Eclipse features in Vim. It's not as smooth as using something like Eclipse directly, but it's a small price to pay for the increased efficiency that Vim gives you.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug5okq/"
  },
  {
    "text": "I like cscope. Vim can read its tags and so you can jump from any variable name to its definition; from types to their class definitions; from function names to their definitions\u2026 you can do symbol usage lookups, all kinds of different things. I wouldn't try to refactor a complex C++ codebase without cscope and in fact I usually set up a post-checkout git hook to rebuild my cscope tags in the background. Makes Vim really feel like an IDE to me, more so than pretty much any other plugin. Although a Vim-integrated debugger would blow my mind.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugfpe1/"
  },
  {
    "text": "If you're using neovim, you should be using deoplete along with LanguageClient-neovim and clangd. It's significantly easier to set up than YouCompleteMe and works much better in my experience.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh519u/"
  },
  {
    "text": "I didn't mean to suggest that was my only problem with it, I just wanted to give an example of some of the problems I had. Sorry if that wasn't clear on my initial post.\nSome of the other problems I had: problems with certain c++ language features (c++11,14 features), autocomplete not working on certain types, go to header sometimes going to the wrong file etc. Some of these had fixes, some did not. At some point I had enough and decided to try a new editor (qt Creator) which didn't have most of these issues. \nNote that this was back in the eclipse Luna days. I hope they've fixed some or all of these issues by now.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugd1wk/"
  },
  {
    "text": "[deleted]",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufnhs6/"
  },
  {
    "text": "I suspect Microsoft may have some sort of deal with the developers of famous plugins like Visual Assist (Whole Tomato Software) this is why the code refactoring stuff sucks so much with VS compared to other IDEs, so that everyone buys plugins.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufpxdi/"
  },
  {
    "text": "No I don't, a few other colleagues do though along with another plugin called \"FastFind\". Visual Studio 2017 comes with a whole new suite of improved search features, better filtering and more filtering options in intellisense which make it much easier to browse code. \nEDIT: I have tried Visual Assist X but on a large scale project it just eats up loads of memory and boot times are really slow.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufq9w0/"
  },
  {
    "text": "I haven't found VAX necessary since VS 2015 (and 2017 was even better), before that it was a must-have though.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug0qh6/"
  },
  {
    "text": "Not really, it depends on how you like to work. Here's a sum of what I use frequently:\nCTRL + F - find in current file\nCTRL + SHIFT + F - Find in entire solution/project (can use regex here)\nCTRL+TAB/CTRL+SHIFT+TAB - Switch between tabs\nCTRL+Shift+V - Cycle paste history\nCtrl+; - Highlights solution file find (very handy)\nF12 - Go to definition\nWorth noting and something I thought was integrated into Visual Studio but I actually use this plugin: https://marketplace.visualstudio.com/items?itemName=SamHarwell.MouseNavigation\nIt allows you to go back and forwards from where you were previously editing/searching (it's a different shortcut for ctrl++ ctrl+-)",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug87tw/"
  },
  {
    "text": "Oh god that's my fetish. I religiously sync my dotfiles and maintain custom key bindings for everything. I'm one of those people whose computer is unusable by others because the keys do the opposite of what you expect.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugeh03/"
  },
  {
    "text": "For me it feels like that, because you can comfortably work in CLion with just one window with code and line numbers, while in VS you always distracted by unnecessary functions to the point where even keybindings configuration becomes impossible.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug9l9u/"
  },
  {
    "text": "Maybe startup by a few seconds but the actions and manuevering is quicker for large projects",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugkbov/"
  },
  {
    "text": "Turns out, if there are any classes/structs/enums defined inside of a class they need to be defined AFTER the constructor and the destructor.\n\nThis is a great tip, as I've run into this problem as well (I tend to put the enums at the top)! Thanks.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufsu82/"
  },
  {
    "text": "Well it's the trade off I guess. Should be fixed nonetheless",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dzoek3y/"
  },
  {
    "text": "bloated, installs and launches long (Eclipse was faster)\n\nHave you tried since they introduced the new install experience? Ever since that first installation and launch have been at least 5x faster for me.\n\ngitignore for VS has over 100 lines\n\nWouldn't you have all the platform-specific build files such as the solution in a separate directory such as \"build\" anyway?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugel6n/"
  },
  {
    "text": "Hitting Build regularly during editing to see if the changes made compiles.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufm0if/"
  },
  {
    "text": "one could say the same for vim and emacs, but they are in :)\nand vim, emacs and sublime all can get quite close to a full blown IDE with the right plugins",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duftqny/"
  },
  {
    "text": "Most likely because the debug symbols for Wt aren\u2019t there, and likely the sources aren\u2019t either.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh02wt/"
  },
  {
    "text": "Thanks for your thoughts here. I have code::blocks up, and it works, and I think I will just keep using that until I am good enough to appreciate the difference. :)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dukxqxh/"
  },
  {
    "text": "I don't have any strong issues with JB IDEs regarding the usability/combustibility, but god they feel painfully slow/laggy! Doesn't matter whether I'm on a mid-range i5 laptop with 6GB of RAM or on 4GHz quad core Haswell Desktop with 16GB of RAM, the delay (in typing, completion, highlighting, etc.) is still noticeable. And they are pretty resource-hungry to boot.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugelqp/"
  },
  {
    "text": "JB products are just so damn confusing. I haven't found any feature of a JB app that would make me want to use it over vim.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugelw6/"
  },
  {
    "text": "Wow really? I love JetBrains, especially CLion, I feel like most C++ IDE's are extremely convoluted and hard to manage/work with;\nSetting up toolchains etc. in CLion is just so easy, that's the main thing for me.\nI have to admit though, it's slow as fuck and JB should give up on building/using their own parser.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duflunq/"
  },
  {
    "text": "I think it must be something like this. IMO Xcode's UI has always been better than VS and some of the most significant improvements in VS for me have been because they introduced features from Xcode, such as single clicking to view files and the ability to usefully break windows out of the main VS window.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duglenm/"
  },
  {
    "text": "That doesn't really help, unless I am misunderstanding. I think what you mean is: I can use whatever text editor to write the code - but I have to build with Xcode on the command-line. If the build errors, the errors will not show up in my editor/IDE. I will have to read the command-line and manually go to the file's location in the IDE. This is cumbersome, idiotic, and unnecessary manual work.\nAnd what about debugging - after I've built the iOS app on the command-line, can I run it on the phone using the debugger in, let's say CLion? And stuff like breakpoints in the IDE and variable watch window will work flawlessly?\nAnd for sure I am not going to write a plugin to make this work. I have to work on my work project's code, not spend time on developing some IDE plugins. This is why there are IDE developers - they are supposed to give me, the user of a IDE, a good IDE that makes me productive in my day job.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhh396/"
  },
  {
    "text": "you can also do something like so.\nvim `grep -iRl \"thing2Change\" ./directory/to/search`\n\nAnd then in vim itself do the following:\n:bufdo %s/thing2change/thing2changeItTo/gci | update",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dvyc7tj/"
  },
  {
    "text": "It does sound doable but i still dont think its easier than intellij where you can review all your changes and just click on the ones you want to keep. But maybe i just need to see someone with a workflow like yours in action. Personally i have to pair at work so the company kind of enforces an IDE and its easier to get everyone up to speed with intelliJ than it would be with an advanced vim setup (when the configuration is actually so personal from my experiences so far). Nevertheless its interesting to know how others work and ive definitely attempted to get proficient with vim.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dughkqf/"
  },
  {
    "text": "I\u2019ve never seen someone make this assertion who has actually mastered an IDE. Sure most people have tried them but if you haven\u2019t used one on a massive code base while leveraging advanced approaches like conditional debugging or structural refactoring, you\u2019re just not making a fair comparison. \nConversely I\u2019ve used vi and vim (yes both) for 25 years and as a test of my own biases refused to allow myself to use IntelliJ to write some Go recently. I easily sunk 30 hours of messing with configs and plugins including  the excellent vim-go and rtags. After weeks in that setup, it wasn\u2019t close to IntelliJ. Not by a country mile. So no, \u201cliterally\u201d everything can not be done in a good vim setup and you\u2019re misusing the term \u201cliterally\u201d.",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugp0f9/"
  },
  {
    "text": "Rtags is great! All the power of IDEs but without the bloat",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugkhp6/"
  },
  {
    "text": "rtags is so weak compared to what a real IDE provides that it's not even funny",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhk83g/"
  },
  {
    "text": ":h terminal-debug\nPretty new feature. I only played for 5-10 minutes with it. Looks good though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugz6tm/"
  },
  {
    "text": "Last time I checked out the development status of clangd it was still missing some important features. Thanks for the reminder. I\u2019m gonna take a look at it again.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duha5lm/"
  },
  {
    "text": "It has huge problems with file includes over network.\n\nFile includes over network? Why would you ever do that? :) \nBut on the subject, I think Resharper takes a long time to index your code. It can be pretty tiresome. But once it is done, Resharper is the best choice for me.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufoz9i/"
  },
  {
    "text": "In 2015 and 2017 they started integrating a lot of the tools offered by these plugins.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufrbv7/"
  },
  {
    "text": "Wouldn't you have all the platform-specific build files such as the solution in a separate directory such as \"build\" anyway?\n\nYep, my gitignore for VS is just:\n/_build*\n\nWorks for UNIX too!",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duggs3u/"
  },
  {
    "text": "Maybe managers in the team were bad with it. I would say yes, they commited dlls and other binary stuff.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugrgfc/"
  },
  {
    "text": "Ah, you mean, VS intellisense is bad compared to some other IDEs? Yes, true.\nDon't hit build, hit Compile though :-)",
    "score": -7,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufm642/"
  },
  {
    "text": "Suppose you're right, didn't think a lot of people actually used sublime as an IDE",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug6uc2/"
  },
  {
    "text": "Are you on ssd or spinning disk? I've experienced no delays since I mostly use ssd everywhere and I've used jetbrains ide of some sort daily for the last 5 years. But one laptop at work had spinning disk and idea was insanely slow to start, like 20 minutes on that one.\nAlthough I have to say clion is slower than idea/pycharm and was even slower a year ago. Seems to be getting better though",
    "score": -1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugf1oo/"
  },
  {
    "text": "CLion has great design, but it becomes very veeeeery painfully slow with a project with a few hundred thousand LoC.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmtx8/"
  },
  {
    "text": "After trying about a dozen C++ IDEs and having no clue how anyone can stand most of them (especially Eclipse and NetBeans, which, IMO, are terrible), I decided to shell out for CLion, because for me, it's easily the best.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/e1mhxdo/"
  },
  {
    "text": "You can build with Xcode on the command line, yes, and the errors from the compiler should be understood by any programmer's editor worth their salt. You basically fire off the build command via the editor's \"command\" facility, the editor then displays the output and links errors to source files and makes them clickable. Nobody expects you to do it manually - that's why good programmer's editors integrate with error message outputs, and this is very much a solved problem.\nXcode is a decent IDE - if you don't like it, you've made a choice to invest in something else...",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dulwck3/"
  },
  {
    "text": "The question was about c++, not go. I have yet to see a feature in a c++ ide that I can\u2019t do the same for in Emacs. But you\u2019re right, I\u2019m only dealing with 10-100k loc codebases, not millions, so maybe things are different at that scale. I\u2019d love to know what I\u2019m missing though so I can implement it.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugt3w7/"
  },
  {
    "text": "No one I've heard make this assertion had actually mastered vim/emacs++ setup.\nIf you need an IDE to refactor your code without error you should really revaluate your career choices. And visual debuggers are nice, but if that's what's holding your productivity back, your coworkers are reevaluating theirs.\nPut another way, you spend the vast majority of your professional time reading and editing code; to optimize productivity your tools should accommodate this. Massive renames are a corner case, and are probably worth going through extra review. If they're not, you're definitely doing your job wrong.",
    "score": -1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhb5yl/"
  },
  {
    "text": "File includes over network? Why would you ever do that? :)\n\nSomeone's never used Clearcase Dynamic Views for version control...",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufyn3y/"
  },
  {
    "text": "File includes over network? Why would you ever do that? :)\n\nIT and Engineering were in different cost centers so cheap NFS servers that add six hours to the build time meant big bonuses for IT!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh9vw0/"
  },
  {
    "text": "I don't think you should really blame the IDE for incompetent people being unable to follow a simple process. Of course it passing a code review before being committed is even worse.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh9gyh/"
  },
  {
    "text": "[deleted]",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufmo1j/"
  },
  {
    "text": "There's so many packages for sublime that you can turn it into an IDE",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhco36/"
  },
  {
    "text": "SSD on desktop, SSHD on a laptop. Helps with start up/indexing, not much with general latency.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugjjss/"
  },
  {
    "text": "Wtf are people writing this much code for? I've never had a project larger than like 5000 lines. These are for APIs with 10-20 models and controls with helper functions. Not counting 3rd party dependencies",
    "score": -14,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug1450/"
  },
  {
    "text": "Ooh okay, yea that's right! That's a good motivation to try a couple of other things on Mac and see whether it works decently, thank you very much! :-)\nI am definitely spoiled by Visual Studio (with CMake, not VS build), nothing comes close to it in terms of productivity and debugging tools.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dum5yvo/"
  },
  {
    "text": "Does vim support a clang-based code model? If not, then it won\u2019t be able to do a lot of things trivial in IDEs with a full C++ parser (e.g. those using clang). C++ parsing is anything but trivial.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugzi66/"
  },
  {
    "text": "Not who you're replying to but, in my experience, it isn't that I need an IDE to refactor my code for me. I just want it to do it for me so I can get back to coding. Same for the visual debugger. I work faster with it than without it.\nAs with most jobs, you should be using the right tools for the right job. For many, that is an IDE provided by someone else as opposed to a custom environment with vim/emacs/whatever.\nYou probably shouldn't so quickly dismiss someone's opinion and imply, because they disagree with you, that they're terrible at their job. Maybe they'd be terrible at your job or in your work environment but so what? Their experience is going to be different from yours and that doesn't make it demonstrably right or wrong. Just different.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhwh60/"
  },
  {
    "text": "Doesn't sound appealing...",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugqf7h/"
  },
  {
    "text": "Urgh! Theres an unpleasant flashback. I used CodeWright and Clearcase Dynamic Views at my first place of work. A horrible combination of trouble and problems. Just don't do it, folks",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhpi1h/"
  },
  {
    "text": "There was very abnormal review (people who did it cared much more about indent and whitespace instead of what the code was actually doing). The most sad part was that there were no restrictions when compiling. Several thousand lines of warnings every time you compile.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhf9lt/"
  },
  {
    "text": "It may depend how many new C++ features are being used. VS is by far my favorite IDE, but there are generally a few features that I know they haven't yet fully implemented, both in terms of compilation and Intellisense. The development experience goes best if the code evolves along with the ongoing dev/debugging experience, whereas if people aren't exercising IDE features throughout development (e.g. if the code was written in a text editor, or different compiler was used) sometimes certain things just aren't recognized (although I don't know the situation over the past few years - I was last using it heavily around 2014). I've also had to 'correct' a project by reorganizing the include file strategy for a project that did fancy things in its makefile - otherwise, lots of things weren't working. That isn't unexpected, but it can happen.\nEdit: I'd rather see more complaints about my post along with the downvotes. I'm surely not the only one who worked on projects that used SFINAE, constexpr, Barbados templates, etc.. which initially only worked with other compilers (it's common to use VS for embedded or game development even when Windows isn't a production target - because it's that good) and then were sometimes supported by the compiler before Intellisense. So certain features were either avoided entirely or used sparingly for a better development experience.",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dufp9qy/"
  },
  {
    "text": "My current projects have a third party code base of close to a million LOC. Thanks AUTOSAR.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug1mdv/"
  },
  {
    "text": "5000 lines is the size of some functions in some projects, I work with. No, your functions shouldn't be that long, but sometimes code grows organically with age and requirements. 5000 lines is something I would consider a small project (although line count is not the best measurement for complexity).",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dug9bj5/"
  },
  {
    "text": "Writing just 'hello world' with some modern graphics APIs is going to get you over 5000 LoC. Anything where performance is critical tends to have pretty big code bases in my experience. For a game engine honestly 50-100k LoC probably is what you would hit for a small custom made engine, just to have all the necessary features implemented reasonably.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugtvff/"
  },
  {
    "text": "There is VS for Mac! I\u2019m not talking about VS Code.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dupkwrs/"
  },
  {
    "text": "Vim and emacs have extremely good clang integration. Which shouldn't be a surprise because all of clangs tools are accessible on the command line.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh6qrs/"
  },
  {
    "text": "Yes there are clang-based plugins for both that do completion and/or semantic editing. For example with rtags I can do your standard find definition, find references etc as well as proper semantic refactoring across an entire project. There are also lsp-based plugins so you can use things like cquery.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duha1d6/"
  },
  {
    "text": "You missed the point: why do you even need to rename things across a million lines?\na) Failure of Encapsulation: local changes should have local effects; why is one change cascading over millions of lines?\nb) Failure of Planning: your global API had the wrong name or signature. This should be an extreme corner case -- how often do you fail to account for something used a million times?\nc) Failure to show Restraint: a global change for cosmetic reasons; maybe your time is better spent not changing \"Init\" to \"Initialize\" or vice versa.\nEvery time I've needed to do a large refactor it was:\nd) Language or Library change: IDEs don't necessarily do this for you, and if they do there's probably a clang tool you can use from the command line.\nI can write a sed or other script to rename global API, or change NULL to nullptr, and admittedly that probably takes a couple minutes more some menu item, but the entire point is that such an exceptional case it adds up to maybe a couple hours of work per year? You're optimizing the wrong path. I spend almost all my time finding and making small changes, and an light, scriptable editor optimizes that case very well.\nYou may not like the implied condescension in what I said, but notice the first sentence of my post was the same as the parents. I didn't come here to tell people IDEs are bad, but I replied to someone who came to tell people unix editor++ was (because he spent 30 hours trying, as if you could \"master\" an IDE in 30 hours). If you want to put other people's tools down, be prepared for a defense.\nIf you want to talk about visual debuggers, or how IDEs hide things from you that you should probably know, I'm game for that discussion too.\nEdit: we can also discuss how people who use vim report higher wages than other IDEs empirically, or anecdotally the most talented developers prefer custom low level tools to IDEs.",
    "score": -2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duhyez0/"
  },
  {
    "text": "Those are some really sucky APIs then. It takes well under 5k lines to implement a hello world running on top of raw OpenGL ES, with state-of-the-art shader-based font rendering, where shader draws splines and fills them. With a toolkit, similar functionality may fit in a couple of lines. Literally.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dugzypn/"
  },
  {
    "text": "Unless I missed something, \"VS for Mac\" doesn't even have C++ support. It's a very, very light edition, completely different from Windows VS.\nOr did I miss something in the last half year?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duqbly6/"
  },
  {
    "text": "My intent was not to put down someone else's tools. If that was the message that came across, forgive me. My intent was to suggest that experiences vary across the industry. In my experience, I need these tools because of legacy code.\nI've spent my entire development career working on software which was developed by physicists. I've also spent my entire career working to bring \"best practices\" to those code bases and in some cases that requires large refactors which benefit from the tools made available in the IDE.\nI agree that in the ideal world, you shouldn't need to modify code across the entirety of a million LoC project. I don't work in the ideal world. \nThe current project I'm working on was first released in 1990. I don't know if there are parts that still exist from then but I do know that for the majority of this projects life, it was maintained by one person. They created a very good product in terms of its usefulness for users, but the coding practices used were informed by their times and, as such, need some major work to bring forward.\nWith that being my experience, it makes sense for me to want an IDE which provides whole project refactoring tools. If I had been working on different projects, I'd certainly use the tools appropriate. I am, in no way, implying that everyone everywhere should be using an IDE. \nThe entire point of my post was, in fact, to suggest that instead of returning someone's dismissive/insulting attitude, you should strive to rise above and not fall into fighting at their level. But I could also just be bored at work and browsing reddit when I should be doing something more productive and decided to pick a fight.\nI had not heard that about the wages with regards to editor preference. I couldn't find anything after a few quick google searches but I feel that there are probably some interesting correlations to investigate.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dui4qpy/"
  },
  {
    "text": "A few random thoughts:\nDon't confuse correlation with causation. I'm not surprised that people who use vim earn more money, it's not easy to learn and master it, these are the kind of people who seek challenges, want to learn, coding is their passion... they probably would earn higher wages even if they didn't use vim. It's probably more their mentality that makes them more efficient than their editor of choice (from which they will squeeze every bit of productivity). A good IDE has easier learning cure so more people will choose it (it's the path of least resistance). Some people might be just as productive or even more than the ones using vim, but the mass of less experienced people will bring down the average. (Without knowing more about the statistics you are citing I cannot say more.) Using vim  might not make you a better coder, but probably being a good developer is a prerequisite to using vim.\nI don't use vim, it's not just that I'd rather not spend the time learning it instead of doing/making stuff, but I cannot afford the time to train new employees to use it. (If someone can, they are free to do so.)\nSo you might be a genius who is working on radically new stuff, or someone could make an argument that if you spending most of the time writing code, then you are doing it wrong. Instead of reinventing the wheel you should research and use already written libraries... ;)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dw2xelh/"
  },
  {
    "text": "Not sucky APIs, just ones that give you way more control if you need it. I'm taking specifically about Vulkan and DX12.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duh1s0m/"
  },
  {
    "text": "Yes, unfortunately it's for .Net development only and doesn't support C++. And yes, it is a different thing than the flagship VS. For .Net development, VS for Mac is quite nice though.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duumamp/"
  },
  {
    "text": "My comments were to the parent's reply alone -- how vim with plugins can do everything an IDE can, although with different tradeoffs. My clang or sed based script takes longer to write, but it also serves as repeatable documentation of the transformation set used. The transformation itself can be code reviewed, and repeated again in the future.\nBy all means use whatever tool is right for you at the time, but let's not pretend IDEs represent a missing master weapon elite developers somehow volunteer to forgo. The parent talked about million line code bases, but I guarantee you Google doesn't use a developer in an IDE to make sweeping company wide changes.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/duibndg/"
  },
  {
    "text": "Lol.\nI've never been confused by correlation or causality.\nPeople who are good at their job use vim because it allows them to code at the speed of thought. It's about ergonomics.\nGood tools doesn't make the artist, and good artists aren't held back by bad tools, but good artists seek the tools that don't get in the way or slow them down. This had absolutely no relation to using libraries.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dw324h8/"
  },
  {
    "text": "Those are not that different from WebGL or OpenGL ES... Perhaps the hello world you have in mind is not the literal \"display Hello World text\" but, say, displaying a scene of some sort. That gets complicated real quick, you're correct.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dulwm4z/"
  },
  {
    "text": "It takes you a few hundred lines of code just to set up GPU device state that would be the equivalent of glBegin and maybe 3 lines of code. Displaying a triangle with no vertex buffers takes around a thousand lines of code. There is no driver state machine, you have to specify all GPU state yourself. I'd say it's pretty different.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dulxjvz/"
  },
  {
    "text": "Hmm, you\u2019re right. I forgot the time I wrote this code and then just reuse it from the library. Yep, it\u2019s on the long side.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/dupl8zw/"
  },
  {
    "text": "QtCreator has everything I need: autocompletion, column edition, refactoring to rename vars but also implement virtual functions, move stuff from header to C, create properties. Powerful search using ctrl+k, switch between h and cpp.\nI mean what else do you need that is not in QtCreator?",
    "score": 45,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6jsc/"
  },
  {
    "text": "Visual Studio.  There are dozens of us!  Dozens!",
    "score": 147,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrt54y/"
  },
  {
    "text": "Spacemacs with ycmd for auto completion and error checking, with rtags (or perhaps, soon, cquery) for indexing. All libclang based, all highly performant and responsive. Outside of C++ specific stuff, it has the best vim emulation, the best buffer/window/workspace management, the best git extension, and the best textual search/manipulation (powered by things like helm and helm-ag) of any editor I've used.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrv2d3/"
  },
  {
    "text": "[deleted]",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts3s3h/"
  },
  {
    "text": "I use Sublime for all typing, though not really an IDE",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts5pqc/"
  },
  {
    "text": "Emacs.",
    "score": 44,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtru56i/"
  },
  {
    "text": "Code:blocks is still my goto IDE. Auto completes, decent debugging interface, themes, etc. Not the most fully featured or sleek, but still competent for what it does imo.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtso2u1/"
  },
  {
    "text": "QtCreator > other C++ IDEs. Clang-based online fixits are a godsend and the locator takes 1/100th of the time CLion's locator takes to populate its index.",
    "score": 61,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtro9gu/"
  },
  {
    "text": "WTF.  vi gets its own option but not emacs?\nLame-ass anchoring.",
    "score": 43,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrklu9/"
  },
  {
    "text": "Clion, it worths every cent",
    "score": 30,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrn3yy/"
  },
  {
    "text": "QtCreator. It's the only FOSS one that's good in my opinion.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts7frn/"
  },
  {
    "text": "Visual Studio, because it is an amazing tool for writing software. From within that one tool you can edit, do version control, change your build settings, build, run, and debug - it's an easily installed one-stop shop for all things programming.\nAnd once the code is running nicely on Windows I then check it out on a Linux machine, and do any necessary local editing using 'ed'. Because I'm not one of those sissies that need an \"improved\", \"visual\" editor... ;-)",
    "score": 25,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrymac/"
  },
  {
    "text": "For small test projects, I tend to use vim or even gedit. For bigger ones, I used to use Eclipse, but I've recently moved to KDevelop. It keeps getting better and better.\nBy the way, if you're willing to try it, get the ~150MB AppImage from the official site. That's what I use because I'm too lazy to compile it and the OS repos constantly lag behind :D",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrnxe9/"
  },
  {
    "text": "Qt Creator, for both C and C++ (even when not using Qt at all, actually.)\nThis allows me to use it on all platforms I need/want to support. Just copy the project over and I can build and debug right away, in the same IDE. No need to maintain separate VS, XCode, and Android Studio project files anymore.\nNot everything is rosy though. If you have Java code in your Android parts of your app, it's a bit of a hassle. But for Windows/macOS/Linux/Unix-likes, it's a huge time saver.\nI've heard somewhere that apparently there's even Linux kernel developers out there who have switched to Qt Creator for kernel code development. I hope it's not an urban myth.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttw66b/"
  },
  {
    "text": "Visual Studio. Just about perfect for me coverall, but my favorite feature is IntelliSense. I've seen a bunch of other IntelliSense-like features in other editors (including VS Code) but they all seem to be extremely context unaware and rarely seem to do more than just suggest recently typed words. \nNo idea why people complain about VS being slow. Even on a solution with >200 projects, it's still fully usable.",
    "score": 14,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrzzv3/"
  },
  {
    "text": "Visual Studio in Windows. Kdevelop at home.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsj7an/"
  },
  {
    "text": "Visual studio. I learnt to use C++ in an IDE and have stuck with it. Over the years I've looked at the text editors that some people are always raving about (vi, emacs etc.) but I have never been able to convince myself that it's worth devoting a significant amount of time to learning how to use something that has fewer features. And at the same time losing truckloads of convenience like good debugging, disassembly, intellisense, version control integration etc.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsn2cl/"
  },
  {
    "text": "I use emacs.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtspart/"
  },
  {
    "text": "QtCreator is fast and reliable.\nIt does the job pretty well.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttczi6/"
  },
  {
    "text": "One of by biggest pet peeves is people waxing eloquent about how they only use a text editor and IDEs are a waste of time and resources, and then complain that they don't like auto because it makes it hard to figure out the type of the variable. A good IDE (for example Visual Studio) has no trouble showing you the exact type of the variable when you hover over it.\nPlease feel free to use your text editor. But do not try to cripple C++ to conform it to what your tool can handle.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsdlqw/"
  },
  {
    "text": "I use NeoVim with YouCompleteMe under Arch Linux with i3 tiling WM.\nI also use a lot of the LLVM tools directly from terminal. \nInterface responsiveness is very important to me. Check out alacritty https://github.com/jwilm/alacritty\nIt\u2019s a GPU accelerated minimalistic terminal emulator.\nI haven\u2019t found anything that beats this combination performance-wise.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts1fpi/"
  },
  {
    "text": "For most projects, kdevelop. For QT protects, QT Creator. For Windows versions of my kdevelop'ed projects, Visual Studio 2017. For macOS anything, QT Creator.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbb97/"
  },
  {
    "text": "Visual Studio is the least clunky C++ development experience that I've used.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts5giy/"
  },
  {
    "text": "QtCreator has everything I need: autocompletion, column edition, refactoring to rename vars but also implement virtual functions, move stuff from header to C, create properties. Powerful search using ctrl+k, switch between h and cpp.\nI mean what else do you need that is not in QtCreator? Just curious.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6gsh/"
  },
  {
    "text": "Surprised that Atom isn't on the list, it seems to be pretty popular with developers - I use it for PHP and C/C++ (with plugins to make it closer to an IDE).",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrmsm6/"
  },
  {
    "text": "Visual Studio. The debugger is just unmatched.\nI always feel sorry when I see colleagues using qtcreator for debugging.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts8tpc/"
  },
  {
    "text": "I just only tried this briefly, but it seems very promising\nhttps://github.com/cppit/jucipp",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsc2up/"
  },
  {
    "text": "Visual Studio for Windows, Qt Creator for everything else",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtscy25/"
  },
  {
    "text": "Xcode is a good choice, it comes up with clang as default compiler.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsoshx/"
  },
  {
    "text": "CLion!!!\nIf not CLion, then CMake/gVim.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtssk6q/"
  },
  {
    "text": "Visual studio + visual assist on windows.\nVisual studio code + a number of plugins and scripts for mac",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt10ni/"
  },
  {
    "text": "I will get ranted and down voted but I use Geany mainly for all my programming. Including C++.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt3idp/"
  },
  {
    "text": "After 24 hours the poll collected almost 1,300 responses.\nThanks everyone for voting and commenting.\nAs promised I will post the results soon.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtth8g8/"
  },
  {
    "text": "I use Visual Studio 2017 (exclusively with the new CMake facility) in Windows + Resharper for C++, and Clion in Linux.\nI wish though that Visual Studio just used Visual Studio Code as the editor. It is so sad that they still do not support natively multiple cursors, select next occurrence etc.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsdrp6/"
  },
  {
    "text": "[deleted]",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrkne5/"
  },
  {
    "text": "Spacevim",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrmrqc/"
  },
  {
    "text": "I use VS Code for editing and VS for running and debugging, because VS is atrociously slow. Opening a file with the quick-open thing takes seconds.\nAlso VS code has some really nice plugins that I would seriously miss.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts2gs0/"
  },
  {
    "text": "Eclipse but might switch to KDE or Qt. Never VS.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrovay/"
  },
  {
    "text": "I don't use an IDE. I use text editors, mainly Sublime, VS Code, vim, and Geany.\nI see no point in using an IDE over a text editor.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrnrxe/"
  },
  {
    "text": "I am a noob programmer still learning the language and I am pretty much forced to use visual studio since almost all of the tutorials are for that. If I knew how I would use code::blocks. I just find it easier to focus and more visually appealing, I don't know why",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrzvtv/"
  },
  {
    "text": "Is the poll about preference or about about what your current professional environment \"forces\" you to use?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts7rpl/"
  },
  {
    "text": "Atom for big projects, Vim for small stuff",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsfuc4/"
  },
  {
    "text": "Emacs when I can, visual studio when I must",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsj07q/"
  },
  {
    "text": "Vi, and three other terminal tabs.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsuu2b/"
  },
  {
    "text": "Can we see the results?  They're typically revealed to participants once they submit their selection...",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsuuof/"
  },
  {
    "text": "Learned my C++ in Bloodshed's Dev-C++",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsvk9g/"
  },
  {
    "text": "Default IDE for platform",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsz0lj/"
  },
  {
    "text": "For writing code I use vim with the following plugins:\n\nYouCompleteMe\nNERDTree for viewing the file system in a tree view\nTagbar for viewing the functions and classes in a tree view for the curent file.\nctrlp.vim for fuzzy file search\nvim-cpp-enhanced-highlight highlights things commonly found in C++ programs such as STL functions and classes\nag.vim for fuzzy content search, I usually still prefer using ag from the commandline though\nvim-fugutive for common git operations such as blaming and logging\nultisnips for commonly used boilerplate\n\nFor debugging code it depends on what platform I'm on and what compiler is used.\nWhen using GCC/clang I use Qt Creator as a visual debugger.\nWith clang-cl/MSVC I tend to use the Visual Studio debugger for live debugging, and WinDBG for post mortem debugging.\nI'm not hardcore enough for commandline debugging, my colleagues are though.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbane/"
  },
  {
    "text": "Not an answer but a question:\nI'm currently using CLion and i want to try QtCreator but i'm to fond of my keybinds, does anyone knows a way to export the keybinds from CLion to QtCreator?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtthbyp/"
  },
  {
    "text": "KDevelop, hands down.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttvdjf/"
  },
  {
    "text": "Xcode on macOS and Visual Studio on Windows",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu1qj9/"
  },
  {
    "text": "Emacs",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvklpd/"
  },
  {
    "text": "poll results?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw3dx1/"
  },
  {
    "text": "Visual Studio + Visual Assist and disabled IntelliSense on my desktop, becuase it does everything I need really well and it's just so insanely fast to work with (lot's of credits due to Visual Assist for that) and QtCreator on my Laptop since it runs Linux.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxdywz/"
  },
  {
    "text": "https://www.sourceinsight.com. Loads in seconds, works with hundred of thousands files.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtymutb/"
  },
  {
    "text": "cquery + VSCode/Emacs/Atom/Vim ...",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/du1ep0u/"
  },
  {
    "text": "vs2017 express (free for commercial application): http://aka.ms/vs/15/release/vs_WDExpress.exe",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/du85s26/"
  },
  {
    "text": "I use a mixture of the following, depending on what projects I'm working on:\n\nVim + YouCompleteMe: Most of my personal projects.\nCLion: Larger C/C++ projects I end up working on, especially CMake based ones.\nVisual Studio: For projects that are already setup to build in VS.\nQtCreator: I will occasionally use this for quick and dirty GUI projects.\n\nAll of these options offer direct support or a plugin that provides support for Vim-style editor modes.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6hda/"
  },
  {
    "text": "Why is nobody talking about Jetbrains Clion ? Buy it crack it download it for free if you're a student whatever but Jetbrains tools are close to perfection",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtssnim/"
  },
  {
    "text": "Can you still use QtCreator if you're not developing a GUI?",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsrw0i/"
  },
  {
    "text": "Also supports vim mode out of the box which is great. Definitely my favorite IDE.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt5iuq/"
  },
  {
    "text": "Every job in the games industry I've worked has used Visual Studio as the primary (only?) IDE",
    "score": 29,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsawr4/"
  },
  {
    "text": "Pairing it with vsvim makes for a comfy environment.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrwzaw/"
  },
  {
    "text": "Yeah as a non professional ive been using it for a while and it has a lot of great debugging tools.\nIts just that sometimes, maybe like 1/30 times i startup VS I get this fucking bullshit LNK error on compile (I think LNK2005) that GOES AWAY WHEN I RESTART VS SO THERES NOTHING WRONG WITH MY SOURCE CODE/LINKING AND I JUST SPEND HALF AN HOUR DEBUGGING FOR NOTHING. but other than that its good.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt0q5f/"
  },
  {
    "text": "I like how it randomly freezes and then carries on as if nothing weird happened.  It's a bit like Homer Simpson having an internal monologue/dream without realising the real world is waiting for a response.",
    "score": 22,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsabcz/"
  },
  {
    "text": "It's also my IDE of choice. Intellisense usually works pretty well (though it's useless in templated C++ code), and the debugging experience is excellent.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt11tr/"
  },
  {
    "text": "and with Resharper C++ it's simply marvelous",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttre9b/"
  },
  {
    "text": "I'm using it to and from my experience it does not require a lot of resources. C++ extension does. It's not an electron issue.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt5yyx/"
  },
  {
    "text": "I don't like the \"phone home' by default settings in VS Code and many of it's extensions. It means that I will never use it outside a virtual machine dedicated to a specific project.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbnr9/"
  },
  {
    "text": "Sublime + CMake.  And a Python script for build configurations.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsto08/"
  },
  {
    "text": "Emacs\n\nAs I, I also use rtags plus cedet packages to get autocompletetion, jump to symbol plus compilation to work as expected from IDE.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtuf2sx/"
  },
  {
    "text": "Emacs\n\nI also use Emacs, because it allows me to use 1 editor for everything from VHDL to assembly to Matlab and everything in between.\nHowever, I've never found a guide to getting good C++ completion and code navigation on top of base Emacs (i.e. without \"install 83 helm packages and then add 4 Kb of content to .emacs\" as the first two steps).  Can you help?",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvdcpb/"
  },
  {
    "text": "I used code::blocks for about a year until I discovered CodeLite. Better IDE, IMO.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtszx7z/"
  },
  {
    "text": "[deleted]",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrqbrm/"
  },
  {
    "text": "Came here to say QtCreator. I don't even use Qt and it is great.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts2ksx/"
  },
  {
    "text": "I use it almost every day.\nIt's just a shame they have hidden the download area so well on their website. It can honestly take me 5 freaking minutes to find the correct place if I don't have my bookmarks.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrvkv7/"
  },
  {
    "text": "[deleted]",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtssfvk/"
  },
  {
    "text": "Someone finally mentioning IDE with good autocomplete",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtroulb/"
  },
  {
    "text": "I'm wanting to give QtCreator a try to see if I switch over from VS, but I'm having a difficult time making it work properly. Apparently after creating a plain C++ project it can't initialize the vcvarsall.bat file. I've googled it and every post I've read says to check the Tools -> Options -> Build & Run -> Compilers and make sure that the compiler is there and it's definitely there. If I copy and paste the path into file explorer, the path and file exist. Has anyone else had this issue with QtCreator? I'm on 4.5 which I believe is the latest open source version.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrxvd4/"
  },
  {
    "text": "I tried Qt once. Took me about 30 minutes to figure out how to download and run the IDE. Never figured out after that how to create a project and start writing code. What a catastrophically bad UX.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsll9d/"
  },
  {
    "text": "I'd like to like QtCreator (I use it half the time at work), but I have to say it's still not 2018-ready. No relaxed line spacing in what is primarily a text editor? And the FakeVim support is very lacking to the point of being annoying (try Cmd+S...). Also, the built-in help (F1) while editing QML files is nearly useless. So is code completion, though for C++ it does work well.\nThe best code completion I've seen so far is Xcode. (barring MSVS).\nVScode on the other hand is rapidly becoming my \"IDE\" of choice. The C++ plugin is improving at breakneck speed and the whole editor is screaming fast, built for productivity.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsq9qb/"
  },
  {
    "text": "I have never used Qt. I have heard it did not handle modern C++ (C++11,14,17) well.",
    "score": -2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrxkps/"
  },
  {
    "text": "I created this poll after having a similar running for few days last week and emacs got a much lower number of votes.\nAnyway, I added it now as I don't want to create any vim vs emacs flame war.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrkrgf/"
  },
  {
    "text": "As long as you don't need to include boost...\nIf you do, the only way CLion remains functional is by disabling all of the autocomplete features. Otherwise, if i type var. it starts searching the entire boost library for a possible completion, even if var is a string or even int. It takes 10 seconds to continue typing. This is on a 12 Core Xeon with 128 GB RAM, and 10 GB devoted to CLion.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttrxqs/"
  },
  {
    "text": "Do you really find it so well? I've seen it being criticized a lot for its home-grown parser but on the other hand I've seen a lot of people at the same time being happy with it. Even though I haven't tried using it, I can't resist the feeling that it can't be that good due to its parser.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrxnbk/"
  },
  {
    "text": "I second that.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsk3ko/"
  },
  {
    "text": "Visual Studio, because it is an amazing tool for writing software. From within that one tool you can edit, do version control, change your build settings, build, run, and debug - it's an easily installed one-stop shop for all things programming.\n\nThis. The debugger is really great. Also, I can do a diff / merge from the IDE and get a window with full syntax coloring and intellisense and I can edit the code in the diff / merge window itself. \nThe documentation for IDE features is a bit poor though. I had to experiment a lot to get semantic coloring working right.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts4gg8/"
  },
  {
    "text": "I find all the integrated stuff that worst aspect of VS. It's an ok environment with a pretty good debugger. But all the other stuff is mediocre and makes it bloated and slow. I chose the best tool for the job, not a single tool to do everything half arsed.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrz94w/"
  },
  {
    "text": "Pretty slow with Unreal Engine. But everything is :D",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsikdw/"
  },
  {
    "text": "All IDEs and editors these days have at least a libclang backend for proper compiler supported code completion. This is hardly unique to VS and not really a selling point of Visual Studio.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttdbrq/"
  },
  {
    "text": "And at the same time losing truckloads of convenience\n\nBut do we really? Vim has half of the features you mention via plugins.\n\ngood debugging\n\nYou're absolutely correct in saying vim lacks this, there was a cool project for neovim that transformed vim into a visual debugger, but it's sadly abandoned. It's called lldb.nvim\n\ndisassembly\n\nI think you're right on this one too, but I haven't had the need for this, so I never looked for a plugin.\n\nintellisense\n\nYou're right, nothing but Visual Studio has intellisense, since it's just MS's branded word for code completion. VS's code completion is pretty bad when you get used to clang based code completion, so you should definitely give something without \"intellisense\" a try.\nPet peeves aside, vim has a great code completion plugin called YouCompleteMe, do note that it is a pain to setup on Windows if you do it for the first time, but following the guide to the letter should get you through most of it without too many problems.\n\nversion control integration\n\nThe vim fugitive plugin is very good.\nWhat works really well for me is both using an IDE for features that vim lacks, such as a visual debugger, and use vim for writing code.\nIf you're up to it, give it another try with the plugins I mentioned (in my other post), you might be pleasantly surprised.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbm53/"
  },
  {
    "text": "Even why using an IDE I find it immensely frustrating reading code when I have to repeatedly inspect the types of variables. Code that you cannot understand if it was e.g. printed in a book or on a website is horrible.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttddy8/"
  },
  {
    "text": "I hear you. But in all fairness: Intellisense has a lot of trouble inside templates / generic code, which is one of the big use cases of auto.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttar5a/"
  },
  {
    "text": "[deleted]",
    "score": 18,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrnsr8/"
  },
  {
    "text": "Atom (and Sublime Text) are popular for web development, but for C++ it's not much more than a colored text editor.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsww6h/"
  },
  {
    "text": "This piques my curiosity. What makes visual studio better for debugging than other IDEs?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtwpr3f/"
  },
  {
    "text": "Personally I use it only for quick tests, but  many use and consider Vim + plugins a proper IDE.",
    "score": 21,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrkt5h/"
  },
  {
    "text": "UNIX as an IDE FTW.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsegq0/"
  },
  {
    "text": "You know it's funny. I have co-workers who develop like you do, and watching them navigate code is an intensely painful experience. Trying to look for references, find declarations, review call chains, peek the docs for a method, etc takes them forever to do. Meanwhile I do the same tasks for them and can find answers in seconds because I use a proper IDE.\nI'll never understand why people like you intentionally choose to kneecap your development experience. I understand why in some environments you have to (I can't imaging editing the Linux kernel in any IDE would go well, but maybe someone will prove me wrong), but why force yourself when you don't have to? Tooling has evolved, why not evolve with it?\nAnd if you tell me you're using Vim with CTags or anything else, I'm going to call you a hypocrite/liar, because you're no longer using 'just a text editor', you're just saying you use an IDE using more words.\nI hate calling people gatekeepers, but man, you've managed to make a good argument for it in a record two sentences.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvwr0l/"
  },
  {
    "text": "How do you do source control? Debugging? Crash dump analysis? ALM interaction?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtv3sp5/"
  },
  {
    "text": "So vim can do text insert and text deletion. Aren't those two things...?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttaugi/"
  },
  {
    "text": "VSCode has the same C/C++ debugger as Visual Studio afaik. Why would you switch to the IDE when you can just install an extension",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts2xz5/"
  },
  {
    "text": "Why never VS?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsgnqm/"
  },
  {
    "text": "compiler-assisted auto-complete and inline warnings/compile errors?\nintegrated debugging?",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrpd88/"
  },
  {
    "text": "I see no point in using an IDE over a text editor.\n\nautocomplete that works? Advanced IDEs check grammar and have sort of static analysis, I rarely encounter compile errors",
    "score": 30,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtroqqb/"
  },
  {
    "text": "I think, recently, boundary between the editor and the IDE is becoming increasingly obscure. Editor with rich plugins(extensions) can simulate almost anything that IDE does, such as autocompletion, on-the-fly linting, etc.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrthws/"
  },
  {
    "text": "It's about what you use.\nMultiple choices are allowed, so you can select what you use at work and what you use on your own.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsf332/"
  },
  {
    "text": "As I said in my post I will publish them soon, probably next Monday.\nI am just waiting to collect more data before aggregating and processing it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvr4e9/"
  },
  {
    "text": "Qt Creator can import kms files.\nNo idea what CLion uses, but you can check in the default locations for user-defined keymaps (see end of the page).",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtthj6x/"
  },
  {
    "text": "I will publish them soon, probably next Monday.\nI am just waiting to collect more data before aggregating and processing it.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw539z/"
  },
  {
    "text": "You absolutely can",
    "score": 19,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtst4nx/"
  },
  {
    "text": "you can use QtCreator for developing and deploying to microcontrollers like the STM32",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttg4xz/"
  },
  {
    "text": "Since I first discovered QtCreator many people asked me the same question, over and over, and I think this IDE is really underrated, the amount of functionallities (even vim-mode? COME ON!) is really impressive, and yet people still associate it with just graphical interfaces, perhaps a change on the name could be nice...because it confuses people quite often.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx7ml7/"
  },
  {
    "text": "It is quite good as \"just redactor\" as well.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dul9cuv/"
  },
  {
    "text": "Doesn't Nintendo still use CodeWarrior?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsqp1q/"
  },
  {
    "text": "I'm not in the gaming Industry but back in college when I along with 2 others built a video game (we won best game of the semester and apparently still haven't been out done) and we did it all in C++ with VS. No game engine though, just C++ code.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtssdy5/"
  },
  {
    "text": "I sometimes get linking errors that can only be solved by a full restart. So frustrating. Not even deleting the library it claims can't be linked and re-downloading it fixes the issue.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttx1yl/"
  },
  {
    "text": "Most of the time it's intellisense working hard.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsv2ha/"
  },
  {
    "text": "I honestly thought it was just me.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtslwff/"
  },
  {
    "text": "[deleted]",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttdqrn/"
  },
  {
    "text": "Notepad++ and commandline gcc here. And a bash script.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt2q5v/"
  },
  {
    "text": "As long as you're using CMake, I wrote a package for that.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvkn25/"
  },
  {
    "text": "The biggest feature is Ctrl-K, the locator: \nhttp://doc.qt.io/qtcreator/creator-editor-locator.html\nin a few keystrokes you can go to any class (c MyClass or just c MC, fuzzy searching is supported), any method, do git commits, git diffs, show the online help of a class (? QLineEdit, or if you install the cppreference doc any standard C++ type... or even CMake documentation ! \nMost doxygen docs can be integrated since doxygen supports the QtCreator help format ; likewise for sphynx.\nThen, there are a lot of niceties: integrated profiling and memory error detection with valgrind (http://doc.qt.io/qtcreator/creator-cache-profiler.html), static analysis with clang's analyzer, cppcheck (and clazy in the upcoming version).\nThe debugger has some useful features: for instance it is scriptable with python which allows to display images, etc... \nFinally, there are a lot of refactors available: http://doc.qt.io/qtcreator/creator-editor-refactoring.html",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrrqdm/"
  },
  {
    "text": "[deleted]",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrxx19/"
  },
  {
    "text": "I was using vs since 6.0 but at work a project required qt on linux environment so I had a chance to try QtCreator and after 3 years it\u2019s hard to go back (still love vs, just a little less now).",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsby01/"
  },
  {
    "text": "Ya, my tip for you is...\nDon't waste your time.\nEvery release i try (every once in a while) to setup qtcreator+cmake+msvc(compiler) is just 2-4 hour fighting with the piece of crap that qtcreator is on windows (with cmake+msvc)\nAfter all that shit, i just uninstall it (again, as always)\nYou better off with notepad+cmake+msvc (or VS) than qtcreator",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/du39pxm/"
  },
  {
    "text": "And in case anyone else is wondering which bookmark that is: https://download.qt.io/official_releases/qtcreator/",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx2vh0/"
  },
  {
    "text": "Are you/it using cmake? cmake does that in Visual Studio as well with their filters. \nIf you are, you can fix it by running source_group, preferably with the TREE option. Although I've found even that to be kinda buggy with VS at least and ended up writing a wrapper for it: https://gist.github.com/playmer/5259fad6a28742638ae1508892a78b73\nIf you were running VS with cmake you might find that files added via the TREE might have issues depending on the prefix passed, and on if the files are pathed inside of a folder, or simply given as they are. Hence this wrapper which delineates them and chooses the correct prefix to pass.\nThis might require some minor modification depending on where you run it. The folder detection is based on where you run the function. I have a (very) slightly more robust version I fixed up for a friend, but he's currently on vacation. So if anyone actually sees this an is interested I can update it in a couple days.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsy18y/"
  },
  {
    "text": "If you use CMake and add your headers to add_executable / add_library they will be shown next to the cpp files, and there's also a hierarchical filesystem view nowadays: https://imgur.com/a/07HZt",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt9e9j/"
  },
  {
    "text": "I've seen the same issue. Qt Creator is abysmally bad at working out of the box.\nI've found that that going into \"Options -> Build and Run -> Compilers\" and making a custom configuration that is identical to the default version often works. If that alone doesn't help, I do the same for \"Kits\" and \"Qt versions\" until Qt Creator decides to cooperate or I return to Visual Studio out of frustration.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw5fok/"
  },
  {
    "text": "really ? creating a project is, like, the first option in the \"Files\" menu: https://my.mixtape.moe/mwumoy.webm",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsmucq/"
  },
  {
    "text": "Qt Creator is completely independent from the Qt framework/libraries. You can use it for plain C++ projects with Cmake.",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts290g/"
  },
  {
    "text": "I don't doubt your experiences at all, but I use CLion with several boost libraries and don't have those issues. I do have some IDE freezes and indexing can be slow at times, but I don't think using boost necessarily cripples CLion in general.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtwajjo/"
  },
  {
    "text": "CLion is awful.  It's also better than anything else I've found.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt9g30/"
  },
  {
    "text": "It's pretty good functionally, but I've never found the right combination of options to make it fast... or maybe it's just that our CMakeLists are a mess :(",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts3tdg/"
  },
  {
    "text": "right now it feels more like a half-assed plugin bolted onto IntelliJ. IntelliJ itself is far superior to all other IDEs in functionality, but it's also slow as hell. CLion especially seems to be very slow and doesn't work as well as IntelliJ with Java, so you might as well use visual studio.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsact4/"
  },
  {
    "text": "Give it a try. \nMay want to bump the memory you allocate for the IDE - but I do that for all of jetbrains' IDE:s. \nPer default, at least in the previous version, it defaults to only using 4 threads for compiling - but it's configurable.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsiady/"
  },
  {
    "text": "I like it, but for my desktop not my laptop.  It heats my laptop up too much.  C++ IDEs are like that though.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtswseb/"
  },
  {
    "text": "CLion does it's own thing due to it's lineage, but I've never found it to be awful.\nThat said, I personally find vim more productive.  If CLion found a way to completely abstract the CMake file away from me I might consider moving back to it, but I figure if I'm going to be maintaining the CMake file manually then there's really not a lot that clion offers that I can't get in vim, and plenty that vim offers that I can't get in CLion.\nBut CLion itself is a fine IDE.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu2zd4/"
  },
  {
    "text": "The debugger is really great\n\nReally?  I've found it extremely limited compared to gdb, dbx, etc.  Perhaps I'm not using it correctly.  What's so great about it?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts7196/"
  },
  {
    "text": "Don't know why you were downvoted. I fire up msvc every couple of years and it is full of new things, but slower than last time. The compiler is also slower to get up to date, but I here you can use a real compiler now, but I don't really know how good clang integration is in the current version. It is also the only tool commonly mentioned in threads like these that costs real money.\nEdit - how about telling me why I'm wrong. Downvotes aren't very convincing.",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts2itb/"
  },
  {
    "text": "Pretty fast with Visual Assist actually",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxdxcr/"
  },
  {
    "text": "Not sure what to tell you, the end result is extremely different between VS and other editors. For example, VS Code uses clang for a fact, but the only \"real\" autocompletion is on member variables of a class/struct.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtto4f5/"
  },
  {
    "text": "Alright so I should learn VIM and then learn to use a whole bunch of other tools. You are doing the opposite of selling me.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttcp4a/"
  },
  {
    "text": "[deleted]",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrnwf6/"
  },
  {
    "text": "Oh I was wondering how far I had to go down. I basically use VSCode on my Arch laptop for most code editing (c/c++, python, c#, haskell). It basically replaced emacs.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtscxwm/"
  },
  {
    "text": "Just tried it and it doesn't seem to re-open anything other than the first window if I close and restart. Is that a configurable option? Without it VSC is basically unusable for me.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtronds/"
  },
  {
    "text": "Do you use in Linux out Windows? Atom for Windows is terrible. Nuclide for atom makes it an almost complete ide.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6zh5/"
  },
  {
    "text": "Out of the box, sure. There are plugins to make Atom more like an IDE though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttjnok/"
  },
  {
    "text": "Things that I like:\n\n\ncomfortable and fast inspection of every variable\n\n\nthread display (what does each thread do right now)\n\n\nparallel stacks view\n\n\nability to work with large, complex applications",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx5fxi/"
  },
  {
    "text": "Indeed. YouCompleteMe alone gives tab complete, jump to symbol, show variable type. Only thing I'm missing is find usages. But rtags can handle that if necessary. Together with vim-fzf for all sorts of fuzzy search I'm much happier in vim than in Visual Studio. Even in reasonably large code bases (+500k lines)",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrz2kj/"
  },
  {
    "text": "[deleted]",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtv6x97/"
  },
  {
    "text": "Same debugger, but not the same UI :) More features in Visual studio.\nEdit: Actually, there's a big reason. There's a super annoying bug, I don't think it's been fixed yet, where files are matched on a case-sensitive basis (I think), and it's different for C:\\ and c:\\ or something like that, causing you to get more than one tab with the same file.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts3ozs/"
  },
  {
    "text": "When VS Code supports opening CMake projects, I will jump ships immediately.\nBut I guess this is where it will eventually go. VS Code seems a more flexible platform compared to the VS dinosaur, and it seems to gain popularity and features surprisingly fast. I would not be surprised if in the future Microsoft discontinued VS in favor of a feature rich VS code",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsedhj/"
  },
  {
    "text": "too software bloated, installs soooo long\nstrongly tends to add non-standard features in code\nprecompiled headers - not as a compiler command but #include \"stdafx.h\" in source\n_tmain, WinMain\npragmas for libraries instead of project settings\n\n\nwarnings on valid code - they warn about using standard low-level functions \"just because they are unsafe\" (too much C# point of view?), C4996 (unsafe) is one of them, other warnings mark actually legiit standard algorithms as deprecated\nsome functionalities offered by (paid) Resharper are free in Eclipse and Qt\ndefault .gitignore for VS has tens of patterns, for other IDEs it's just few or a specific directory\nno ABI compability (check all different Visual Redistributables)\nGCC can link against VS libs, but not vice versa\nspam during complication (GCC and Clang output only warnings/errors)\nmay compile code with mistyped file names - although it's a problem from NTFS case ignorance, not VS but it feels bad in a case-sensitive programming language\nno good themes, searched multiple sites and plugins, max 10-15 different colors, Eclipse offers 30+, including 4 different colors for 1line/multiline/Doxygen comments and different color for overloaded operators (compared to non-overloaded ones)\nworks only on Windows, not very portable (might change due to VSC)",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsnb9m/"
  },
  {
    "text": "YouCompleteMe uses clang-completer. Clang also performs static analysis. It\u2019s also easy to integrate clang-format and clang based syntax highlighting.\nIt comes very close to IntelliSense.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts25i5/"
  },
  {
    "text": "Fair enough. I'm willing to have my view changed. However, last time I checked (~5 years ago, admittedly), autocomplete was completely unusable in heavily templatized code (that uses expression templates, CRTP, ...) and was therefore just pointlessly draining my battery lifetime. Has that changed? Which FOSS IDE would you recommend?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrtjai/"
  },
  {
    "text": "text editors have autocomplete. not as advanced as an IDE but it's decent depending on what you are doing. Static analysis and such are standalone tools that simply can be run via command line, and those editors he mentioned support assigning to a button to trigger static analysis, then have clickable errors via GUI to jump around between issues.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrrxe4/"
  },
  {
    "text": "It boggles my mind that people think auto complete is a desirable feature. The only thing worse is an editor automatically putting in closing parens and braces.",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtry4iy/"
  },
  {
    "text": "The SDK for Switch comes with VisualStudio integration now.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbkl6/"
  },
  {
    "text": "Not sure. I've personally not worked on any thing Nintendo related.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtszdm8/"
  },
  {
    "text": "Or it's the peek def window failing to load some COM shit.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt4qfq/"
  },
  {
    "text": "I would've thought intellisense would be running on a background thread.  Although maybe sync'ing with the GUI thread takes a long time?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttd1j0/"
  },
  {
    "text": "Swap it out for Visual Assist and the freezing goes away.  (that is, turn OFF intellisense and its database)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt0kto/"
  },
  {
    "text": "That's very strange because I've experienced it only using around 30MB for the 32 bit version and 60MB for the 64 bit version after a fresh install.\nI don't have access to my computer right now or else I would upload a screenshot as proof.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvbgki/"
  },
  {
    "text": "Thank you for sharing!\nAlas, we are using bespoke 25-year old make-based build infrastructure. It's nicely organised and carefully maintained, but not at all modern.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvlykn/"
  },
  {
    "text": "You can use Ctrl+Comma on Visual Studio for the same effect. Although it depends on the goodwill of Intellisense but it works a lot better in the recent 2017 versions.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrtxvl/"
  },
  {
    "text": "I don't use CMake but while I predominantly develop in Windows and with MSVC I do still have to swap to Linux and gcc fairly frequently. In Linux I tend to use Codeblocks out of long habit, and of course maintaining two solutions is a pain in the arse and ultimately pretty much non-maintainable. Do you have any good resources for picking up CMake on Windows and Linux?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsacmu/"
  },
  {
    "text": "Sorry, I was on mobile, so I didn't have access to my bookmarks. \nYour link seems even better than mine, here's the one I've been using lately: https://www1.qt.io/offline-installers/#section-11\nThey seem to be changing it constantly though, so yours is probably better!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx4694/"
  },
  {
    "text": "[deleted]",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsy7ow/"
  },
  {
    "text": "Whatever a kit is, there's no default installed kit on macOS.\n\nNo valid kits found. Please add a kit in the options or via the maintenance tool of the SDK.\n\nYou click \"options\" and it leads you to a page with 20 pages with 10 tabs each and each tab has about 15 drop down listings. You click add on what looks like the \"Kit\" page and are presented another 20 drop down menus. It all looks reasonable so you click \"okay\" and nothing happens. Still no kit. So you try again and play with some settings and modify a few things. Nope. Adding a kit clearly does not add a kit.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsp2so/"
  },
  {
    "text": "I don\u2019t think it's your CMakeLists. It's way slow for me even with the simple projects my students are doing. I still like it better than anything else.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvxx36/"
  },
  {
    "text": "What vim plugins do you use to make it more productive than CLion? \nI use the vim plugin for CLion and find that it's autocomplete and suggestions are far and away better than any other IDE. Clang-tidy integration is a complete game changer for me. I'll use vim for small projects but as soon as it's anything complicated I move to CLion.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu4xjl/"
  },
  {
    "text": "You can only use CLion if you have an SSD, because with an HDD it's so sloooow",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/duawtxw/"
  },
  {
    "text": "Very userfriendly and polished interface. Watches, STL visualizers, register view, everything works at a click of a button.\nOne thing I use regularly, I can step through my code step by step, and then switch to the disassembly window, and the same step through key steps through instruction by instruction.\nOh, and edit and continue.\nWhat have you tried with GDB what you cannot do with VS debugger? I find GDB and VS debugger equally capable, however VS has a far superior UI which actually makes debugging easy.",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts9q1h/"
  },
  {
    "text": "Clang/c2 Integration was more or less abandoned (you can still use the full blown clang/llvm for windows of course)\nBut the msvc compiler became pretty good (although it still doesn't implement two phase lookup and sfinae completely correct)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttao5k/"
  },
  {
    "text": "True story! I haven't found any other faster tool for VS. really an amazing piece of software.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxk9b9/"
  },
  {
    "text": "Yes I'm puzzled. Even on vim with YouCompleteMe, which is pretty barebone compared to VS, I got mostly the same autocomplete as Visual Studio.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttuire/"
  },
  {
    "text": "You're going off the assumption that these plugins require learning, with the exception of setting up YouCompleteMe, simply because it's big, it's all very straightforward.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtthzvz/"
  },
  {
    "text": "That's the difference between an experienced big-company product and 'brogrammer' startup product.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsqksr/"
  },
  {
    "text": "It reopens everything for me. Maybe a bug?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrpeqv/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts8tp4/"
  },
  {
    "text": "I use go to definition and go to declaration probably the most, next to intellisense (or whatever the autofill is called).  I tried installing rtypes (I think that's what it is called?) but the backend server kept crashing and I just gave up.\nHow do you set it up?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtubcec/"
  },
  {
    "text": "So... the question was \"what do you use for development\", and you said \"an editor\".  \nSo I asked how.\nSo now you're saying something else.\nBecause one can hardly reduce development to an editor.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvyynd/"
  },
  {
    "text": "Application Lifecycle Management - features of an IDE meant to integrate with the rest of your software development process, such as pushing builds, unit test coverage / continuous testing feedback, integration with code review tools, so on.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvvxrl/"
  },
  {
    "text": "Your primary complaint about VS is that it's bloated, but you use eclipse?\nIt's been a while since I've used it, but it felt like the epitome of bloatware last time I tried (probably 3 years ago or so).",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtv05un/"
  },
  {
    "text": "What I find ridiculous are people who claim not to use an IDE, but add tons of plugins to their Texteditor to give it all the nice IDE features.\nNot saying that vim+ plugins can't be superior to a \"normal\" IDE - I haven't tried. But at that point, you are effectively using an IDE.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttaztr/"
  },
  {
    "text": "I have seen this gif before! But could never found what a thing it is ... until know. Thanks.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts2ju6/"
  },
  {
    "text": "IDEs that use libclang to parse your code do not have this problem",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrur06/"
  },
  {
    "text": "Not very useful for templates as you can't really give a good autocomplete for dependent names. On the other hand, IDEs like Qt, Eclipse and KDE have great syntax-aware features (generate getters/seters, implement virtual functions, rename variable) + very deep coloring (Eclipse offers over 30 colors, including different colors for overloaded and non-overloaded operators). Makes writing easy and avoids common errors like unknown variable or missing semicolon.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsehvu/"
  },
  {
    "text": "FOSS\n\nDid you actually mean free or Free?\n*Not rhetorical. I'm seriously asking. You can have free without being open-source...",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsjz98/"
  },
  {
    "text": "have autocomplete. not as advanced as an IDE\n\nThis is a big difference. For example Eclipse uses different colors for oveloaded operators (than normal operators), different colors for static/function local/class member variables.\nAutocomplete in text editors simply searches for commonly used names (and may have a hardcoded list) but these in IDEs analyze your classes/functions and propose only things that make sesnse",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrtvvx/"
  },
  {
    "text": "I, too, hate efficiency",
    "score": 13,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts0h0k/"
  },
  {
    "text": "sarcasm or not?",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrzi40/"
  },
  {
    "text": "You can typically configure the editor to do it only when you press a specific shortcut key. That's what I do. Works very well, or I think so at any rate.\nI never got on with the sort of auto complete prompt that pops up when you're typing, hides something else you're looking at, and then accepts the first suggestion when you keep typing.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6nss/"
  },
  {
    "text": "Is it possible to get Visual Assist to open things in a peek pane thing?\nThat's the only reason I leave intellisense on.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt4rzk/"
  },
  {
    "text": "But that's the whole point of using Visual Studio.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt185u/"
  },
  {
    "text": "The main packages to give completion, error checking and navigation are ycmd, and rtags. They only require a compile_commands.json file, not necessarily CMake. You can probably generate that file with BEAR, or even write a python script to try to generate it ad hoc; it's just a json file with the flags for every file. Really, as long as you have the right language version and the include paths, it will work well enough, most likely.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtwufe0/"
  },
  {
    "text": "Can that feature be used to lookup C++ and CMake reference docs?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtuexrq/"
  },
  {
    "text": "CGold: The Hitchhiker\u2019s Guide to the CMake is work-in-progress but well worth the read. It's written by the guy behind Hunter - a package/dependency manager for CMake, somewhat reminiscent of conan and others.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsgf0n/"
  },
  {
    "text": "[deleted]",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsydi5/"
  },
  {
    "text": "Yeah it's a real pain. The one I found hasn't changed in at least a couple years thankfully!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxn9q3/"
  },
  {
    "text": "Sorry, I brought it up because to my knowledge source_group does it's thing for \"IDE project generation\", cmake by default in VS separates the h/hpp and c/cpp. So if cmake is the one doing that bit to you in Qt Creator, source_group might be the thing that fixes it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt06bf/"
  },
  {
    "text": "Seriously! I faced this issue just today, and I've used QtCreator for a few years now. Had the iOS + Android builds available but could not for the life of me figure out how to add macOS. Had to look it up in the user manual, which for once had the info I needed. otherwise I usually have a google tab open.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsqhub/"
  },
  {
    "text": "interesting, if you install Qt a default kit is generally added automatically so it must have fucked up somewhere during the install process. You have xcode installed right ?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt9lpq/"
  },
  {
    "text": "YCM has a clang based engine and I use the 'vim-cpp-enhanced-highlight' plugin for a bit of extra oomph.\nOn top of that I use ctrl-p for quickly opening/finding files and then ctags.\nI don't like integrated VCS plugins in IDE's, ever, so I don't use them.\nWhat I found with the CLion vim plugin is that it didn't really play all that well with the rest of CLion.  Things like renaming can cause issues, so when using CLion I just turned it off.\nIt's by no means a perfect experience, but between these plugins and using external tools such as grep, I don't ever really find myself missing IDE's.\nI've often thought about writing a 'vim IDE' that integrated the vim ethos into every bit of the IDE itself, including the GUI aspects of it, i'd call it 'vIDE'.\nThe problem I've found with most plugins is that there's a clear delineation between the vim keybindings and the rest of the IDE.\nAnd before it gets said, I've been using Visual Studio since before it was Visual Studio, I'm quite familiar with IDE's and their use cases.  There are things that IDE's do better than vim, and vice versa, I've just found that the only thing IDE's have that I really miss in vim is an integrated debugging experience.\nEverything else is just a matter of pros and cons.  People often bring up renaming, for example, but I've never found that be a significant productivity problem outside of an IDE.  It's a convenience yes, but I don't do it often enough across a large enough spectrum of files for it it matter for me.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtuczgf/"
  },
  {
    "text": "I think something that's also great is you can get extensions for visualizers for other stuff, including for example images. You can also customize the view of your classes but it's a bit tricky to get it right.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsvbzj/"
  },
  {
    "text": "Watches\n\nDon't all debuggers have that?\n\nSTL visualizers\n\nGDB is capable of printing the contents of STL containers and such.  Is this feature something more?\n\nWhat have you tried with GDB what you cannot do with VS debugger?\n\nThe first things that comes to mind are conditional breakpoints and ignoring breakpoints for the first N times that they are hit.\nMost other stuff is more of a nuissance than a real limitation.  For example, in GDB one can evaluate complex expressions like this: print some-&gt;expression( someFunction(5) )\nOr do something like this to insert a print statement in the code:\nbreak foo.cpp:44\ncommand 1\n  print someExpression()\n  continue\nend\n\nBoth of those can be achieved with VS using \"edit and continue\", but then I have to remember to clean all the debugging crap out of my code later.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtseq75/"
  },
  {
    "text": "Can Visual Studio set a breakpoint at library functions today? Last time I looked, I could only set breakpoints on things I have source code for (in my project) because I have to see it to set a breakpoint.\nEasy in anything that has a command language: \"b printf\".\nThe best debugger I used so far was the one from Green Hills, closely followed by Lauterbach. Both combine a command language and a GUI, and a steep price. GDB falls back by not having a (default) GUI, Visual Studio by not having a command language. But then, if your programs are native Windows programs, VS' integration probably is unmatched.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsb3k6/"
  },
  {
    "text": "I didn't downvote you. \nIf I didn't have errors in CI, literally, yesterday I might believe you. It is warning for garbage reasons and the documented ways to suppress didn't work. We build with a huge amount of warnings enabled and try to suppress as few project wide as possible. But our list in msvc is growing, it gives us crazy warnings for code in the std headers that is beyond my control no other compiler does this, why!??!\nThe compiler takes 3 times longer than mingw and produces slower binaries with comparable optimizationson.\nIf I needed coroutines I would agree with you, but that is about it from C++17  I have no need or interest in. It took them longer to get real variadic template support, so I spent real time writing more code with another compiler that had sane errors and then moving known good code over to their interesting implementation before msvc 17 fixed it.\nI am trying not to be a fanboy or just deragatory, but msvc is a huge source of pain for me and doesn't ever make things easier for me or live up to any hype.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtugufy/"
  },
  {
    "text": "Turns out that the default is to remember one window. If anyone else comes across the same problem you can force all windows with the following configuration:\n\"window.restoreWindows\": \"all\"",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrpokx/"
  },
  {
    "text": "Yeah, i use vscode in Windows too but not for cpp. Atom/nuclide integration with clang is great.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsnwzv/"
  },
  {
    "text": "I use atom-ide-ui and ide-cpp, though the latter only works properly on Linux (on Windows it tries to find /usr/bin/clangd, which unsurprisingly doesn't exist). I still run commands like make from a terminal though.\nI have started using VS Code recently and been impressed at how slick it is. It's better than Atom for C/C++ and probably equivalent for things like PHP and Markdown (not sure if it has a Markdown preview which is a feature of Atom that I find really useful when working on documentation).",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw5dqd/"
  },
  {
    "text": "[deleted]",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw0c2y/"
  },
  {
    "text": "I have used Visual Studio extensively. The integrated debugger is an extremely well developed feature, and I have yet to find something that comes close. \nEvery IDE leaves something to be desired. When you have one large monolithic program acting as your development environment, customizing and extending your environment can become hard and obtuse. IDEs consist of a bunch of components which act like black boxes, and hinder customization. \nFor example, changing code syntax highlighting colour schemes in Visual Studio is unnecessarily complex. I find customizing options via a GUI to be slower and harder than changing config files. Using CMake to setup up your build toolchain is vastly superior to clicking through a bunch of menus.\nA good Visual Studio setup for C++ requires some plugins to improve things like static analysis and refactoring (i.e. Visual Assist). \nFor me, the Unix philosophy is the saner option. The typical linux development environment consists of a bunch of smaller programs, where each one does one thing well. It allows you to customize your toolset to your hearts content.\nIt can be frustrating at first. I have caught myself reinventing the wheel several times, but the end result is that you become extremely familiar with every component of a development environment. The learning curve is much steeper than using an IDE, but I think there is a point where your finely-tuned dev environment surpasses the features, responsiveness, and productivity of any IDE.\nNaturally, this becomes a consideration of whether the returns in increased productivity justify the enormous upfront investment in time.\nIn the end, the most important thing is to be a productive developer, so master one development environment.\nSorry for the long winded reply.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtty46w/"
  },
  {
    "text": "Horrible quality video, but this is what I always think of when people talk about their \"text editors\" with a billion plugins: https://www.youtube.com/watch?v=1BjahCczkFM",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtv6uyn/"
  },
  {
    "text": "What gif?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt9nj9/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrwzp4/"
  },
  {
    "text": "Free as in freedom, which necessarily implies open-source.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxc1gd/"
  },
  {
    "text": "It isn't that necessary in practice. The commonly used names still save you some typing.\nAlso once you have a large enough project + complicated package/build system to manage it all (e.g. 200mb of code) then IDEs die trying to figure things out. If you require intellisense to code then you're going to be in trouble.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts6bgf/"
  },
  {
    "text": "Not quite, the debugger and the IDE as a whole are also great.  Intellisense is flaky and doesn't seem to scale well to large projects.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt19yl/"
  },
  {
    "text": "Thanks very much - I'll have a read through",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsis2b/"
  },
  {
    "text": "If you have to work on both platforms, cmake will make your life so much better.\n\nI'm already sold on this part, believe me. CMake could be almost unusable and it would still make my life much better than manually maintaining dual VS and CodeBlocks solutions... If CMake is even dimly usable otherwise that's a bonus.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu1u12/"
  },
  {
    "text": "brew cask install qt-creator",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttayhw/"
  },
  {
    "text": "All of that is possible in the VS debugger without using edit and continue, and has been possible since at least VS 2008 (which is the earliest documentation version available on MSDN).\nRight click the breakpoint.  Click \"Conditions...\" to make it a conditional breakpoint.  Set your conditions, which can be based on an expression, hit count, or filter (which means a process/thread/machine ID).  Click \"Actions...\" to run a piece of code, such as a print statement, when the breakpoint is hit, or to log something to the output window.",
    "score": 14,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsjqrj/"
  },
  {
    "text": "As far as I know, conditional breakpoints and a \"hit counter\" work just fine in Visual Studio.\nYou can also evaluate expressions during debugging (though admittedly, the expression parser seems to have a few problems with operators).",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsgv4j/"
  },
  {
    "text": "'Debug->New Breakpoint->Function Breakpoint', type function name.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsk3yw/"
  },
  {
    "text": "Green Hills was the best? \u0ca0_\u0ca0",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtssagw/"
  },
  {
    "text": "Which Version are you using and what warning did you encounter? I hope you are not one of those people that activate /Wall and then complain about the warnings. I find all /W4 (rough equivalent to -Wall -Wextra on gcc/clang) pretty reasonable and the standard library headers should compile warning free. Only thing that can get annoying are the conversion warnings in codebases that where not developed with that in mind.\nAlso, while I said that msvc became pretty good in recent times, I never claimed they reached parity with gcc or clang (I even pointed out the current main deficites).",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtuld04/"
  },
  {
    "text": "Thanks for finding this. Bizarrely, it was set to \u201cone\u201d in my settings (I hadn\u2019t overwritten it), and yet it restored all windows. So there is a bug, but it\u2019s on my system.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtrs6mk/"
  },
  {
    "text": "Haha, we're both wrong, because it's \"what IDE for development\". \nYou're more wrong though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw0v4e/"
  },
  {
    "text": "but I think there is a point where your finely-tuned dev environment surpasses the features, responsiveness, and productivity of any IDE.\n\nMy point was that at that point you are effectively using an IDE. It might be manually assembled, but in the end, all the components are integrated. So saying I don't use an IDE, just because I don't use a single Program (whatever the definition for that is - vs probably consists of a dozen or more different programs) is a bit strange.\nEdit: Neither Qt, nor Eclipse (which are commonly considered IDEs) come with their own compiler or debugger. So where do you draw the line?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu91uw/"
  },
  {
    "text": "YouCompleteMe main page",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dttbdas/"
  },
  {
    "text": "The difference is that IDEs know about the project with paths, compile options, etc. This can make parsing more reliable, and allow jumping to things you don't have open.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts1q2e/"
  },
  {
    "text": "The next question then is why do you need your text editor or IDE to be open-source?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dty1j1p/"
  },
  {
    "text": "I have an Eclipse at work and it still parses well (entire Boost + ~50 other libraries)",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dts76zv/"
  },
  {
    "text": "It crapped out on me a few times, but it got much better with newer versions of VS and lately it has been working well for me.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtt20sh/"
  },
  {
    "text": "Yeah, that was definitely not my experience. WiiU anyone?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsxe8f/"
  },
  {
    "text": "Well, what's better, and by what criteria?\nProbably not everyone has the same criteria as an \"embedded\" guy, and I found its command language, scriptability and easy configurability quite enjoyable.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtu188n/"
  },
  {
    "text": "Today, it is complaining about a variable that is \"unused\" in two line comparison function, where it is clearly used. It is doing this on some version of 17. It is in a static string class that checks the length and receives that as a template parameter and then checks the contents of the other string if those are the same and non-zero. It does this as a single expression connected with && and ||. Clang and gcc with -wall and -weverything (or something similar have warning flags enabled) has no warnings on Linux or OS X, and mingw has no warnings on windows.\nBut literally today msvc had a warning.\nAs for warnings in the std headers, yes that was with /w4. But the std headers aren't my code I shouldn't ever get warnings for them when using them correctly. I know I am using them correctly because my unit testsvall run in CI against 3 or 4 other compilers on like a dozen platforms with -wall a pile of other -w flags and -werror and have been that way for years on this project because we want to know our code is clean.\nWe have 1 or 2 warning flags suppressed project wide for most compilers, but like 20 on msvc.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtveld9/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw38aq/"
  },
  {
    "text": "In that case I agree with you. You could call my environment an IDE.\nIt reminds me of a professor back in university in a CS course telling us to use nano and GCC.\nI think some people who come from the side of big monolithic IDEs have that sort of thing in mind when I tell them that I basically use vim.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtuaxgd/"
  },
  {
    "text": "[deleted]",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtsb998/"
  },
  {
    "text": "If you get warnings from the headers on W4 you can submit a bug (helped for me in the past). It's just /Wall where you can't reasonably expect warning free compilation (although I think they guard against Wall locally most of the time). I think the vs team is also working on an equivalent of -i&lt;external_library_header&gt;, but I'm not sure what the state is there.\nRegarding the unused warning: It's of course hard to say without the code, but that sounds like a bug to me too. If you feel like it, you can submit a Bug report to the msvc team. There is a very slight chance that due to short circuit behavior of(&&,||) the compiler determines that the expression is never actually evaluated, but I think this should produce a different warning.\nSorry to hear your experience with recent msvc has been less than stellar. I'm only using it for small scale projects, so maybe that's the reason I didn't got any major problems/annoyances.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtvfz3m/"
  },
  {
    "text": "If typing text was more important, then we'd be called typists not developers. It isn't more important, we are not and you're wrong.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx1z7y/"
  },
  {
    "text": "This wouldn't be the first time I have stepped into bug in in the compiler territory, and generally whatever I have found is already found (but rarely fixed). I have to work around it anyway because I ship source and I cannot force people using it update or change compilers\n\nrecent msvc\n\nAll msvc, I have yet to find one anywhere near as good as the open source alternatives. I found exactly 1 bug in gcc and none in clang. The one I found in gcc was already fixed I justhad to get a newer version than was shipped in the OS package manager. The other compilers just have fewer defects, produce faster code and take less time to do it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtw67lt/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtx3mc9/"
  },
  {
    "text": "Nah, you're still wrong. The guy else-thread, who said \"my development environment is UNIX\" was right.\nYou want to be l33t vi haxorz. Bwahahahaaaa...\nYou're also just saying something, anything, because you think that having the last word wins you an argument. Sure dud. Knock yourself out, I am out now.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/7ve6x2/what_ide_do_you_use_for_cc_development/dtxb601/"
  },
  {
    "text": "It looks like you're looking for a bundled IDE! An Integrated Developer Environment, one that comes with a compiler and is an all-in-one solution.\nI recommend Visual Studio Community Edition for the Windows platform. It's free, and when it installs it'll all just work.\nTo start, you'll want to create a new project. You'll get a \"wizard\", which I don't know if they call them that anymore - it's just a dialog box that will walk you through setting up your project.\nIn Visual Studio, you have a solution, and then within that solution are individual projects - projects get turned into programs. Bigger software \"projects\" will actually be a bunch of projects in a single solution. Walking through the wizard, it'll automatically generate the solution for you, and name it after your project - it kind of assumes you're going to have one solution, one project, or at least name things such that there is a \"main\" project and the rest are dependencies.\nI bother to spell this out because if you start and you see \"create a new solution\" and \"create a new project\", I don't want you to wonder WTF is going on. Create a new project, hit the check box that generates a solution of the same name. Know it's an organizational structure thing, and move on.\nYou'll want a console application. In the beginning, you'll be writing a whole lot of text programs, just learning the language. There are many, many other project types, and they're all for different and specific things. Frankly, I've absolutely no idea what the vast majority of them are, and if this is the start of your career, likely you won't ever know or have to know what most of them are, either. Microsoft has A LOT of technology, and they are kings of backward compatibility. You DON'T WANT to know what most of the other options are...\nThere should be a button somewhere to say you want a Hello World application. For your first time around, click that. It'll give you a basic project from a template, probably way too many files in the project than strictly necessary. All you have to do is go to the Build menu and compile, and it should Just Work (tm).\nThen there's going to be a button or key combo to run the program. Do notice that a console window flashes on the screen and disappears immediately. The IDE can run your programs for you, but it will also helpfully close the window when the program is done running. After printing \"Hello World!\", the program is done running, so the screen closes. There's a key combo or something to keep the screen open until you choose to close it, that way , you can see the results. I don't know what it is off hand, but that's how you want to run your programs.\nThere should be a tree view of the files in your project. Go ahead and explore the files this template generated. Again, probably way more than you need. Look for *.h, *.hpp, *.c, and *.cpp files, and modify these to see what happens, these are C/C++ header and source files. These contain the source code. There are likely other files that, for a lack of a better description to a novice, \"do stuff.\" I'd say delete everything from these file contents and start writing your own program but I fear this template may have come configured with precompiled headers (stdafx.h is a dead giveaway).\nCreate a new project and solution, a console application, but this time select a blank project and make sure precompiled headers isn't checked. There's a number of check boxes available, but less is more - if you don't need to enable stuff, let's just avoid that. You should have a basic project with nothing in it. In your project explorer window, you should be able to right-click and add a file. Add a main.cpp or something. Now you can begin writing code from scratch, your own Hello World.\nYou can also debug your programs in this IDE. On the left side of the text editor, where you're writing your code, you can click, and get a red circle. Now, when you run in Debug mode, the program will stop at that point. Through the IDE, you can inspect elements and watch the program execute - stepping into and out of code, statement by statement, line by line, until the program ends. So in the future, if something isn't working right, you can watch as it goes wrong.\nThis is, of course, the tip of the iceberg. There are lots and lots of options, lots and lots you can do. This should get you started.\nAnd when you are having problems, come here and post your code. Be sure to format your code in a code block - the Reddit editor should help you with that. Try to ask as narrow a question as possible. That'll be hard at first, it's a skill you'll learn by trying.",
    "score": 21,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh92bb1/"
  },
  {
    "text": "Visual Studio is as good as it gets on Windows and is good for an absolute beginner as well. There's a lot of features in the development environment, but you can just not use most of it. Setting up and working with GCC (the other good compiler choice) on Windows is way more work than just grabbing the the VS Community edition and using that.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8r80i/"
  },
  {
    "text": "So there is a bit to untagle here. A compiler turns your source code into an exectuable. The IDE or text editor you edit that code is a different thing. It may be rather smart, using a compiler in the background, to give you hints on what is wrong while you type, give you contextual autocompletion and all the fancy things.\nThere honestly is nothing wrong with starting in a full fleged IDE. While it may be true that doing compilation and linking on the commandline do give you a bit more insight that really is nothing you should bother with until you got the basics. IMO its like learning how to build a car before you can even drive one (which is sorta lacking as an analogy, but i hope you get it).\nOn windows i would suggest to use Visual Studio (not VSCode), since \"it just works\". You select \"new terminal application\" and its all setup for you.\nOn linux its a different story. Installing a compiler and separate text editor is way more feasible. For compiler you have the choice between  gcc (or rather g++) and clang (or rather clang++), and it doesnt really matter which one you choose. For an editor/IDE you should def use something with syntax highlighting, for example VSCode or even just gedit. Another option would be KDevelop, which is a proper IDE, but would need more setup.\nWhat you most def do not want to do is use anything like vim, emacs or any other terminal based text editor. You want to learn C++ and not an editor that will just be alien to you and not nearly as usefull.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8pivx/"
  },
  {
    "text": "On linux you could try qtcreator. It is a really nice IDE with or without using Qt.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8s76a/"
  },
  {
    "text": "https://sourceforge.net/projects/orwelldevcpp/ \nis what I downloaded a couple of weeks back, I'm in the same boat as you pretty much. I'm not too sure what to look for myself as I'm a beginner too, but it works great for me! Everything looks nice and as for autocompletion I've never really seen it work. Probably possible to enable it, but disabled by default",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8trqd/"
  },
  {
    "text": "Start with VS Community. When you run into problems or you have questions, there\u2019s almost always some solution or help online somewhere and MOST of the time that solution is using VS. \nThere are other IDEs out there that work just as well. I use CodeBlocks. Why? My machine has to remain off network and because, Microsoft (I REALLY wish they would put out another edition that can install offline without activation). \nWhen you work with open source stuff you really have to rely on the community of developers that take a lot of their free time to work on such things for support unless you\u2019re some kind of wizard. If you don\u2019t really know what you\u2019re doing (like myself), you find yourself stuck asking questions on forums where people just kind of push you off objecting to form. Or, sometimes they like to point out typos that really aren\u2019t the problem and then tell you to go elsewhere. Kind of like that know-it-all kid from Polar Express. I should clarify, I\u2019ve found that people on Reddit in this sub in particular haven\u2019t had that same tendency. They\u2019ve been way more helpful than other forums, so I think you\u2019re starting in a good place. ;)\nAll of that being said, Eclipse is pretty good (I used it with Java for a class I took but haven\u2019t used it with C++). CodeBlocks is pretty good (that\u2019s what I\u2019m kind of stuck with for my offline machine) and I\u2019ve heard really good things about and would love to try CLion. If I were you I would go with VS if you can, just because of the disparity in the amount of online information you can find from people using it vs the other IDEs.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fharv0y/"
  },
  {
    "text": "Visual Studio is really slow for me, so if you have almost no knowledge, use repl.it for low level projects. (It\u2019s free)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fha6rko/"
  },
  {
    "text": "The best ones are msvc and gcc",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbl827/"
  },
  {
    "text": "Start with the Nuwen distro of g++.\nIt's small and super-easy to install.\nMaintained by u/STL.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8xfkj/"
  },
  {
    "text": "Although you talk about the command line, you seem to think about the IDE.\nIn order to play with small C++ programs as you need to do when learning C++, you need the go through the following steps:\n\nEnter and/or edit a text file that is the C++ program. You'll normally store the file somewhere on your hard disk. Let's assume it is called program.cpp.\nCompile the file, by passing the name of this program file to a compiler. In fact, many steps are necessary: preprocessing : takes program.cpp and processes it by reading all included headers, replacing all macros and stuff like that. If the result is written to disk this probably would have the extension .ii, for example the resulting file could be named program.ii. The next step is the actual compilation done by the compiler. This takes the preprocessed file as input and writes out an object file, which usually has the extension .o. Aka, program.o. Then it is the turn of the linker that takes program.o and possibly other compiled object files, as well as libraries (.dll files on windows) and produces the end result: program.exe.\nFinally you need to run the program. Simple C++ programs won't use Operating System depending libraries etc, but will just use the standard C++ features for I/O: reading a line or lines from the keyboard (must hit Enter key to be able to read it) and writing character strings to... the \"console\" (or terminal).\n\nWhen using a command line, you will have a window open that IS a console or terminal. This gives you a command prompt from which you can start your favourite text editor for writing C++ programs. You can type in the command that does step 2 (usually everything is done with a single command). And finally you can run the resulting .exe from the command line too.\nPersonally I PREFER the command line. I use it exclusively, also for the most complex projects. Of course I do not type all the commands in again and again; I use self written scripts and shell aliases and functions to abbreviate what I need often and to make my commands powerful. An IDE does the same, but then has a button for each such function. The downside of an IDE is that it is less flexible (often you can't even choose your own editor, but it has that builtin). It is more integrated though, for example the editor that they force upon you is aware of C++ and program structure, allowing a visual way to navigate the program (and provide completion etc). It might write your stuff to hard disk in a more black box kind of way though, writing a \"project file\" that isn't really human readable: you will always need that specific IDE to continue (easily) with your project.\nA GOOD editor (read: (neo)vim) can do everything you want, doesn't require a mouse (everything is done by keyboard, which speeds up production a lot (a mouse is slow), and saves you from RSI:p), but has a very steep learning curve: in the beginning you'll be learning for weeks just how to use the editor (And you'll never really learn it all, it's just too much). Plus, once you get USED to vim you won't want to use anything else anymore, which makes it thus impossible to use an IDE anymore ;). I speak from experience.\nIf you use a simplistic text editor then you won't need to learn how to use it, and it will be easy to start using an IDE later on (it just won't be as fast). If you plan on coding 8+ hours per day every day for years to come, I advise you to invest time into vim though.\nThe command line compilers are basically all the same (as long as they are command line): it either works or it doesn't. The IDE will call the same programs, it will just do it behind the scenes, hiding all the details from you. That is fine, just click with the mouse and it compiles and probably even runs too, as long as it works. If anything goes wrong you won't have a clue what that is. Hence, getting practise with the command-line yourself is the way to go to become a wizard - also an IDE wizard.\nI use only linux, and I'd say: use g++ or clang++. Those also exist for Windows, but I'll leave it to windows people here to advise maybe something else.",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8t75t/"
  },
  {
    "text": "Dude, I have bee. stumbling around inside visual studio solutions and c++ for almost 4 months now. I came from python on a mac OS sooo.... lots of new.\nThis cleared up a ton of the VS side though. Thank you!!!",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhaeolt/"
  },
  {
    "text": "Thank you so much for this in depth tutorial. I download VS and I backed away from it because it seemed too complex. I'm definitely going to give what you suggested another go now :)",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbgpj3/"
  },
  {
    "text": "I take minor issue with the last paragraph. It's not important if you are learning this as a hobby or expect to get a job where they are paying for an IDE. Otherwise, it's worth the time to learn a CLI editor as well so you can do your job. \nA lot of my job is on CLI, and the only way to learn it is to use it and pick up pieces as you go. I don't think I'm at the one weird company where CLI is still heavily used.\nBasic vim/emacs is just a couple days of use.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh90w4e/"
  },
  {
    "text": "QtCreator is a good choice on Linux if you want something \"that just works\". Similarly to Visual Studio you can select \"New console application\" sand everything is there for you, including a cmake script.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh99m42/"
  },
  {
    "text": "Another good IDE is CLion. At least on Linux, it just works (once your compiler is installed, of course, but that's just a single terminal command on Linux). It's a good idea to learn C++ on Linux to start with since the support for C++ on Linux is so much better than it is on Windows. Of course, you can do everything on Windows that you can on Linux with C++, it's just usually more annoying.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh9iyyy/"
  },
  {
    "text": "Thank you so much for interpreting my question and clearing a few things up :) So as I understand. A text editor/IDE is the actual thing you use to write the code? And up to this point the \"code\" is just written text, that a machine can't do anything with? So the compiler takes the this \" english code\" and turns it into some kind of binary that the computer/machine can execute? \n\u200b\nSo further more I understand that you can have the editor and compiler separate(easier on linux), where as something like Visual Studio is a \"package deal\". \nAfter reading this thread entirely I can't help but be intrigued by Vim and Emacs after hearing about it. Should I definitely stay away from this as a beginner?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbhumi/"
  },
  {
    "text": "It's a tiny bit irrational, but I loathe devc++. I also loathe geany. More problems than solutions, in my experience.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh911pk/"
  },
  {
    "text": "All taken on board. Visual Studio is definitely coming up a lot so I think as you said its probably definitely the best place to start with :)  I have heard of eclipse and codeblocks, I may have a look at these but as you said, as a beginner you need as some resources as possible to help you along the and VS ticks that box. Well I have definitely had a good first impression on this sub :) hopefully I can help people when I start to get to grips with it :)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbnf7t/"
  },
  {
    "text": "I like the way you think. Except for all that stuff about vim. You obviously meant to say emacs.\nA command line interface is way better when you're learning in order to get a better understanding of how things work in the build process. And more powerful and flexible in general than a gui once you do know what you're doing.\nA basic class in using a shell and its core concepts should be part of any programming curriculum. See so many questions caused by, say, not understanding what a current working directory is...",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh96oor/"
  },
  {
    "text": "I must ask, have you ever used an IDE?\nYou are aware you dont have to actually click buttons? Keybinds do exist. KDevelop even has a \"enable vim keybindings\" checkbox that i fear to enable.\nYou also are aware that an IDE is not a compiler, but infact a text editor with integrated development features? So that comment on it \"forcing an editor on your\" is pretty redundant. An IDE is and editor.\nYou also are aware that IDEs exist to integrate the compiler and its output into your editor, so you can e.g. click (yes, sometimes that is the better option) an error message in the compilation output and it takes you to that line? So im not sure what its \"hiding\" from you, that you cant find out what went wrong.\nYou also might know that you can (and should) use CMake, which your IDE then loads, so you are not tied to the IDE at all. Ofc your ide has to stores its own meta information somewhere, but that is not required for the project itself, its information about your setup on this machine.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh8z0o2/"
  },
  {
    "text": "Really interesting stuff. You've really intrigued with this. I'm not conflicted wether to go down the IDE route or as you say the vim route. I really do like the idea of learning and understanding everything thats happening under the hood. I do have a tendency of picking the hardest way of learning/doing things but that's always better and pays off in the long term. You mentioned g++ or clang++. Is this the vim that you mention? (0command-line)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbqaj7/"
  },
  {
    "text": "No one should suffer for 4 months. This sub is much nicer than SO, so don't be afraid to ask. There are VS users on here, someone will be able to guide you through how to setup your next thing.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbhefa/"
  },
  {
    "text": "I don't think I'm at the one weird company where CLI is still heavily used.\n\nI'd beg to differ tbh. Using a terminal to compile/build is obviously fine and all and yes, people should definitely learn how to do that, but your comment strongly suggests that the entire work is being done in a terminal only. Which implies you have no graphical interface on your OS. And I'm sorry, but that doesn't sound like any normal (work) environment at all. Even in the few scenarios where you run code on a system without a graphical interface you wouldn't do actual coding on that system but rather do that on a normal machine (either by transferring files or via SSH or something similar). What kind of job are you talking about?",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh95f1z/"
  },
  {
    "text": "Note that this post is me agreeing with you /u/sweenish182. Sorry for the rant.\nVim is fantastic and seems to get a lot of hate in this sub. I work in/on what is understood to be the world's largest monolithic software repo (not a toy project), and I am not alone at Google in preferring vim (not by a long shot). In fact, they have a stock vimrc that is really well tuned to our environment as a starting point.\nWhen forced to use an IDE, the first thing I'm looking for is vim mode (and I'm very judgemental if it sucks [e.g., no support for macros]). With vim, I have code completion including parameter annotations and function comments, can jump around (e.g., to symbol decl or defn), etc. It works fantastically for me and many others.\nThe point I'm trying to make here is that terminal (or console) people are a thing--we work in all levels of industry. I am one of those people, and we are not even rare.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fha7d6k/"
  },
  {
    "text": "A text editor/IDE is the actual thing you use to write the code?\n\nIn principal, yes. Nothing stops you from writing your code in notepad (apart from your sanity ofc). An IDE is more than that. It interfaces the different parts of development together, giving your access to the compiler and its output from within the \"editor\", allowing you to debug and stuff.\n\nAnd up to this point [..] can execute? \n\nCorrect.\n\nSo further more I understand that you can have the editor and compiler separate\n\nYes. These things, just like the term IDE, are not as clear cut. Usually editors and IDEs are developed by separate entities.\nVS also has a bit of a special role here. You can use VS without the MSVC (the compiler) that comes with it, and you can use the compiler without VS, but really VS as an IDE is way to good to do that.\n\nShould I definitely stay away from this as a beginner?\n\nStarting off in a command line editor just adds a step to the learning curve that doesnt get you anything at that stage of learning. Would you rather be confused by how to navigate your editor, when you already are used to just being able to click where you want your cursor to go?\nPersonally my advice would be to avoid these things (like the plague, which btw is fairly well treatable...). Do not actually develop in command line editors. You should know how to use them to a certain degree, just in case you have to. But in the end modern tools are 1) superior if mastered to the same degree as any command line editor buffed up with a dozen plugins (at that point its just an IDE in the command line anyways) and 2) way easier to get into and setup.\nThat doesnt mean you shouldnt have an understanding of how compilation and linking work, but thats like learning higher forms of poetry before you can speak the language.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhbrksu/"
  },
  {
    "text": "Sure, why? For me it works fine",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhai02p/"
  },
  {
    "text": "Thank you ;). And yeah, the old emacs <--> vim war is fought with a chuckle between friends. I never used emacs at all by the way, so wouldn't have an idea. But the generation brought up with Windows, who indeed don't understand what a current working directory is, ... The difference between CL and GUI is just too large. Different worlds imho.\nPS, if you are using linux and bash, you want to use my cdeh system ;). You REALLY do. https://carlowood.github.io/howto/cdeh.html",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhazhad/"
  },
  {
    "text": "Per paragraph,\nyes - that is, I tried them out and they did NOT offer to use vim. There is no such thing as vim-keybindings imho (although at the time I tried these IDE's they didn't even offer that): if you want vim you want all of it.\nOf course, but reaching for ctrl-shift-F11 is still harder than what vim offers. I find key bindings that use control, shift, alt, super or the F* keys hard (slow) to use, too, although not as slow as a mouse of course, but we're talking about jumping back- and forwards through the text, selecting text to move it around, things that are used too frequent to spend half a second on.\nI can do that with my \"command line\" setup too. Of course it is a crucial feature to be able to quickly open a source file at the place of an error that the compiler just spewed. And so is being able to jump directly to the declaration or definition of whatever is under your cursor. Vim doesn't have that built-in, but it is so extendable that you can use other tools to support it (I'm using ctags). It might be harder to set up, but it is also more customisable as a result I think.\nI guess I have indeed not enough experience with IDE's. But the fact is that that is because every time I tried them, I hurried back to the command-line. The main reason being that I can't work (efficiently) with another editor than a full-blown vim (now using neovim). It SHOULD be possible to ACTUALLY support that imho (although I read that one of the reasons for neovim is to make this possible, so apparently it wasn't with plain vim). The second reason being that I want a separate window for everything. A single window that got split into a lot of little windows is like an application that tries to be its own window manager?! Not to mention that I don't need all that \"info\", it just takes screen space :/. I think that it is possible to write an application that should be called IDE and does exactly what I want, but I haven't seen any yet that comes near that (last time I checked was 10 years ago or so, so maybe things have finally improved).\nBottom line, I don't think that an IDE offers anything except a menu and other clickable things to \"configure\" your project (Aka a GUI). I have never had a need for that though (plus I hate menu's). I configure my projects in (text) files that I edit in vim. It is certainly true that my setup is something that has grown over many many years, not something a newbies could to set up in a week (unless I'd write a HOWTO, then it shouldn't be a problem to start using this system).",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhaxfso/"
  },
  {
    "text": "g++ and clang++ are compilers, they come with preprocessor, assembler and linker too.\nFor larger projects, that is, anything larger than a single source file that You'll start with for the earliest learn cpp cases, you also need a \"build system\", this is the part keeps track of which files need building (generating, which includes compiling .cpp sources) and how, in what order etc. So you can just say ok \"make\" the project, building everything that needs (re)building. The build system is often very complex, so much so in fact that you usually generate it.\nAnyway, I can only tell you how this works on linux :/. Here, next to configuration files, one can use environment variables (although also these are often given a value in some file of course) and command line parameters to tell the build system generator how to generate the build system, then to tell the build system (additional) how to build the project, and finally tell the created application how to run.\nThere are many build system generators, but the industry standard is currently pretty much cmake; there is also \"autotools\" which has its roots in pure UNIX (or rather POSIX) and therefore a lot less suited for cross platform building (it is possible, but harder to set up and maintain). Also, autotools only support 'make' (and Makefiles) as build system, a single-target build system (where target means \"build for debugging purposes\" or \"build a release version\" etc), but there are more build systems, also multi-target ones (here you'd tell the build system (when building) if it has to make a debug version, a release version or both), and cmake supports those too.\nCalling an IDE an editor is incorrect imho. An IDE tries to integrate everything: the editor being built-in I guess (because of the extreme integration that is necessary) but at the same time it provides the GUI to configure the build system generator (still cmake, or the likes) and fire that off from within this GUI. I am sure it provides as much sane defaults as possible, while also allowing to configure everything differently. It can even provide the terminal that your application runs in (Aka, intercepting its output and then displaying that in some window of the GUI).\nThe CLI (Command Line Interface) route keeps everything separated and doesn't provide a GUI to wrap all of it and make it look like a single application. You'll need the following things eventually thus,\n1) any text editor\n2) build system generator\n3) a console or terminal application to run everything in / from\nYou should probably start with being the build system generator yourself (aka, don't use one, type it yourself).\nIf your pick for build system would be \"Makefiles\", then that means you'd have to write a little Makefile. But, before doing that I'd start with executing the build commands yourself even from the command prompt.\nIt would be nice if your text editor supported syntax highlighting and allowed you to quickly navigate around all the sources etc. That rules out most text editors. While vim can do almost anything, most of it needs manual configuration (I'd like to get that .vimrc file that Google is using, as another person said here). I wrote a HOWTO how to get TrueColor syntax highlighting with vim using custom colors and patterns (I'm even using ctags to generate syntax highlight config stuff).\nSo, using vim, cmake and having a terminal with shell and command line open, a typical edit/compile/test cycle would look as follows:\n$ cmake -S . -B build   # generate build system (Makefile's)\n\n$ vim program.cpp       # make changes to program  \n$ make -C build         # compile/link program  \n$ build/program.exe     # run application; afterwards go back to 'vim program.cpp' to repeat cycle.\n\nBut your commands will instead look like this at first:\n$ vim program.cpp       # write / change program code  \n$ clang++ program.cpp -o program.exe   # compile/link program  \n$ ./program.exe         # run application and repeat.\n\nAnd only once you get tired of typing the clang++ command learn how to use a Makefile. And once you get tired of writing those, learn how to generate them with cmake.. And once you know that, consider using an IDE to integrate it all.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhduoq6/"
  },
  {
    "text": "One where the code is is on a server that you ssh to only after connecting to your remote desktop which can only be done after connecting through the company VPN. That's not to say I don't use a GUI editor, I use VS Code 90% of the time. But that other 10% is vim, and all my git stuff is CLI (we don't pay for a GUI git client, we have smartgit. I hate smartgit). All build and test commands are 100% CLI (scripts invoking build containers and all that jazz).\nI will be the first to admit that we could do with some more modernizing (but we do have some great CI/CD infrastructure), but so could any company that's been around for a while. \nWe are at least using C++14, will soon be investigating C++17, and I am leading the charge on making clang tools more prevalent in our day-to-day, starting with clang-format. \nMost of our devs still proudly use vim, and they're only lacking a couple features when it comes to linting. ctags are stupid powerful. This being a sub for C++, I'd expect more than you think still do a LOT of work in CLI land. \nAlso note, I'm not in full disagreement mode here. It depends on what the goal is. Just for fun, hobby, etc., I think you could safely ignore the CLI. But if the goal here is an eventual career, you need to be competent with a CLI. Expert, master? No. In the same way that I don't know how to do everything in MS Word, I don't know how to do everything in vim, but I know enough to edit a file and do basic operations. And being able to put both on a resume beats one, especially if that one is just a GUI.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh97khw/"
  },
  {
    "text": "No auto-completion but it works fine? Sure it does.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhavveb/"
  },
  {
    "text": "Forgive my cynicism, but you are one of these people who turned their command line and command line editor into an IDE with a dozen plugins, scripts and whatnot, but now tell people that IDEs aren't the way to go.\n\nthey did NOT offer to use vim\n\nAgain, an IDE is mainly a (smart) editor. What would \"using vim\" inside another editor even mean???\n\nif you want vim you want all of it.\n\nThat may be true, but very obviously is only an argument for people well versed in vim. I dont even know what \"all of it\" for bare vim means, i dont think its a lot. The same probably applies to most command line editors.\n\nOf course, but reaching for ctrl-shift-F11 is still harder than what vim offers.\n\nWhat exactly made you stop in the settings right before opening the keybind menu? Thats a thing, right? And as you rightly point out shortcuts like this are too complex for common things - which is why that most likely is not the shortcut for e.g. \"build\".\n\nI can do that with my \"command line\" setup too.\n\nSee my comment above. The point of the IDE is to not require any setup for this. It will simply build a syntax tree of the project and be fully aware of anything, without needing to add plugins or tags.\n\nBut the fact is that that is because every time I tried them, I hurried back to the command-line. \n\nAgain, nothing wrong with that. But as is clear by now you did spend a lot of time doing setup and whatnot and most crucially are used to your personal environment for a long time. A start in bare vim is about as good as a start in bare gedit or notepad++. Hell npp might be better since the never versions actually know c++ and can autocomplete.\n\nA single window that got split into a lot of little windows is like an application that tries to be its own window manager?!\n\nTaking Kdevelop as an example, you can detach all parts of it. It also starts in KDE so make of that what you will xD\n\nNot to mention that I don't need all that \"info\", it just takes screen space \n\nThen maybe, just maybe use a fraction of the time needed to add plugins to vim to just remove toolviews from the IDE you dont want to see? I fully agree its stupid every editor has a big fat \"Save\" button in the toolbar, but that doesnt stop me from just removing it.\n\nBottom line, I don't think that an IDE offers anything except a menu and other clickable things to \"configure\" your project (Aka a GUI)\n\nAgain, which the exception of VS and their solution files (and i guess there is a way to use these without VS), there the build system/project configuration has not much to do with your IDE. I can setup a CMake project and use it without KDevelop/CLion/VSCode/... But i can also import the project into my IDE and have all the features ^TM without any setup required.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhb277u/"
  },
  {
    "text": "So in the end we are around at not starting out with command line editors, because those would add a step to the learning curve that just doesnt need to be exactly there.\nSure its not hard and all, but its completly alien to anyone born after 1980. Especially when OP mentions word pad as a reference.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fh98a0g/"
  },
  {
    "text": "Ah that way, welp the guy asked for it. Good to hear it's not anything else weird within the ide, but I'll look for other options!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhazxx2/"
  },
  {
    "text": "I once opened a file in vim. Couldn't figure out how to exit out of it for 30 minutes.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhadqwh/"
  },
  {
    "text": "At the end, I landed on it depends. And my big caveat was that if you want a job, you should learn CLI. Hardly the same landing spots. Also, I was born after 1980.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhaw3uc/"
  },
  {
    "text": "The only reason I\u2019ve ever used vim is because it\u2019s the default editor that git shoves you into if you forget a commit message or have to resolve merge conflicts. I have to look up how to get out of it every single time.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhaoj4p/"
  },
  {
    "text": "rofl",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhb9omy/"
  },
  {
    "text": "I never said you shouldnt learn command line, or at least i hope i didnt. You most definitely should. Knowing the basics of a command line editor would be included in this. My point is that starting out in one makes everything harder than it really has to be.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/f1vjig/best_c_compiler_for_complete_beginner/fhb0o6v/"
  },
  {
    "text": "A fellow teacher recommended Dev C++, which is something that a lot of programmers I know curse to death. I also have thought of Turbo C++ which features a very simplistic UI, but that's only because it's from the ages long past.\n\nfor hell's sake where are you from ? Dev-C++ has been dead for 15 years. \nI think that we should collectively send a big message to most schools, manifesto-like, telling them that they are harming their students there.",
    "score": 29,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti69w2/"
  },
  {
    "text": "QtCreator could work. Really simple to install and Qt installer can also install MinGW. Also gives easy option to try C++ GUI programming.\nIt has lot of features but simple things work well out-of-box and eg. cppreference can be integrated to QtCreator so that simply pressing F1 shows cppreference page of hovered symbol.",
    "score": 30,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti3n1q/"
  },
  {
    "text": "Sorry but I'm a little nervous to see you on here asking only about the IDE. Teaching cpp is (imo) pretty tricky so I'm surprised this is your only question. Also your colleague recommending such an old ide makes me think y'all aren't really keeping up with cpp which is scary because this language changes fast and a lot of cpp classes out there are utter trash because they're not kept up to date.\nI'm no expert, but SG20 are and I would recommend checking out their videos about learning and teaching cpp before you do anything else. At least watch the \"critical\" lectures and the ones about teaching cpp. https://www.cjdb.com.au/sg20-and-videos",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiv0wy/"
  },
  {
    "text": "Check out juCi++. The main rule while developing this IDE was to keep the UI as simple as possible (no buttons etc.) while still having the needed functionality easily available trough hot keys.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etid5ag/"
  },
  {
    "text": "A fellow teacher recommended Dev C++, which is something that a lot of programmers I know curse to death. I also have thought of Turbo C++ which features a very simplistic UI, but that's only because it's from the ages long past.\n\nPlease don't do either of these things. Do not teach current students yesteryears programming. Teach them modern C++17 using Visual Studio Code. It's free and open source and works on Linux + Windows + Darwin.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjesk3/"
  },
  {
    "text": "VS Code. Works everywhere and there is no reason why high school students aren't able to use a full featured one. Just use Visual Studio Community if they are all on Windows and you don't want to have them compile on a terminal or walk them through setting up compiling withing VS Code.\nAnd please don't listen to the people stuck in the 80s with their vim or emacs.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti2sp8/"
  },
  {
    "text": "Honestly, just use Visual Studio. The community version is free (as long as you don't make a profit from it), and you can probably grab an educational license (I don't see why the students would need one).\nStuff like VS Code will require your students to add the proper C++ extensions themselves and you'll lack Visual Studio's debugger, which is considered the best C++ debugger by many.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etibr1r/"
  },
  {
    "text": "QT Creator or VS Code, both have\n\ngood autocomplete\ngood syntax highliting\ngo to definition\ndebugger\nCMake support\n\nand both are cross platform (OSX, Linux, Windows)",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etikreu/"
  },
  {
    "text": "Speaking as a complete beginner to c++ and learning from a book as we speak to hear me out:\nIs an IDE really necessary at this stage? Why not just download a simple code editor and compile through a terminal? Learning that process is valuable in itself.\nI didn't want to spend time learning the ins and outs of an IDE that I may not even use in the future when I could just focus on the code. Besides if you're only teaching the basics, the terminal will tell you enough to be able to debug without adding breakpoints etc.\nLogistically, think about having to worry about getting people set up with the IDE, then all the issues people will have during class using it i.e. \"this tool has disappeared from toolbar, I don't know where this is, etc. etc.\".\nProbably not the answer you were looking for and others might disagree but speaking as a student in c++ myself I think this is the best way to go about it in order to focus on the code.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etic0s2/"
  },
  {
    "text": "you don't need an ide.  use the command line.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etl9ogh/"
  },
  {
    "text": "For beginners starting with C++ they should start with a normal text editor. Ive heard too many stories of students who are unable to program in environments in which they dont have access to an IDE.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etmvl23/"
  },
  {
    "text": "Emacs\nBut seriously, VS Code",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etib5ic/"
  },
  {
    "text": "I work for the Visual Studio team so my opinion is biased, but I wanted to highlight that we've made a number of user experience changes designed in part to reduce the learning curve for new users (particularly students) over the past few releases. For example the console window no longer auto-closing itself when a debugging session completes, \"This project is out of date\" build prompt that was confusing to a lot of people, quick fixes for missing #include statements and semicolons (they both seem to be pretty popular), and even an overhauled new project dialog and a new start window to help a new user focus on the experience they want. \n\u200b\nBut putting that aside, I learned a lot by sitting in UX labs with many students over a period of a few months. My two biggest takeaways were: \n1) Some of the biggest stumbling blocks are things that seem really basic to an experienced professional developer as they have already overcome and routinely bypass these issues. I think it's up to tool vendors to fix those (so please file bugs on tool vendors when you see a pattern with your students getting stuck somewhere). But even without that there is the second takeaway - \n2) Tutorials work really well to reduce the learning curve. I put together a basic tutorial for a console-based calculator app in Visual Studio that took maybe 20-30 mins for a student to go through, and by the end of it they knew not only how to compile and debug their first C++ app, but even to do things like use a conditional breakpoint or step through the code. I was also careful to describe each line of code since all of it is brand new information to the reader. You can actually still find the tutorial here ( https://tutorials.visualstudio.com/cpp-calculator/intro) and we since integrated it into our docs as well. The difference between students who took the tutorial and those who were asked to get started on their own with only general guidelines was huge: students who followed the tutorial were much happier by the end of the session and felt they really learned something. Students who didn't couldn't get a program to run in an hour's worth of time. So as an educator, regardless of the tool you end up choosing, I suggest investing some time into a good getting started tutorial. That alone will make a huge difference. The GIFs are worth the time investment too and don't take too long to make with a decent tool.\n\u200b\nAlso to comment a bit on the console vs. IDE teaching method: I think it's fine to start off with just a console, a Makefile and a compiler you can call to build the code from the command prompt. My problem with it is that this often turns into years of students being asked to work this way. It's one thing to get students to understand basic principles, it's another to hurt their productivity by having them avoid tools everyone else uses for professional development. Students are busy too, and they could use the time savings provided by a good editor, IDE, or debugger. I wouldn't spend more than a few weeks in just a console. On top of that, learning tools is important to prepare them for their future career as well. Otherwise it's like insisting on teaching graphics design in Paint. Look, I love Paint, but it isn't Photoshop.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etxgz6r/"
  },
  {
    "text": "Visual Studio Community Edition or whatever the free one is called",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etibwxo/"
  },
  {
    "text": "Using Visual Studio with vcpkg automagics adding include directories and linking libraries that would have to be done manually in some kind of build system (and potentially a project helper file for IDE-like intellisense) with other solutions. All the user has to do is install a package with vcpkg and when they simply #include a file from that package in a cpp/h file in their project the rest is all done for them.\nHaving said that, is C++ the next logical step up from Scratch?",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti934k/"
  },
  {
    "text": "CMake + VS code or Visual Studio if you are on windows, and CMake + QtCreator or KDevelop if on linux.\n\u200b\nThis is how I acheived the most success showing C++ to beginners.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etitl5f/"
  },
  {
    "text": "Visual Studio Code.\nIt's easy to set up, and can provide decent IDE features even if you don't bother to set up all the integration with the build system and whatnot.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjaoj4/"
  },
  {
    "text": "kdevelop (or Qt Creator).\nReasonably intelligent suggestions, reasonably easy to use.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjkg2l/"
  },
  {
    "text": "You should not be teaching them C++ at all, unless they are really excited and actually asked for it. If Scratch is what you are teaching right now, perhaps continue with Javascript or Python. If that\u2019s not an option, try as hard as possible to keep them in the browser. Nobody wants to headache of installing and configuring Qt correctly or whatever IDE+compiler(+build system) you might choose.\nI realize this might not be a great response for the cpp subreddit, but in my opinion C++ should not be taught to high school students because of how difficult it is to teach correctly. The amount of dragons and edge cases behind every single corner of the language makes it very unsuitable to develop an intuition for how things work. C# or Go or Python are all leagues better at this.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjy8by/"
  },
  {
    "text": "For UI simplicity, go with text editor that can compile files. Visual Studio Code is my pick in this matter. Install the C/C++ extension from the market. 2 clicks away and its ready to use.\nAnother option would be QtCreator community edition. It's free, has awesome autocomplete, go-to definition, and suggestion, low memory usage, runs everywhere, and would be relatively easy to teach GUI programming because it has built-in WYSIWYG designer. Students who are interested beyond the scope of the class can learn more on their own and use it to develop marketable software, so that's another huge plus to keep in mind. I use it everyday.\nLast but not least, CLion. Its a paid IDE, but fortunately JetBrains (the company behind it) gave 1 year extendable free license if one can provide a student email. Its downside is huge memory usage (1.5GB+ RAM on my laptop after build, 500-800 MB idle with unused extensions disabled).\nNote: I'm aware of Visual Studio IDE (not Visual Studio Code), but since its not cross-platform I don't recommend it in educational setting.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etj6vno/"
  },
  {
    "text": "Instead of choosing an IDE, I'll be talking to our coordinator and probably make plans to push this to JavaScript...\n\nJavaScript normally means JavaScript + HTML + CSS and this isn't a clean introduction to programming imo. I'd much prefer that kids learned something like Python where there's much less noise to put them off with.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etl7q8u/"
  },
  {
    "text": "https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#C/C++",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eu42unw/"
  },
  {
    "text": "Can you get an academic license for MSVC?   I think that is great for getting started, assuming that they are on Windows.   Precompiled headers will simplify things for them also.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti764l/"
  },
  {
    "text": "VS Code combined with whichever LSP implementation works on Windows (clangd?)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti8nwo/"
  },
  {
    "text": "I think that we should collectively send a big message to most schools, manifesto-like, telling them that they are harming their students there.\n\nI am from the Philippines and yes please, do that. I am teaching now because I have been in this cycle when I was taking up my degree. It was not just unproductive but toxic, you being taught something that's not even used anymore, wasting years of study only to come out with nothing useful learned. I just wanted to be a part of some sort of change, I guess, that's why I am teaching now.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etihw0e/"
  },
  {
    "text": "where are you from ?\n\nIn my country - Romania - my high school teacher considers Turbo C++ advanced because it has the graphics.h header included and requested me once to make it work on school's computers. I tried but I couldn't make it work and I tried to explain to him that the library is very old and Turbo C++ is not even developed anymore. With my limited knowledge I tried writing a library that uses SDL2 instead to draw simple stuff, I made it work on their computers and I made a simple template in codeblocks - the IDE that the school uses - to make it easy for students to create new projects. Sadly I have just finished high school and after I made it work they reinstalled windows on their computers and I did not get the chance to 'install' the library again. The same teacher says that codeblocks is a programming language - something like an advanced c++ that highlights text, that the only difference between c and c++ is printf vs cout, that iostream.h should always be used and I am not even kidding.\n\nI think that we should collectively send a big message to most schools, manifesto-like, telling them that they are harming their students there.\n\nJust PLEASE do it.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etigjw0/"
  },
  {
    "text": "The problem is obviously not [really] with the recommended tools, but with the fact that OP and his colleagues call themselves teachers.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti84pz/"
  },
  {
    "text": "I second Qt Creator as well. It\u2019s cross-platform. Has it\u2019s own simple and grokkable build system which is also cross-platform, yet also supports cmake if the need arises. Can install mingw on windows using Qt installer. No need to do it manually.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiq0nu/"
  },
  {
    "text": "Thank you! This is a godsend.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etkboll/"
  },
  {
    "text": "Isn't the fact that you need to build it kind of a non starter for what OP is looking for?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etimbsp/"
  },
  {
    "text": "That's a nice and simple IDE, but I built it this morning and it definitely isn't simple to setup, especially for beginners.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eto522s/"
  },
  {
    "text": "You overestimate high school students. Many of them are just doing the programming course randomly and aren\u2019t interested. You would overwhelm them with setting up \u201cmagical\u201d tools like compilers in vscode.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjx09f/"
  },
  {
    "text": "Poo, I would actually choose something very basic like gedit (or emacs) because IMO these students need to see how everything fits together at a low level.  Let them run the compiler at the command line and see how the files sit in the filesystem.",
    "score": -7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti3oua/"
  },
  {
    "text": "I understand your point, but I think the public here isn't people how are actively pursuing a career as programmer, but rather potential hobbyists and programmers. I think the class should focus more on easily doing something cool, rather then showing them all the nooks and cranny of the language.  \nYeah, they will end up doing stuff they don't understand, but if they have fun and it capture their interest, they will end up learning that stuff later.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiejrt/"
  },
  {
    "text": "Having said that, is C++ the next logical step up from Scratch?\n\nNo. But that is something that's beyond what I have power over. The country's Department of Education set up the curriculum and as an entry-level instructor, I can't do anything other than assisting my students ever so gently into C++ programming.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etigz6c/"
  },
  {
    "text": "I second that",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etid6ft/"
  },
  {
    "text": "That's what I use and it's a good choice. Not perfect by any means, but it's free, it works well enough, it's being actively moved forward, and it's the same on Windows and Linux so it's good for cross platform work.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjqe31/"
  },
  {
    "text": "I think this is good, though. They have been taught HTML + CSS in their previous school year, and a lot of them showed a good understanding of these technologies.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etlb5um/"
  },
  {
    "text": "community version is free.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti7c8x/"
  },
  {
    "text": "Precompiled headers will simplify things for them also.\n\nHow so?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti7y9x/"
  },
  {
    "text": "The same teacher says that codeblocks is a programming language\n\nThat's just... sad. To be honest, this type of scenario is very widespread here too (I'm from the Philippines). And I'm talking about universities and colleges that give out degrees in Computer Science and Information Technology. The teaching professionals just aren't that good in learning themselves, and give out wrong and misleading information. This results with students barely ready for work after they graduate, and the better students end up working as software developers in high paying companies; almost none of them even consider teaching.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etihov9/"
  },
  {
    "text": "Just PLEASE do it.\n\nHey, see my flair? I might add something like this to my TODO list of \"single page articles dedicated to shortly present important problem\" (next to strict aliasing violations and common C/C++ myths)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etltd4z/"
  },
  {
    "text": "Exactly. If we call ourselves teachers, then where the hell are our students going to, right? That's why I am finding recommendations to start change in our schools. My colleagues didn't even have professional work background with Software Development; they all had degrees in Computer Science and then permitted to teach. Meanwhile, I, too, have a degree in Computer Science but worked as a freelance Web developer for 3 years before I started teaching. And I am as clueless to C++ just as my students are. The only place I could look for help is here, where other developers could help me teach my students in a way that prepares them for the future, regardless if they want to enter the tech industry or not. I am so happy that a lot of you have given your recommendations, and I will be looking into all of them and tell my colleagues.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etigczs/"
  },
  {
    "text": "To be fair I think it's hard to set up a good school curriculum and keep it updated over time. Any time a big change is made there is a risk that something will go wrong and you'll end up with students not learning much. Maybe one thing us tool vendors can do is make a greater effort at lowering the learning curve and providing useful supplemental materials to educators and students for using our tools. Documentation designed for professional development is different than documentation targeted toward students working on small projects.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etxerjl/"
  },
  {
    "text": "ayyy nice! I am super glad it was helpful :D",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etkcyg0/"
  },
  {
    "text": "Starting at too low level is how you end up pushing people away from programming IMO.  \nWhen you first start to program, you want to make games, web sites,and other cool stuff. It's by easily allowing that that you can interest people in the craft. Of course, if they pursue learning the craft, they will eventually have to understand what the hell is happening at a lower level but at first, show them how fun and easy it can be to make something cool.  \nTake two beginners, one in Python, the other in C++. By the nature of both these language, in a few weeks, the Python one could easily be taught how to create a simple game with a UI. The C++ one will still be making console app with endless segfault because \"he needs to know how raw pointers and memory works before moving further\". Stop teaching C, stop starting at the very low level and C++ can be a fun starting language.",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etie59v/"
  },
  {
    "text": "They can already do that in VS Code.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti47qx/"
  },
  {
    "text": "Yes you can learn a lot from compiling on the terminal, but if you ask me that's no reason to use a text editor without any features, might as well use Word at that point. Use VS Code to write the code, compile it on a terminal. They don't need a \"click this button to do the compiler magic for you\" functionality, but syntax highlighting, auto-complete, and intellisense are all really useful tools. I just mentioned VS Community in case the teacher does want the students to skip the terminal for some reason.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti4ani/"
  },
  {
    "text": "Sure, just like we introduce chemistry starting with quantum mechanics and mathematics \u2013 with ZFC.\nBecause these students need to see how everything fits together at a low level, ay?",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/ew3m4y2/"
  },
  {
    "text": "basically you're saying it's too hard to use raw tools.  of course this is not true at all.  it's dead simple.  if anything it's easier when things don't work because you can see exactly what happened and debug it.  it's hard to debug \"linker error retry with -v for invocation\" when you just pressed a button",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etl9nkh/"
  },
  {
    "text": "Yes, but said teacher [or institution] might not qualify?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti801u/"
  },
  {
    "text": "You can set them up with just the headers you need and then they do one include.   It makes building faster also.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti8261/"
  },
  {
    "text": "And I am as clueless to C++ just as my students are.\n\nSo, the blind leading the blind?\nIt's just abysmal that you even pretend to be a C++-teacher [and what about the institution that hired you for this purpose]. If you are a teacher, you would give advice and your opinion here.",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etihh5x/"
  },
  {
    "text": "You really have no idea what emacs is do you? \"Without any feature\" is very much not what anyone that knows the least bit about it would say. Emacs is really powerful.\nThat said, I defo wouldn't advice a beginner to use emacs, since it can be daunting to learn how to use effectively. VSCode Is a lot more user friendly and does most things you might want, specially once you add some plugins.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjfyut/"
  },
  {
    "text": "I am not saying it's too hard. What I am saying is to focus on teaching them how to do something cool rather them teaching them all the boiler plate and lower level stuff.  \nYou can go pretty far and build rather large project using Visual Studio Solution management without knowing how it works under the hood. If you have multiple projects, you can easily select the build order and dependency in the UI. Also, at a beginner level, I don't they will end up writing a software big enough to warrant linking with big external libraries and stuff like that.  In the same vein, I wouldn't teach them raw arrays and stuff like that. Go straight into using vector, standard algorithm, string and higher level stuff so they can more easily write cool stuff like games.\nIf programming still interests them afterwards, then they can go and learn everything else.\nTo quote my other comment:  \n\nStarting at too low level is how you end up pushing people away from programming IMO.  \nWhen  you first start to program, you want to make games, web sites, and other cool stuff. It's by easily allowing that that you can interest people in the craft. Of course, if they pursue learning the craft, they will  eventually have to understand what the hell is happening at a lower level but at first, show them how fun and easy it can be to make something cool.  \nTake two beginners, one  in Python, the other in C++. By the nature of both these language, in a few weeks, the Python one could easily be taught how to create a simple game with a UI. The C++ one will still be making console app with  endless segfault because \"he needs to know how raw pointers and memory  works before moving further\". Stop teaching C, stop starting at the very low level and C++ can be a fun starting language.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etlcqo7/"
  },
  {
    "text": "Disclaimer: I am not a lawyer. However, this is explained clearly by https://visualstudio.microsoft.com/vs/community/ in the \"For organizations\" section:\n\nAn unlimited number of users within an organization can use Visual Studio Community for the following scenarios: in a classroom learning environment, for academic research, or for contributing to open source projects.\nFor all other usage scenarios:\nIn non-enterprise organizations, up to five users can use Visual Studio Community. In enterprise organizations (meaning those with >250 PCs or >$1 Million US Dollars in annual revenue), no use is permitted beyond the open source, academic research, and classroom learning environment scenarios described above.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etjwm5y/"
  },
  {
    "text": "Why is this easier than including them [the headers you need] directly? I seriously doubt that for any student-project compile times will be affected.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/eti8jt8/"
  },
  {
    "text": "you even pretend to be a C++-teacher\n\nI guess that's true, pretending to be something that I am not, \"blind leading the blind\". The only difference is that I know more than the basics of C++, and although I have no work experience with C++, I have worked on it for two years when I was studying. I may not be able to teach them everything, but I am more than capable of teaching what they need to learn to just see if they want to go into software development.\n\nwhat about the institution that hired you for this purpose\n\nYou know how schools go. They just want to follow what is written on the stone tablets so they could operate for more money. Just a few of them actually push for change in our education system. I needed a job, they needed a teacher, so I went in. But out of my conscience and care for the future of these kids, I want to be more than just a teacher technoblabbering his way through the school year.\n\nIf you are a teacher, you would give advice and your opinion here.\n\nI disagree. Teachers, though their job is to be content experts, should also learn. And to learn, the first step would be to be honest to yourself that you don't have an idea about a thing you are to teach. That is why I am here, asking for the more expert's advice and opinions. Please don't see me as an enemy or the cause of why we have problems in our system. I am trying my best to not contribute to that problem, if I can't be part of the solution.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiihsj/"
  },
  {
    "text": "Are you mad?\nThis happens for most subjects. Most school teachers do not have backgrounds of successful professional careers in their topic. Most maths teachers don't have a maths PhD, most chemistry teachers have never worked in a lab, etc etc.\nHigh school level is so far below professional practice it's not an issue. OPs special skills are in how to teach young people, rather than being a wizard in CPP.\nUnless it's a very expensive school, no where is hiring wizard programmers to teach their 16 year olds.",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etij50y/"
  },
  {
    "text": "I guess it depends if you want to write something fun as you say or understand what you're writing.  I think understanding is top\nedit: as I reread this it sounds like I'm being an ass and I'm sorry for that but hopefully the message shines through.  I really think it's a difference in intentions",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etmcb34/"
  },
  {
    "text": "Thanks for clearing that up, I'm no lawyer either, but it looks all good [one can at least claim to be of good faith, I would say].",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etkvddu/"
  },
  {
    "text": "Sorry, just saw this.   My thinking was regarding a student.   Just a little improvement to keep them focused on the code....",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/ezpyjt4/"
  },
  {
    "text": "The only difference is that I know more than the basics of C++ ...\n\nWell, that's not a great qualification. I cook better than my wife, but that doesn't make me a chef.\n\n... and although I have no work experience with C++, I have worked on it for two years when I was studying.\n\nUnless you are seriously clever, 2 years [of daily] programming in C++ [while keeping up with the standards] doesn't get you [or me] anywhere.\n\nYou know how schools go.\n\nThat's why I'm objecting, seems to be a problem in countries like India and apparently the Philippines. The thing is that you could be better as well, but you say you are not.\n\nTeachers, though their job is to be content experts, should also learn.\n\nYes, so what happened, what stopped you from learning? Asking questions here is not gonna teach you program in C++.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etijenj/"
  },
  {
    "text": "Are you mad?\n\nNo.\nBut you do think that it's ok for the teacher 'to be as clueless as the students'? To me it seems the students are being ripped of by the school and don't get what they paid for.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etik3zi/"
  },
  {
    "text": "I completely understand, but because the public of the class seems to be more high-school, I think the focus shouldn't be on the inner workings and more on making programming interesting so that they might see it as a potential career choice.\nThat's my impression of the post anyway.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etmjf06/"
  },
  {
    "text": "I cook better than my wife, but that doesn't make me a chef.\n\nI think you are missing the point. My students are high schoolers. They don't even know the word \"programming\" exists. The point of this class I am teaching is to pique their interests and give them ideas so they could decide whether to pursue a career on software development or not. They don't need to be C++ programmers by the end of the school year; they don't need to be hired to develop games or optimized utility software by the end of the school year. The goal of the class is to give them a brief introduction to programming so they could have an informed decision if they want to specialize in software development in senior high school. I don't need to be an expert, or know much really. I just need to let them have fun with the basics and create awesome things with it.\n\nUnless you are seriously clever, 2 years [of daily] programming in C++ [while keeping up with the standards] doesn't get you [or me] anywhere.\n\nYet I have made a point-of-sale and payroll type of applications during those two years that I had been studying, the same types of application that these students are building in my class (according to the curriculum provided by the national department of education, of course). Like I said, I don't need to be an expert in C++, I just need to know more than just the basics so the students would know just what they need to enjoy programming.\n\nThe thing is that you could be better as well, but you say you are not.\n\nWhen did I say I am not, or that I couldn't be better? I repeatedly said that I am trying. Isn't asking for recommendations a part of making myself a better teacher? Isn't searching for answers a way of improving?\n\nYes, so what happened, what stopped you from learning? \n\nPlease try to read my answer more thoroughly.\n\nAsking questions here is not gonna teach you program in C++.\n\nNo it doesn't. I am asking for recommendations for an appropriate IDE to use, not how to program in C++ because I know enough to teach my students.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiki8i/"
  },
  {
    "text": "The point of this class I am teaching is to pique their interests and give them ideas so they could decide whether to pursue a career on software development or not. \n\nPurely imo but c++ doesn't sound like the call then. Cpp is super deep to the point where if you're just trying to do simple projects with kids it's probably overkill. Ime the main killer for tiny projects is the dependency management wrt other languages. Pip install x vs good luck figuring out how to compile install and link x (not to mention having to first teach the students how compiling and linking work)\nLet's say you want to setup a simple program that reads an image from a file and detects faces using opencv. You will be done in python before you have even installed opencv on the c++ side.\nWhat motivated you to pick such an in depth language to teach absolute beginners when you yourself have minimum experience to begin with?\n\nThey don't need to be C++ programmers by the end of the school year; they don't need to be hired to develop games or optimized utility software by the end of the school year. \n\nAgain then what's the point of c++ here? The benefit of cpp (ime) is the control you get from the depth and complexity. If you're just trying to say \"hey kids look at this\" why try to make them swallow cpp? Imo if you're choosing cpp there has to be a legit justification for dealing with the language complexity and build systems. Otherwise try python seriously.\nDisclaimer: I'm not trying to say cpp is bad i actually love c++, just it wouldn't be my choice language for building  simple projects with high schoolers esp if this is just a 1 year thing.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/cbtjtc/which_ide_for_c_would_you_recommend_for_beginners/etiy5cg/"
  },
  {
    "text": "Use Visual Studio (not Code!)",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpa6qtn/"
  },
  {
    "text": "I can recommend QtCreator. It is good, fast and simple with LGPL license. Was using it for baremetal, embedded Linux w/ cross compiling, Linux kernel etc... I've been using QtCreator for 10+ years now. Other IDEs I was using is custom build vim +tmux+bunch of plugins (it takes some time to get use to it, and to become productive in it), MS Visual Studio Code (excellent IDE, still my personal preference is qtcreator) and Eclipse (this thing should have never existed, yet it is still here).",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpakzi9/"
  },
  {
    "text": "Just get the golden standard on Windows: https://visualstudio.microsoft.com/vs/community/, why even consider something else?",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpa9q5n/"
  },
  {
    "text": "before I start my data structures class next quarter\n\nTo add on to what the others have said, make sure to find out how you're getting graded in that data structures class. In some schools, your assignments are compiled and run on a linux machine, and your grades come from the results of running it on that linux machine.\nOtherwise, I agree that Visual Studio (the IDE, not VSCode) is the best option to go with on Windows, just make sure that your code compiles and runs correctly on the machines that you'll be graded on before you submit.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpdumk6/"
  },
  {
    "text": "\u200b\nBetter is subjective. The easiest and fastest is probably C++Builder.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpe8scd/"
  },
  {
    "text": "has anyone tried clion yet?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpb40a9/"
  },
  {
    "text": "Unix like environments are best for c++ and c for a reason, use that with a editor of your choice, if you want vscode you can compile from terminal or you can get a text editor like vim or emacs",
    "score": -2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpa9chc/"
  },
  {
    "text": "Vs code",
    "score": -5,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpaalma/"
  },
  {
    "text": "oh shoot didn\u2019t even realize there was a difference. i\u2019ll see it, thanks!",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpagybn/"
  },
  {
    "text": "most of the cs classes at my university are graded off of a linux machine. we connect to the school\u2019s computer system through ssh, paste our project in there, and do some handin command to get credit",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpki73t/"
  },
  {
    "text": "I develop C++ on mac and use it daily. It\u2019s far better than Xcode in my opinion.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpb7i92/"
  },
  {
    "text": "Not an IDE",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpe4d2j/"
  },
  {
    "text": "Yeah, MS made it really confusing but 'Code is just a text editor and VS is a full blown (and admittedly the best) IDE out there",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpahjde/"
  },
  {
    "text": "does it support remote development like vscode? i.e. having all the tool chain and configuration living within a docker container?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpb7qma/"
  },
  {
    "text": "Better than ide i know its text editor but better",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpe4vyu/"
  },
  {
    "text": "oh ok. so Visual Studio and Visual Studio Code are 2 different things and I want to be using (or try) Visual Studio, right?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpkic9t/"
  },
  {
    "text": "I\u2019m not sure if there is native support (like a docker button), but I\u2019ve seen a setup before doing something similar. I don\u2019t have any documentation or experience to share sadly.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpb8mem/"
  },
  {
    "text": "It's a solid editor, but I wouldn't say it's better. It depends on your preference. If you like IDEs, Visual Studio is probably the best one for C++. If you prefer editors, VS Code is one of the best options.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpecc53/"
  },
  {
    "text": "Yes",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp_questions/comments/lv4hoo/what_is_the_best_c_ide_that_i_can_download/gpkijat/"
  },
  {
    "text": "Visual Studio and QtCreator are absolutely the best IDEs in my experience.",
    "score": 150,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo8a8s/"
  },
  {
    "text": "My opinion, QtCreator for C++.",
    "score": 41,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo9uan/"
  },
  {
    "text": "vim + gutentags (ctags code naviguation/autocompletion) + ALE (linter and static code analysis: clang-check, cppcheck, flawfinder, etc) + ConqueGDB.\nWorks on all platforms, lightweight, fast as hell, configured to work on multiple code base (not just c++). Integrate perfectly with command line tools, so you never have to learn tools twice to achieve the same workflow.\nHave been working for more than 10 years with that setup (or close to it) at 4 different companies, never had to relearn (I insist on the RE, learning is part of our everyday job) a tool since.",
    "score": 39,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodiqx/"
  },
  {
    "text": "CLion, I like the fact I can carry my idea across all three major operating systems.",
    "score": 45,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoez5m/"
  },
  {
    "text": "I really like QtCreator. It has a minimal UI (which is rather refreshing compared to something like Visual Studio or Eclipse where the UI feels super cluttered) and has good support for CMake, QMake, and QBS based projects. The clang code model has no problems with any sort of code I have thrown at it, and the application handles large projects well. It integrates Qt Designer and ships with stuff to make debugging Qt applications nicer, but works just as well for projects that don't use Qt.",
    "score": 54,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo8lpq/"
  },
  {
    "text": "C-Lion has gotten really good after the last few updates.",
    "score": 69,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoael3/"
  },
  {
    "text": "Visual Studio has its quirks but it is the best.",
    "score": 60,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoc89h/"
  },
  {
    "text": "Vim + YouCompleteMe + gdb for developing on remote machines only reachable through SSH",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp7e9l/"
  },
  {
    "text": "[deleted]",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzocu6y/"
  },
  {
    "text": "For me VS Code worked out pretty well, with a few extensions :)",
    "score": 30,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo7vpd/"
  },
  {
    "text": "This comes up a lot. There was a poll:  \nhttps://www.reddit.com/r/cpp/comments/7yvned/results_of_the_poll_about_the_most_used_cc_ides/",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzopr2w/"
  },
  {
    "text": "I haven't used it in a while, but I would still guess that its Visual Studio with Visual Assist X, that is if you're okay with staying on Windows. If I were to use C++ professionally again that would be only on Linux though, so for that I would go with CLion probably.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoh3t2/"
  },
  {
    "text": "I love CLion. However it costs money. In my opinion worth it. The nice thing is that even though they do it as a subscription, you get a fall back license so it's not like you're renting the software.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzojnj8/"
  },
  {
    "text": "Sublime Text (with EasyClangComplete , SublimeLinter-Clang & CImproved plugins) for normal stuffs and Visual Studio for heavyweight IDE stuffs.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzorrfq/"
  },
  {
    "text": "Jetbrains CLion is magical",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzow3qx/"
  },
  {
    "text": "Spacemacs + ycmd + rtags.",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodhny/"
  },
  {
    "text": "emacs",
    "score": 18,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodstp/"
  },
  {
    "text": "QtCreator if you need it, Vim if you don't.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoi94i/"
  },
  {
    "text": "Visual Studio + Visual Assist X with Sublime Text for quick file editing and viewing.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoci9s/"
  },
  {
    "text": "The system used and what you developed have a great impact. For windows developers, visual studio is a good one. Linux or cross-platform GUI apps, Qt is one of the best, unless you want to use gtk. For macOS, xcode maybe is the only one. If you have enough knowledge how to work in terminal, emacs or vim with other tool chain(such as llvm, langserver, make, and so on) is better, which can be used anywhere and you can customize them and only install what  you really need. CLion is also nice, but it is written in Java and sometimes may not work satisfying.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpc0qe/"
  },
  {
    "text": "I use KDevelop on Linux, Visual Studio on Windows. KDevelop has great highlighting and code navigation, and VS since it's the most integrated with Windows I think.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo9sth/"
  },
  {
    "text": "emacs + evil + lsp-cquery",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo7zym/"
  },
  {
    "text": "vim + tmux\nThe only way to go.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp0rtv/"
  },
  {
    "text": "emacs with the cmake-ide package",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodbco/"
  },
  {
    "text": "Visual Studio is best if you don't have millions of Loc and you need to debug it quite frequently. 32 bit Visual studio  is too buggy for debugging. In Linux, QtCreator is the rock star, no matter how big is the project, QtCreator handles it well.\nTo make full use, you should use Visual Assist with Visual Studio and Locator with QTCreator.\nVim days are gone. VSCode, Atom, Sublime are distractions.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoh7rz/"
  },
  {
    "text": "Clion, they are highly involved in the C++ Community and also tend to be really quick in updating to a new version of the standard.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzobgzo/"
  },
  {
    "text": "QtCreator without a doubt.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoc3n2/"
  },
  {
    "text": "I made a poll about this once, you can check it out here: https://www.reddit.com/r/cpp/comments/7ydk8y/bestworst_c_ide_you_have_ever_used/",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo9ftm/"
  },
  {
    "text": "I really like SlickEdit. It handles my very large C++ project of over 18,000 files very quickly. It indexes all the symbols and I can quickly find the definition of a symbol or all cross-references to it. Each text search results are shown in a new search tab, so I can double click on any search result, or my old search result (in previous tabs) and it opens the file at the line number of the search result. It can do regular expression searches, and it has excellent VIM and emacs emulation. It is also cross-platform and runs on Mac, Linux and Windows. Been using it for many many years. The IDE is written in C++ itself so it is very very fast. Additionally whenever I have an issue or question, I post it on the SlickEdit forum, and developers or devoted community members answer it. When I find a bug, it is quickly fixed by the developers. It is not free but it is very very worth its price.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzor2hd/"
  },
  {
    "text": "VS Code for sure. I maintain a large library with has both C++ and Java code, with a JNI library to interface between the 2, and VS Code is the only editor where I can work on both, with full intellisense for both, at the same time. Once you get the json files built out, it's a dream. And I'm working on some Gradle plugins so allow it to generate the project information and automate even that. The extensibility and cleanliness of the extension API is simply amazing. And being able to edit support and build files with some support from the same editor, it's kind of unbeatable.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzou1gc/"
  },
  {
    "text": "Heh - I am the odd one out - I use Xcode on a Mac.\nI like clang / llvm. Also, the debugger is excellent.\nIf vscode gets good CMake support and C++ completion, then I will check that out at some point. I've used vscode for typescript and js and it was better than anything I've used before.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoyrjh/"
  },
  {
    "text": "emacs + cquery",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp0ct0/"
  },
  {
    "text": "juCi++; fast, stable, cross platform, easy to use, supports latest C++ standards trough tight libclang integration, written in \"modern\" C++.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp44j3/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpbmd2/"
  },
  {
    "text": "Visual studio Hands down. Nothing can beat visual studio.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzq3cka/"
  },
  {
    "text": "KDevelop is my personal favorite because CMake integration is easy to pull off and I prefer to make my projects as portable as possible.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzq6gu6/"
  },
  {
    "text": "VS to a point of making one feel there's no real true competition. It's not perfect, but it's amazing.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzqgrcp/"
  },
  {
    "text": "I really like the work-flow that Vim (with NERDTree, restore view and YouCompleteMe) gives. In my experience, it's the best.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzob67h/"
  },
  {
    "text": "I use Eclipse with CDT. It's a decent IDE.  Takes a little work to configure but works well once it is. I build outside of Eclipse though.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodlto/"
  },
  {
    "text": "vim + gtags.\nEvery time I have tried to use a \"real\" IDE for C++ I hit enough annoying little performance lockups, buggy code completion, and badly designed UI that I decide it's not worth it. I'd rather give up the supposed advantages than be stressed and distracted by the problems. I mean, when you're writing code milliseconds of UI hang are super annoying. All the IDEs struggle with the fact that C++ is barely parseable.",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzobynu/"
  },
  {
    "text": "CLion!!!",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzocmhk/"
  },
  {
    "text": "Visual Studio and VS Code on non-Windows platforms has been the best for me. VS has it's bugs and I don't know why the damn Intellisense stops working when it wants to but it's the best out there. It's got macros and code completions that take into account what sort of a code design you are adopting. Good stuff",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoe5zz/"
  },
  {
    "text": "CLion.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzonhje/"
  },
  {
    "text": "Visual studio + Whole Tomato Visual Assist as my main IDE setup even if I am targeting Linux. I generally follow dev/debug on windows and deploy on linux paradigm. \nWith Window 10 Linux Subsystem bash, I don't need a separate Linux dev machine. I actually deploy our linux production builds using WSL.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzor6ta/"
  },
  {
    "text": "vi",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzodxw6/"
  },
  {
    "text": "The answer is: depends.\nFirst, what OS are you developing on? \nWhat OS are you developing for?\nAre you developing command line, a background process, a GUI, a game?\nFor instance, I develop multiplatform, do ML, and do embedded. I use a mac as a desktop as it allows for the embedded and for Linux development. I use Visual Studio Code(+platformio) for the embedded and XCode for the command line or daemon stuff aimed at Linux as its debugging, tracing, memory stuff etc is the best on Mac. I like Mac for Linux development because the Unix base of both allows for nearly identical code to work well without having to fight with Linux as a desktop.\nI develop multi-platform GUI apps in QtCreator. And finally I use Sublime for the occasional Web work.\nThat all said, Visual Studio on the PC is by far the best IDE but so little of my stuff is for Windows only that I don't get to use it much.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoh640/"
  },
  {
    "text": "Cevelop (based on eclipse)",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo8v7e/"
  },
  {
    "text": "Vim + ctags + ycm + gdb/lldb",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoxmdm/"
  },
  {
    "text": "cquery (+ kakoune + kak-lsp) is my IDE. It's pretty incredible how fast and accurate it is.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo978f/"
  },
  {
    "text": "Visual Studio is a bit heavy handed for me, I prefer minimal style editors. Like Sublime with a c++ code extension. I use that when I am working with a system that I know through and through, when I am working on a new system, I'll use Visual Studio to have reliable autocorrect.\nI need to checkout C-Lion/appcode from Jetbrains, though.\n(I make mobile games in c++)",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzo9xgv/"
  },
  {
    "text": "Notepad + cmd",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoje9n/"
  },
  {
    "text": "The latest version of Visual Studio hands down. Since they've added the \"open folder\" and cmake support my workflow has significantly improved. The Linux compiling/debugging story is pretty awesome too, I'm interested to see how features like this will continue to improve.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzondlg/"
  },
  {
    "text": "(Atom + CQuery) + Terminal",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzosuse/"
  },
  {
    "text": "Dev cpp",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzozjej/"
  },
  {
    "text": "I use Sublime Text for editing and Visual Studio for debugging.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp583y/"
  },
  {
    "text": "Visual studio with this extension",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp60c9/"
  },
  {
    "text": "VS Code in zen-mode. With disabled cpp tools because it's intellisense is failing to handle nested folders. \nI'm not using autocomplete other than based on words from current file, it's too distracting and always failng to provide good results in any IDE I was working with.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp756w/"
  },
  {
    "text": "Btw, any sane IDE on mac that can fully work with xcode project files?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp9yoj/"
  },
  {
    "text": "I like visual studio because it's easy to customize and hook up other build tools. VSCode is also nice.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpa799/"
  },
  {
    "text": "It depends: do you use a mouse?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpnhno/"
  },
  {
    "text": "Can I piggyback on this request and ask what open source IDE that has the least number of dependencies on the build system?  I work on an open-source project with a very special snowflake build system, and the IDEs that I have tried insist on trying to understand the build system, failing, and then get very angry.  Specific problems that I have had:\n\nKDevelop refuses to even create a project if no file called \"Makefile\" exists.  I can work around this with \"touch Makefile\", but it's a pain and I find KDevelop pretty buggy\nqtcreator insists on having the build system tell it which #defines are defined for the build, and greys out any code that is under an #ifdef it things isn't defined.  I can't find a way to disable this feature and as a result, a lot of code in this project is greyed out and hard to read and navigate.\neclipse I can't even manage to install properly under Ubuntu.  The standard packages are garbage and I had problems trying to install the version on eclipse.org\n\nDon't bother suggesting emacs or vim; I loathe editing code in a terminal.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzq6w24/"
  },
  {
    "text": "Visual Studio with Visual Assist & VSVim.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzt0we2/"
  },
  {
    "text": "Try jucipp",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzu2xlu/"
  },
  {
    "text": "Clion JetBrains",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/e0oqwi6/"
  },
  {
    "text": "KDevelop is also great. I don't use it anymore, but has nothing to do with it not working well.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/e2ncvua/"
  },
  {
    "text": "I like Code::Blocks",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoa4pn/"
  },
  {
    "text": "Unix is great",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoq11m/"
  },
  {
    "text": "Nano",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzof0lk/"
  },
  {
    "text": "Netbeans can be configured to work with Cygwin / gnu.  This is a great option if you were a former java guy.",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzofsbn/"
  },
  {
    "text": "[deleted]",
    "score": -3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzogry8/"
  },
  {
    "text": "80% of what you do in an IDE is edit text, and QtCreator unfortunately doesn't pay much attention to that aspect. The Vim-bindings are woeful, and you cannot even configure line-height.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzof10y/"
  },
  {
    "text": "What's you opinion on language servers? Don't they give you the same functionality as ALE, gutentags and much more?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp48qp/"
  },
  {
    "text": "Really cool, I've never come across ALE before, I'm having a few issues seeing it up though. Are there any guides to setting up ALE with c++? I have a project with multiple libraries, executables and third party include paths so my compiler options are not simple. I've generated a compile_commands.json but it seems the GCC and Clang linter doesn't support using this. Surely there's a better way than having to copy the compiler commands into my vimrc and updating then when I make any changes?\nThe other annoyance is that I can't seem to get line underlying for errors to work. The sidebar works correctly but not underlining. A limitation of using putty to SVN in perhaps?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzv6gpr/"
  },
  {
    "text": "How do you debug? I still need CLion to debug in ways other than cout, as I dread learning GDB.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzol8r1/"
  },
  {
    "text": "RemindMe! 5 days",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp848w/"
  },
  {
    "text": "I'd wager than qt creator works on much more OSes a\u00e7d platforms than CLion :p I've used it from ARM at least",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp52is/"
  },
  {
    "text": "idea \n\nThat's a nice typo right there. Or is it?",
    "score": 23,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzogqzn/"
  },
  {
    "text": "[removed]",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpb1ag/"
  },
  {
    "text": "Is working on three different OS - really part of your every-day work?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpf772/"
  },
  {
    "text": "While I agree on the user interface aspect, I have had nothing but trouble with the clang code model and QTC. That's not to say the old code model based on Raggi's parser didn't have its quirks, it did, but performance has never been an issue as much as lacking functionality following new C++ features. The clang code model brings my QTC instance and/or computer to its knees whenever I work with large projects.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp3odx/"
  },
  {
    "text": "[deleted]",
    "score": 10,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoq7ay/"
  },
  {
    "text": "CLion is definitely my preference now. But QtCreator is indeed very good as well, and free/open source (unlike CLion, unfortunately).",
    "score": 15,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoeg1b/"
  },
  {
    "text": "i have c-lion with the student program, and it's awesome, i love it",
    "score": 9,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzobihx/"
  },
  {
    "text": "It ridiculously expensive.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoh8oy/"
  },
  {
    "text": "Seconded. But their lldb interface leaves a lot to be desired",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzofggj/"
  },
  {
    "text": "did it get any faster",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoso29/"
  },
  {
    "text": "Can c-lion jump in reverse? Those rare cases where I actually need a debugger I always use some combination of rr and valgrind.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpn4d0/"
  },
  {
    "text": "Main quirk being, it doesn't run on Linux. :(",
    "score": 19,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp50o4/"
  },
  {
    "text": "+ Visual Assist.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp9x8g/"
  },
  {
    "text": "That's pretty much how I feel as well. I'm a huge fan of CLion and when I have filed support tickets, the folks at JetBrains have been very responsive.\nBut if you're on a super-tight budget, QtCreator is an excellent choice as well.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzrp17p/"
  },
  {
    "text": "I've also been using VS Code with extensions. It's not perfect, but it's lightweight and zippy (for an Electron based app, anyway) and suits my purposes.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoeh5t/"
  },
  {
    "text": "[deleted]",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoanv3/"
  },
  {
    "text": "Same.. can you send your vscode config if possible?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoauqn/"
  },
  {
    "text": "do you run two separate language servers, for rtags and for ycm?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzqag2e/"
  },
  {
    "text": "What do you use for tag search and autocomplete?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzogij7/"
  },
  {
    "text": "What about Qt Creator in vim mode? :-)",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzozyis/"
  },
  {
    "text": "Does VA work with the free version of VS? Also may I ask, advantages of Sublime over Notepad++?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoo48i/"
  },
  {
    "text": "My exact setup",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoa3tx/"
  },
  {
    "text": "Nah. Screen is also ok albeit inferior :)",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpncn7/"
  },
  {
    "text": "I have and use all of these, but when you say work-flow that it provides i'm not sure what you mean. \nI may be missing something a 5 year old would get but could you run me through your workflow please?",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzv9kqs/"
  },
  {
    "text": "I tested several IDEs including CLION and QT and nothing beats Eclipse when you have to deal with large project spread among different repositories. Although I build outisde of eclipse too I use eclipse external tools to launch a remote build by pressing a button.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoe9c6/"
  },
  {
    "text": "vi is only the editor of your development environment.  The tool that integrates all the tools together is your shell.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzocsko/"
  },
  {
    "text": "AppCode https://www.jetbrains.com/objc/ never used it though.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpryz2/"
  },
  {
    "text": "Occasionally, but I'd rather get away from the usage of a mouse.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpnumb/"
  },
  {
    "text": "Me too, one of the few I find it simple to understand what is going on with behind the scenes.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpaohk/"
  },
  {
    "text": "are you using the fork? Since the original project is abandoned",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzopg89/"
  },
  {
    "text": "What are the text editing features you miss in QtCreator?",
    "score": 14,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp2ytp/"
  },
  {
    "text": "Vim bindings are always terrible.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzojxeg/"
  },
  {
    "text": "[deleted]",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzs3hrc/"
  },
  {
    "text": "Who cares about vim?",
    "score": -35,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoj928/"
  },
  {
    "text": "Do you have any example by any chance? \nvim is so adaptable, this is what I like with it. I often find myself having to ssh and do actual C++ work remotely, on different computers (debugging mainly). With the proper vim config, vim can be pretty much self sufficient. If an external tool is missing: \"git clone && make\" are ~~usually~~ enough to get everything back, without any extra fuss!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzs04mj/"
  },
  {
    "text": "You can debug linter issue using the :ALEInfo and debug commands, at leat ALEInfo will tell you which linter is failing. Here is my config for ALE:\nlet g:ale_cpp_gcc_options = '$(cat ~/.compiler_options)'\nlet g:ale_cpp_clang_options = '$(cat ~/.compiler_options)'\nlet g:ale_cpp_clangtidy_options = '$(cat ~/.compiler_options)'\nlet g:ale_echo_msg_error_str = 'Error'\nlet g:ale_echo_msg_warning_str = 'Warning'\nlet g:ale_echo_msg_format = '[%linter%]%s[%severity%]'\nIs this msg format more helpful? And, yes you can hide your config away from your .vimrc! The key thing here is that you can actually execute your own script to parse the generated compiler option (instead of cat), or be lazy as me and share the same compilation option in one unique file filled manually by reverse engineering the \"compiler_option.json\". Personally, I only\n need to update it a very few time. It would be great to have something automatic though, maybe a combination of \"bear\" (tool to generate compiler options over make commands) + shell scripts?",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzvjufx/"
  },
  {
    "text": "GDB is pretty good, try this: \nhttps://cs.baylor.edu/~donahoo/tools/gdb/tutorial.html",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzosson/"
  },
  {
    "text": "In addition to the other answers, gdb can be configured to become very elegant and pleasant to work with! Please have a look at:\nhttps://github.com/cyrus-and/gdb-dashboard\nThis integrates perfectly with ConqueGDB plugin for vim (which is basically terminal inside vim)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzrzbzp/"
  },
  {
    "text": "I will be messaging you on 2018-06-04 09:05:09 UTC to remind you of this link.\nCLICK THIS LINK to send a PM to also be reminded and to reduce spam.\n^(Parent commenter can ) ^(delete this message to hide from others.)\n\n|^(FAQs)|^(Custom)|^(Your Reminders)|^(Feedback)|^(Code)|^(Browser Extensions)\n|-|-|-|-|-|-|",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp84e4/"
  },
  {
    "text": "After a quick search, it should be possible to run clion on arm. Just some tweaks and removing of bu dled executables (which are built for debian). I don't have an arm platform to test it, but it would be nice to try.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp5azf/"
  },
  {
    "text": "Hah, yeah it was a typo.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoh31d/"
  },
  {
    "text": ".idea",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoy9q8/"
  },
  {
    "text": "I use it on a 2016 MacBook, with 2 core, 1.1ghz + ht CPU and 8 gigs of ram on small-mid sized projects. I consider that a pretty weak dev machine, but I can see that it would fail on a large project (luckily for those projects I have a beefy enough system) using this hardware or on a much slower machine.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpgo1v/"
  },
  {
    "text": "Is working on three different OS - really part of your every-day work?\n\ndunno for OP but I at least work on win, mac, and linux on any given day.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpfug8/"
  },
  {
    "text": "https://en.wikipedia.org/wiki/Straw_man",
    "score": -1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpgwk8/"
  },
  {
    "text": "It used to be the case for our project a year ago but is not anymore, super fast indexing (compared to CLion), code completion and navigation.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzt7oyd/"
  },
  {
    "text": "$89 for a personal license isn't very ridiculous imo. You get a perpetual fallback license plus the cost goes down each year for the first 3 years. They also offer free licenses for open source projects and students.\nI have a subscription to the jetbrains all product pack since I program in a lot of languages on a lot of platforms and I think it's a huge value for the money. I spend more money on coffee every year than I do on the IDE licenses, to put it in perspective.",
    "score": 19,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoo6l3/"
  },
  {
    "text": "I pay annually for the entire Jetbrains pack. The amount of time their tools save me in the course of a week, is well worth more than the cost of my annual subscription.\nAdditionally they provide free licenses to open source project maintainers and students, and a few of their products have free community edition licenses (not clion however)\nSo while I'd say yes, it is expensive compared to free options, but imho it is cheap for what a professional dev gets in return. Especially if you're on Linux or mac, where the alternatives are imho not as good.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpbsa8/"
  },
  {
    "text": "You don't need to, use remote compiling (debugging) from VS.",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp6nwe/"
  },
  {
    "text": "The CMake plugin for VScode is really a class apart. It's by a 3rd party dev.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzof2rf/"
  },
  {
    "text": "depense on what plugins. i use cquery for code completion and it doesnt use  one specific to it (it will look for a compile.json from cmake or other build system) but you can just sym link it. it you want to the ms plugin that one is moslty generated for you by the plugin through your intracion from the ui.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzocmvw/"
  },
  {
    "text": "I do use Intellisense C++(planning to try something else), CMake, CMake Tools, CMake Tools helper, Native Debug. For the text I like the Atom Dark pro theme :)",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpn9xl/"
  },
  {
    "text": "I do; it's not as onerous as it sounds because the ycmd one is handled entirely automatically and it's relatively lightweight. So the only one I ever really think about is the rtags one, which is fair because it's doing quite a bit more.\nI also turn on emacs' semantic mode (but I think not global semantic mode). I did literally zero setup for it; the only thing I use it for is to get a much better quick-outline. SPC j i and SPC j I are pretty amazing in my setup, and so is treemacs with auto follow mode.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzqm6ij/"
  },
  {
    "text": "Not op however; I use RTags and company with the Irony backend. It just werks.\nEvil mode as well",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzsk3sh/"
  },
  {
    "text": "I also use emacs and I use cquery which indexes the whole project. It works quite well and is simple to setup.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp0bd2/"
  },
  {
    "text": "Emacs has autocomplete, M/, though it isn't that smart :\\\nDon't know what you mean by tag search, it of course has regular search, Cs :)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpp0kn/"
  },
  {
    "text": "Not OP, but I work with ycmd",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzogulh/"
  },
  {
    "text": "Sublime has really fast folder searching and navigation as well as the best multi point file editing I have used.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzovkwh/"
  },
  {
    "text": "VA does work with the community edition of VS",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzordh4/"
  },
  {
    "text": "do you mind sharing configs?",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoa4th/"
  },
  {
    "text": "Hi. Well, English are argued to be the language with the largest number of word and expressions, and not being a native speaker, probably I get wrong the definition of the \"work-flow\", sorry. What I mean is that with Vim, these plug-ins and some configurations, I'm very comfortable with the dynamic, efficiency and \"fluidity\" that Vim provides.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzw4u57/"
  },
  {
    "text": "give this man more upvotes please.  Simpler in this case is absolutely better.  And the last thing I ever want is a language or project that forces an IDE.",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzol5vv/"
  },
  {
    "text": "Then trying out vim (or emacs) might be a valuable experience. Unfortunately vim's learning curve is quite steep, so it comes with a price...",
    "score": 0,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpo71h/"
  },
  {
    "text": "Just 2 for now:\n\n\nCmd+S should save the file, not delete the entire line when Vim mode is active. \n\n\nConfigure line height.",
    "score": -1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp37yt/"
  },
  {
    "text": "Why does anyone want to use vim bindings?",
    "score": 4,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpfzj3/"
  },
  {
    "text": "Line height is exactly the useful feature for reading text.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzs58gy/"
  },
  {
    "text": "Oh no...",
    "score": 36,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzojd6c/"
  },
  {
    "text": "Do we really need to go down this road today?",
    "score": 26,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzojdrc/"
  },
  {
    "text": "It\u2019s treason then.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzol9if/"
  },
  {
    "text": "I still genuinely don't understand how people debug effectively with gdb. I tried for a while and it's ok if I'm inspecting something very specific, but if I try to understand how data flows through the program in general and find the point where it's going wrong, the experience is horrible for me.",
    "score": 17,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp1ilp/"
  },
  {
    "text": "please fix your typo, thx",
    "score": -9,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoz3cu/"
  },
  {
    "text": "Yeah, I do move around enough to see the advantages of using the same toolset everywhere. Also, I never said working on three different systems is part of my everyday work.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzph2qa/"
  },
  {
    "text": "or maybe just pirate it ?\nEdit: I forgot to mention, and obviously pay for the product once you're not dirt broke.",
    "score": -23,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzorh82/"
  },
  {
    "text": "I pay annually for the entire Jetbrains pack. The amount of time their tools save me in the course of a week, is well worth more than the cost of my annual subscription.\n\nit's good.\n\nthey provide free licenses to open source project maintainers and students, and a few of their products have free community edition licenses\n\nVisual studio is free for everyone, QtCreator is also free. In terms of free features, You should not compare with Visual studio and QtCreator.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpvmk0/"
  },
  {
    "text": "Ok, that's fine if I only wanted to develop in VS for Linux. But I want to run VS on Linux so I can run VS on not Windows 10. This OS as a service concept is turning out unpalatable to me.",
    "score": 11,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp74l7/"
  },
  {
    "text": "I'd like to see both your configs please!",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpcoqg/"
  },
  {
    "text": "For me it's not about simplicity, but about unlimited power.  IDEs can do very complex things with the push of a button ... but only certain things.  Once a week or so I'll find myself doing something that nobody would bother programming into an IDE because nobody will ever need to do such a thing again.  The way the shell integrates everything together makes these one-off tasks so much easier.  Once your know your tools, that is.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzovf37/"
  },
  {
    "text": "What do you mean by changing the line height? Do you mean that the editor should be able to insert padding between lines in addition to what your font provides? Why would this be useful, let alone necessary, for editing text?",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp429q/"
  },
  {
    "text": "Because they are used to them.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzrc7d1/"
  },
  {
    "text": "Ha! Yes we do if some prick expects me to adhere to 80 charcater columns on my 2K monitor.",
    "score": -57,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzojk7b/"
  },
  {
    "text": "rr is way more useful than gdb. You should try that.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpmxgz/"
  },
  {
    "text": "You could, but I'm an adult who has no issue paying a pittance to support the livelihood of fellow developers for making excellent tools that make my life easier.",
    "score": 16,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoru7x/"
  },
  {
    "text": "Run a Win10 VM on linux.\nOr docker it.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzvcow5/"
  },
  {
    "text": "https://github.com/DarkWingMcQuack/emacs_config",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpexim/"
  },
  {
    "text": "More space between lines makes text look less cramped and easier on the eyes. Even Xcode, the least customizable IDE, added 3 line height options last year. Other editors like VS Code let you specify it in points/pixels totally flexibly. \nFurthermore, configurable character spacing is also useful \u2013 I use it to compress Fira Code (with ligatures) so it doesn\u2019t look too horizontally spaced out.",
    "score": 8,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp4cd5/"
  },
  {
    "text": "Download any of IntelliJ's IDEs and go to the Font properties in the settings, you'll be able to modify the line height. Once you go 1.3 you never go back.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp8u7b/"
  },
  {
    "text": "So they are masochists?\nEdit - Spelling.",
    "score": 6,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzsemh2/"
  },
  {
    "text": "that doesn't even have anything to do with vim...",
    "score": 41,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzolcxn/"
  },
  {
    "text": "you're troubled",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzoslz2/"
  },
  {
    "text": "\"If you need more than three levels of indentation, you're screwed anyway.\"",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp2jkb/"
  },
  {
    "text": "Ooh, I vaguely remember reading about that a while ago, rr looks super useful :)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzq28qz/"
  },
  {
    "text": "great, then you do not need to pirate stuffs. But don't forget some of us can't afford those  expensive subscriptions but want to write code effectively. Also, I don't think the developers behind such massive corporations -  Jetbrains IDE Team , Microsoft Visual Studio Team - are being paid unfairly.",
    "score": -25,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzos8gx/"
  },
  {
    "text": "I never get the idea of running stuff like that in a vm, every time you may want to open it you start up a vm, its a hassle and it just seems to complicate the issue rather then solve it.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/e708dem/"
  },
  {
    "text": "Thanks! :)",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzppigr/"
  },
  {
    "text": "This puts my config to shame. I need to organize my config like yours.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/e2ncrqd/"
  },
  {
    "text": "I never thought about needing such a config. Maybe you have too many adjacent lines without a blank line?",
    "score": 5,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp8y0i/"
  },
  {
    "text": "Some of us are, but that's not why we use Vim/Vim bindings.",
    "score": 7,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzt5kt6/"
  },
  {
    "text": "\"this person made some good software, so everything they say is law\"",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp8fvn/"
  },
  {
    "text": "They're being paid fairly because people purchase their products. Funny how that works, huh?",
    "score": 24,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzostol/"
  },
  {
    "text": "Why do you believe you're entitled to someone else's work/labor without fairly compensating them?",
    "score": 12,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzp1aqx/"
  },
  {
    "text": "How are they getting paid unfairly? What are they currently getting paid relative to what they should be paid?\nIf you are a software developer then it's very rare for you to be unable to afford spending $90 a year on a tool like this. Software developers pretty much everywhere seem to be paid well enough, even in much lower col countries/cities, to pay that yearly.\nAnd if you are a student, then they have free student packs.",
    "score": 3,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzpp442/"
  },
  {
    "text": "Starting up a saved VM is literally one click. \nA VM configuration file can be passed between users for easy setup of the same environment.\nIf it goes horribly wrong somehow, you've only ruined your VM.\nIt honestly does have a lot of advantages.\nEspecially in this case where the user wants to continue using Linux but wants to use VS. it's a simple solution.",
    "score": 1,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/e70pz36/"
  },
  {
    "text": "Also, I'd like to note that, depending on your jurisdiction, you may be able to deduct the cost of tools related to your job, including software development tools, on your taxes, which does effectively reduce the cost.",
    "score": 2,
    "url": "https://www.reddit.com/r/cpp/comments/8mk8ku/c_ide/dzroxoo/"
  }
]